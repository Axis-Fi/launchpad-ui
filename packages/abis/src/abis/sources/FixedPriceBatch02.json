{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "auctionHouse_",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "INIT",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "PARENT",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "TYPE",
      "inputs": [],
      "outputs": [
        { "name": "", "type": "uint8", "internalType": "enum Module.Type" }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "VEECODE",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bytes7", "internalType": "Veecode" }],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "abort",
      "inputs": [
        { "name": "lotId_", "type": "uint96", "internalType": "uint96" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "auction",
      "inputs": [
        { "name": "lotId_", "type": "uint96", "internalType": "uint96" },
        {
          "name": "params_",
          "type": "tuple",
          "internalType": "struct IAuction.AuctionParams",
          "components": [
            { "name": "start", "type": "uint48", "internalType": "uint48" },
            { "name": "duration", "type": "uint48", "internalType": "uint48" },
            {
              "name": "capacityInQuote",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "capacity",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "implParams", "type": "bytes", "internalType": "bytes" }
          ]
        },
        {
          "name": "quoteTokenDecimals_",
          "type": "uint8",
          "internalType": "uint8"
        },
        {
          "name": "baseTokenDecimals_",
          "type": "uint8",
          "internalType": "uint8"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "auctionType",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint8",
          "internalType": "enum IAuction.AuctionType"
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "bid",
      "inputs": [
        { "name": "lotId_", "type": "uint96", "internalType": "uint96" },
        { "name": "bidder_", "type": "address", "internalType": "address" },
        { "name": "referrer_", "type": "address", "internalType": "address" },
        { "name": "amount_", "type": "uint256", "internalType": "uint256" },
        { "name": "auctionData_", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [
        { "name": "bidId", "type": "uint64", "internalType": "uint64" }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "cancelAuction",
      "inputs": [
        { "name": "lotId_", "type": "uint96", "internalType": "uint96" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "capacityInQuote",
      "inputs": [
        { "name": "lotId_", "type": "uint96", "internalType": "uint96" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "claimBids",
      "inputs": [
        { "name": "lotId_", "type": "uint96", "internalType": "uint96" },
        { "name": "bidIds_", "type": "uint64[]", "internalType": "uint64[]" }
      ],
      "outputs": [
        {
          "name": "bidClaims",
          "type": "tuple[]",
          "internalType": "struct IBatchAuction.BidClaim[]",
          "components": [
            { "name": "bidder", "type": "address", "internalType": "address" },
            {
              "name": "referrer",
              "type": "address",
              "internalType": "address"
            },
            { "name": "paid", "type": "uint256", "internalType": "uint256" },
            { "name": "payout", "type": "uint256", "internalType": "uint256" },
            { "name": "refund", "type": "uint256", "internalType": "uint256" }
          ]
        },
        { "name": "auctionOutput", "type": "bytes", "internalType": "bytes" }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "dedicatedSettlePeriod",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint48", "internalType": "uint48" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getAuctionData",
      "inputs": [
        { "name": "lotId_", "type": "uint96", "internalType": "uint96" }
      ],
      "outputs": [
        {
          "name": "auctionData_",
          "type": "tuple",
          "internalType": "struct IFixedPriceBatch.AuctionData",
          "components": [
            { "name": "price", "type": "uint256", "internalType": "uint256" },
            {
              "name": "status",
              "type": "uint8",
              "internalType": "enum IFixedPriceBatch.LotStatus"
            },
            { "name": "nextBidId", "type": "uint64", "internalType": "uint64" },
            {
              "name": "settlementCleared",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "totalBidAmount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "minFilled",
              "type": "uint256",
              "internalType": "uint256"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getBid",
      "inputs": [
        { "name": "lotId_", "type": "uint96", "internalType": "uint96" },
        { "name": "bidId_", "type": "uint64", "internalType": "uint64" }
      ],
      "outputs": [
        {
          "name": "bid",
          "type": "tuple",
          "internalType": "struct IFixedPriceBatch.Bid",
          "components": [
            { "name": "bidder", "type": "address", "internalType": "address" },
            { "name": "amount", "type": "uint96", "internalType": "uint96" },
            {
              "name": "referrer",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "status",
              "type": "uint8",
              "internalType": "enum IFixedPriceBatch.BidStatus"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getBidClaim",
      "inputs": [
        { "name": "lotId_", "type": "uint96", "internalType": "uint96" },
        { "name": "bidId_", "type": "uint64", "internalType": "uint64" }
      ],
      "outputs": [
        {
          "name": "bidClaim",
          "type": "tuple",
          "internalType": "struct IBatchAuction.BidClaim",
          "components": [
            { "name": "bidder", "type": "address", "internalType": "address" },
            {
              "name": "referrer",
              "type": "address",
              "internalType": "address"
            },
            { "name": "paid", "type": "uint256", "internalType": "uint256" },
            { "name": "payout", "type": "uint256", "internalType": "uint256" },
            { "name": "refund", "type": "uint256", "internalType": "uint256" }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getBidIdAtIndex",
      "inputs": [
        { "name": "", "type": "uint96", "internalType": "uint96" },
        { "name": "", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "uint64", "internalType": "uint64" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getBidIds",
      "inputs": [
        { "name": "", "type": "uint96", "internalType": "uint96" },
        { "name": "", "type": "uint256", "internalType": "uint256" },
        { "name": "", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [
        { "name": "", "type": "uint64[]", "internalType": "uint64[]" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getLot",
      "inputs": [
        { "name": "lotId_", "type": "uint96", "internalType": "uint96" }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct IAuction.Lot",
          "components": [
            { "name": "start", "type": "uint48", "internalType": "uint48" },
            {
              "name": "conclusion",
              "type": "uint48",
              "internalType": "uint48"
            },
            {
              "name": "quoteTokenDecimals",
              "type": "uint8",
              "internalType": "uint8"
            },
            {
              "name": "baseTokenDecimals",
              "type": "uint8",
              "internalType": "uint8"
            },
            {
              "name": "capacityInQuote",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "capacity",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "sold", "type": "uint256", "internalType": "uint256" },
            {
              "name": "purchased",
              "type": "uint256",
              "internalType": "uint256"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getNumBids",
      "inputs": [{ "name": "", "type": "uint96", "internalType": "uint96" }],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getPartialFill",
      "inputs": [
        { "name": "lotId_", "type": "uint96", "internalType": "uint96" }
      ],
      "outputs": [
        { "name": "hasPartialFill", "type": "bool", "internalType": "bool" },
        {
          "name": "partialFill",
          "type": "tuple",
          "internalType": "struct IFixedPriceBatch.PartialFill",
          "components": [
            { "name": "bidId", "type": "uint64", "internalType": "uint64" },
            { "name": "refund", "type": "uint96", "internalType": "uint96" },
            { "name": "payout", "type": "uint256", "internalType": "uint256" }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "hasEnded",
      "inputs": [
        { "name": "lotId_", "type": "uint96", "internalType": "uint96" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isLive",
      "inputs": [
        { "name": "lotId_", "type": "uint96", "internalType": "uint96" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isUpcoming",
      "inputs": [
        { "name": "lotId_", "type": "uint96", "internalType": "uint96" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "lotAuctionOutput",
      "inputs": [{ "name": "", "type": "uint96", "internalType": "uint96" }],
      "outputs": [{ "name": "", "type": "bytes", "internalType": "bytes" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "lotData",
      "inputs": [{ "name": "id", "type": "uint96", "internalType": "uint96" }],
      "outputs": [
        { "name": "start", "type": "uint48", "internalType": "uint48" },
        { "name": "conclusion", "type": "uint48", "internalType": "uint48" },
        {
          "name": "quoteTokenDecimals",
          "type": "uint8",
          "internalType": "uint8"
        },
        {
          "name": "baseTokenDecimals",
          "type": "uint8",
          "internalType": "uint8"
        },
        { "name": "capacityInQuote", "type": "bool", "internalType": "bool" },
        { "name": "capacity", "type": "uint256", "internalType": "uint256" },
        { "name": "sold", "type": "uint256", "internalType": "uint256" },
        { "name": "purchased", "type": "uint256", "internalType": "uint256" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "minAuctionDuration",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint48", "internalType": "uint48" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "refundBid",
      "inputs": [
        { "name": "lotId_", "type": "uint96", "internalType": "uint96" },
        { "name": "bidId_", "type": "uint64", "internalType": "uint64" },
        { "name": "index_", "type": "uint256", "internalType": "uint256" },
        { "name": "caller_", "type": "address", "internalType": "address" }
      ],
      "outputs": [
        { "name": "refund", "type": "uint256", "internalType": "uint256" }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "remainingCapacity",
      "inputs": [
        { "name": "lotId_", "type": "uint96", "internalType": "uint96" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "setDedicatedSettlePeriod",
      "inputs": [
        { "name": "period_", "type": "uint48", "internalType": "uint48" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setMinAuctionDuration",
      "inputs": [
        { "name": "duration_", "type": "uint48", "internalType": "uint48" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "settle",
      "inputs": [
        { "name": "lotId_", "type": "uint96", "internalType": "uint96" },
        { "name": "num_", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [
        { "name": "totalIn", "type": "uint256", "internalType": "uint256" },
        { "name": "totalOut", "type": "uint256", "internalType": "uint256" },
        { "name": "capacity", "type": "uint256", "internalType": "uint256" },
        { "name": "finished", "type": "bool", "internalType": "bool" },
        { "name": "auctionOutput", "type": "bytes", "internalType": "bytes" }
      ],
      "stateMutability": "nonpayable"
    },
    { "type": "error", "name": "Auction_AmountLessThanMinimum", "inputs": [] },
    {
      "type": "error",
      "name": "Auction_DedicatedSettlePeriod",
      "inputs": [
        { "name": "lotId", "type": "uint96", "internalType": "uint96" }
      ]
    },
    { "type": "error", "name": "Auction_InsufficientCapacity", "inputs": [] },
    {
      "type": "error",
      "name": "Auction_InvalidBidId",
      "inputs": [
        { "name": "lotId", "type": "uint96", "internalType": "uint96" },
        { "name": "bidId", "type": "uint96", "internalType": "uint96" }
      ]
    },
    {
      "type": "error",
      "name": "Auction_InvalidDuration",
      "inputs": [
        { "name": "duration_", "type": "uint48", "internalType": "uint48" },
        { "name": "minimum_", "type": "uint48", "internalType": "uint48" }
      ]
    },
    {
      "type": "error",
      "name": "Auction_InvalidLotId",
      "inputs": [
        { "name": "lotId", "type": "uint96", "internalType": "uint96" }
      ]
    },
    { "type": "error", "name": "Auction_InvalidParams", "inputs": [] },
    {
      "type": "error",
      "name": "Auction_InvalidStart",
      "inputs": [
        { "name": "start_", "type": "uint48", "internalType": "uint48" },
        { "name": "minimum_", "type": "uint48", "internalType": "uint48" }
      ]
    },
    {
      "type": "error",
      "name": "Auction_LotActive",
      "inputs": [
        { "name": "lotId", "type": "uint96", "internalType": "uint96" }
      ]
    },
    {
      "type": "error",
      "name": "Auction_LotNotActive",
      "inputs": [
        { "name": "lotId", "type": "uint96", "internalType": "uint96" }
      ]
    },
    {
      "type": "error",
      "name": "Auction_LotNotConcluded",
      "inputs": [
        { "name": "lotId", "type": "uint96", "internalType": "uint96" }
      ]
    },
    { "type": "error", "name": "Auction_NotAuthorized", "inputs": [] },
    { "type": "error", "name": "Auction_NotBidder", "inputs": [] },
    { "type": "error", "name": "Auction_NotImplemented", "inputs": [] },
    { "type": "error", "name": "Auction_OnlyLotOwner", "inputs": [] },
    {
      "type": "error",
      "name": "Auction_WrongState",
      "inputs": [
        { "name": "lotId", "type": "uint96", "internalType": "uint96" }
      ]
    },
    {
      "type": "error",
      "name": "Bid_WrongState",
      "inputs": [
        { "name": "lotId", "type": "uint96", "internalType": "uint96" },
        { "name": "bidId", "type": "uint64", "internalType": "uint64" }
      ]
    },
    {
      "type": "error",
      "name": "Module_InvalidParent",
      "inputs": [
        { "name": "parent_", "type": "address", "internalType": "address" }
      ]
    },
    { "type": "error", "name": "Module_OnlyInternal", "inputs": [] },
    {
      "type": "error",
      "name": "Module_OnlyParent",
      "inputs": [
        { "name": "caller_", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "NotPermitted",
      "inputs": [
        { "name": "caller", "type": "address", "internalType": "address" }
      ]
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "631:19949:92:-:0;;;1369:288;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1432:13;;-1:-1:-1;;;;;11339:21:87;;11335:63;;11369:29;;-1:-1:-1;;;11369:29:87;;-1:-1:-1;;;;;473:32:105;;11369:29:87;;;455:51:105;428:18;;11369:29:87;;;;;;;11335:63;-1:-1:-1;;;;;11409:16:87;;;-1:-1:-1;;1520:18:92::1;:27:::0;;1541:6:::1;-1:-1:-1::0;;1520:27:92;;::::1;::::0;::::1;::::0;;;1620:21:::1;:30:::0;;;;::::1;::::0;;::::1;::::0;;631:19949;;14:290:105;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:105;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:105:o;309:203::-;631:19949:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101e45760003560e01c80637d9234bc1161010f578063b04046df116100a2578063cd280bdb11610071578063cd280bdb1461064d578063d61735ca14610671578063d899a33714610688578063ea6439141461069c57600080fd5b8063b04046df146105f8578063bae96bdd1461060b578063bb24fe8a1461061e578063cadb33831461062d57600080fd5b8063a16f7ef7116100de578063a16f7ef71461054a578063a85cebb614610599578063a8bf44e4146105ab578063ace54da5146105cb57600080fd5b80637d9234bc146104e757806387698a31146105085780638f21c3181461051b578063994595e11461053b57600080fd5b80631ed75f1f11610187578063541348761161015657806354134876146103c25780635806afc3146103eb578063732efc03146104a65780637d7b6853146104b957600080fd5b80631ed75f1f146102e157806329da5abd146102f457806339792cdc146103075780634e1f42581461033a57600080fd5b80630a35511b116101c35780630a35511b1461024c5780630cd0bcf21461026d578063122b83f91461028d57806312d6ef2d146102cc57600080fd5b8062b33217146101e957806303855921146102165780630440ec5314610239575b600080fd5b6102006101f736600461283d565b60609392505050565b60405161020d9190612870565b60405180910390f35b6102296102243660046128bd565b6106a4565b604051901515815260200161020d565b6102296102473660046128bd565b6106ff565b61025f61025a3660046128d8565b610786565b60405161020d9291906129de565b61028061027b3660046128bd565b6108a2565b60405161020d9190612a35565b6102b47f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161020d565b6102df6102da366004612a5e565b61093c565b005b6102df6102ef3660046128bd565b6109a7565b6102df610302366004612a5e565b610ac2565b6102296103153660046128bd565b6001600160601b0316600090815260016020526040902054600160701b900460ff1690565b61034d6103483660046128bd565b610b59565b60405161020d919060006101008201905065ffffffffffff8084511683528060208501511660208401525060ff604084015116604083015260ff606084015116606083015260808301511515608083015260a083015160a083015260c083015160c083015260e083015160e083015292915050565b6000546103d49065ffffffffffff1681565b60405165ffffffffffff909116815260200161020d565b6104596103f93660046128bd565b6001602081905260009182526040909120805491810154600282015460039092015465ffffffffffff80851694600160301b81049091169360ff600160601b8304811694600160681b8404821694600160701b9094049091169290919088565b6040805165ffffffffffff998a16815298909716602089015260ff958616968801969096529390921660608601521515608085015260a084015260c083015260e08201526101000161020d565b6102296104b43660046128bd565b610bf6565b6104cf6104c7366004612a79565b600092915050565b6040516001600160401b03909116815260200161020d565b6104fa6104f5366004612ad1565b610c7e565b60405190815260200161020d565b6104cf610516366004612b1e565b610dba565b61052e610529366004612bca565b610ee6565b60405161020d9190612bfd565b600160405161020d9190612c31565b61055d6105583660046128bd565b610f1b565b60408051921515835281516001600160401b03166020808501919091528201516001600160601b0316838201520151606082015260800161020d565b6002546103d49065ffffffffffff1681565b6105be6105b9366004612bca565b610fa2565b60405161020d9190612c44565b6104fa6105d93660046128bd565b6001600160601b03166000908152600160208190526040909120015490565b6102df6106063660046128bd565b61107e565b6102df610619366004612d20565b6111c4565b600060405161020d9190612e46565b61064061063b3660046128bd565b6114a8565b60405161020d9190612e5a565b61066061065b366004612a79565b611582565b60405161020d959493929190612eb1565b6040516530324650424160d01b815260200161020d565b6104fa6106963660046128bd565b50600090565b6102df61170f565b6001600160601b03811660009081526001602052604081205465ffffffffffff600160301b9091048116429091161015806106f957506001600160601b03821660009081526001602081905260409091200154155b92915050565b6001600160601b0381166000908152600160208190526040822001541580159061075457506001600160601b03821660009081526001602052604090205465ffffffffffff600160301b909104811642909116105b80156106f95750506001600160601b031660009081526001602052604090205465ffffffffffff908116429091161090565b606080336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146107d9576040516366e069e160e01b81523360048201526024015b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635c774ed76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610837573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085b9190612ede565b156108795760405163115250c560e21b815260040160405180910390fd5b6108828561175c565b61088b856117a7565b610896858585611801565b91509150935093915050565b600360205260009081526040902080546108bb90612efb565b80601f01602080910402602001604051908101604052809291908181526020018280546108e790612efb565b80156109345780601f1061090957610100808354040283529160200191610934565b820191906000526020600020905b81548152906001019060200180831161091757829003601f168201915b505050505081565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610987576040516366e069e160e01b81523360048201526024016107d0565b6000805465ffffffffffff191665ffffffffffff92909216919091179055565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146109f2576040516366e069e160e01b81523360048201526024016107d0565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635c774ed76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a50573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a749190612ede565b15610a925760405163115250c560e21b815260040160405180910390fd5b610a9b8161175c565b610aa4816119b9565b610aad81611a38565b610ab681611ac4565b610abf81611b1e565b50565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610b0d576040516366e069e160e01b81523360048201526024016107d0565b62093a808165ffffffffffff161115610b3957604051633350f82560e11b815260040160405180910390fd5b6002805465ffffffffffff191665ffffffffffff92909216919091179055565b610b6161279c565b506001600160601b0316600090815260016020818152604092839020835161010081018552815465ffffffffffff8082168352600160301b8204169382019390935260ff600160601b8404811695820195909552600160681b830485166060820152600160701b909204909316151560808201529082015460a0820152600282015460c082015260039091015460e082015290565b6001600160601b03811660009081526001602081905260408220015415801590610c4b57506001600160601b03821660009081526001602052604090205465ffffffffffff600160301b909104811642909116105b80156106f95750506001600160601b031660009081526001602052604090205465ffffffffffff90811642909116101590565b6000336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610ccb576040516366e069e160e01b81523360048201526024016107d0565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635c774ed76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d29573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d4d9190612ede565b15610d6b5760405163115250c560e21b815260040160405180910390fd5b610d748561175c565b610d7d85611b47565b610d878585611b98565b610d92858584611c6c565b610d9c8585611cd4565b610da585611d5a565b610db185858585611df7565b95945050505050565b6000336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610e07576040516366e069e160e01b81523360048201526024016107d0565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635c774ed76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e65573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e899190612ede565b15610ea75760405163115250c560e21b815260040160405180910390fd5b610eb08761175c565b610eb987611b47565b610ec287611d5a565b610ecb87611ac4565b610ed9878787878787611e8b565b90505b9695505050505050565b610eee6127e0565b610ef78361175c565b610f00836117a7565b610f0a8383611b98565b610f148383612198565b9392505050565b60408051606081018252600080825260208201819052918101829052610f408361175c565b610f49836117a7565b50506001600160601b03908116600090815260066020908152604091829020825160608101845281546001600160401b038116808352600160401b90910490951692810192909252600101549181019190915290151591565b610fca6040805160808101825260008082526020820181905291810182905290606082015290565b610fd38361175c565b610fdd8383611b98565b6001600160601b0383811660009081526005602090815260408083206001600160401b0387168452825291829020825160808101845281546001600160a01b038082168352600160a01b918290049096169382019390935260018083015495861694820194909452939092606085019290910460ff169081111561106357611063612c0b565b600181111561107457611074612c0b565b9052509392505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146110c9576040516366e069e160e01b81523360048201526024016107d0565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635c774ed76040518163ffffffff1660e01b8152600401602060405180830381865afa158015611127573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061114b9190612ede565b156111695760405163115250c560e21b815260040160405180910390fd5b6111728161175c565b61117b81611d5a565b611184816123a6565b6001600160601b03166000908152600160208190526040822080546bffffffffffff0000000000001916600160301b4265ffffffffffff16021781550155565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461120f576040516366e069e160e01b81523360048201526024016107d0565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635c774ed76040518163ffffffff1660e01b8152600401602060405180830381865afa15801561126d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112919190612ede565b156112af5760405163115250c560e21b815260040160405180910390fd5b825165ffffffffffff16158015906112d25750825165ffffffffffff4281169116105b15611306578251604051639421aa8960e01b815265ffffffffffff91821660048201524290911660248201526044016107d0565b600054602084015165ffffffffffff918216911610156113535760208301516000546040516302c1012760e21b815265ffffffffffff9283166004820152911660248201526044016107d0565b61135b61279c565b835165ffffffffffff1615611371578351611373565b425b65ffffffffffff16808252602085015161138c91612f4b565b65ffffffffffff16602082015260ff8084166040808401919091529083166060808401919091529085015115156080808401919091529085015160a08301528401516113db90869083906123af565b6001600160601b039490941660009081526001602081815260409283902087518154928901519489015160608a015160808b015165ffffffffffff9384166bffffffffffffffffffffffff1990961695909517600160301b93909716929092029590951761ffff60601b1916600160601b60ff9687160260ff60681b191617600160681b95909116949094029390931760ff60701b1916600160701b9115159190910217825560a08601519082015560c0850151600282015560e090940151600390940193909355505050565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a08101919091526114e38261175c565b6001600160601b038216600090815260046020908152604091829020825160c0810190935280548352600180820154919284019160ff169081111561152a5761152a612c0b565b600181111561153b5761153b612c0b565b8152600182015461010081046001600160401b03166020830152600160481b900460ff16151560408201526002820154606082015260039091015460809091015292915050565b60008080806060336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146115d4576040516366e069e160e01b81523360048201526024016107d0565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635c774ed76040518163ffffffff1660e01b8152600401602060405180830381865afa158015611632573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116569190612ede565b156116745760405163115250c560e21b815260040160405180910390fd5b61167d8761175c565b61168687611b47565b61168f8761247d565b61169887611ac4565b6001600160601b03871660009081526001602052604090206116ba8888612539565b6001600160601b038c166000908152600160209081526040808320600380820189905560029091018790559091529020939950919750945092506116fe8382612fb8565b506001015492509295509295909350565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461175a576040516366e069e160e01b81523360048201526024016107d0565b565b6001600160601b03811660009081526001602052604081205465ffffffffffff169003610abf57604051638c54233f60e01b81526001600160601b03821660048201526024016107d0565b6001600160601b038116600090815260046020526040902060019081015460ff16818111156117d8576117d8612c0b565b14610abf57604051636985f4c960e11b81526001600160601b03821660048201526024016107d0565b60608082806001600160401b0381111561181d5761181d612c93565b60405190808252806020026020018201604052801561185657816020015b6118436127e0565b81526020019060019003908161183b5790505b50925060005b818110156119af576118948787878481811061187a5761187a613077565b905060200201602081019061188f919061308d565b611b98565b6118c4878787848181106118aa576118aa613077565b90506020020160208101906118bf919061308d565b611cd4565b6001600160601b03871660009081526005602052604081206001918888858181106118f1576118f1613077565b9050602002016020810190611906919061308d565b6001600160401b03166001600160401b0316815260200190815260200160002060010160146101000a81548160ff0219169083600181111561194a5761194a612c0b565b021790555061197f8787878481811061196557611965613077565b905060200201602081019061197a919061308d565b612198565b84828151811061199157611991613077565b602002602001018190525080806119a7906130a8565b91505061185c565b5050935093915050565b6001600160601b03811660009081526001602052604090205465ffffffffffff600160301b909104811642909116108015611a0f57506001600160601b0381166000908152600160208190526040909120015415155b15610abf5760405163f7babce560e01b81526001600160601b03821660048201526024016107d0565b6001600160601b03811660009081526001602052604090205465ffffffffffff600160301b90910481169042168111801590611a975750600254611a849065ffffffffffff1682612f4b565b65ffffffffffff164265ffffffffffff16105b15611ac057604051630340ca2960e11b81526001600160601b03831660048201526024016107d0565b5050565b6001600160601b038116600090815260046020526040902060019081015460ff1681811115611af557611af5612c0b565b03610abf57604051636985f4c960e11b81526001600160601b03821660048201526024016107d0565b6001600160601b031660009081526004602052604090206001908101805460ff19169091179055565b6001600160601b03811660009081526001602052604090205465ffffffffffff908116429091161015610abf576040516306f6ec2760e31b81526001600160601b03821660048201526024016107d0565b6001600160601b0382166000908152600460205260409020600101546001600160401b03610100909104811690821610611bff576040516322a16ebf60e01b81526001600160601b03831660048201526001600160401b03821660248201526044016107d0565b6001600160601b03821660009081526005602090815260408083206001600160401b03851684529091529020546001600160a01b0316611ac0576040516322a16ebf60e01b81526001600160601b03831660048201526001600160401b03821660248201526044016107d0565b6001600160601b03831660009081526005602090815260408083206001600160401b03861684529091529020546001600160a01b03828116911614611ccf576040516319b1d90760e31b81526001600160a01b03821660048201526024016107d0565b505050565b60016001600160601b03831660009081526005602090815260408083206001600160401b03861684529091529020600190810154600160a01b900460ff1690811115611d2257611d22612c0b565b03611ac057604051631359755560e11b81526001600160601b03831660048201526001600160401b03821660248201526044016107d0565b6001600160601b03811660009081526001602052604090205465ffffffffffff600160301b90910481164290911610611db1576040516306f6ec2760e31b81526001600160601b03821660048201526024016107d0565b6001600160601b0381166000908152600160208190526040822001549003610abf576040516306f6ec2760e31b81526001600160601b03821660048201526024016107d0565b6001600160601b0384166000908152600460209081526040808320600583528184206001600160401b038816855290925282206001808201805460ff60a01b1916600160a01b8302179055508054600283018054600160a01b9092046001600160601b031691600090611e6b9084906130c1565b909155505054600160a01b90046001600160601b03169695505050505050565b6000831580611ea057506001600160601b0384115b15611ebe57604051633350f82560e11b815260040160405180910390fd5b6001600160601b038716600090815260016020818152604080842083015460049092528320808301805492949193919261010090046001600160401b031691611f06836130d4565b91906101000a8154816001600160401b0302191690836001600160401b031602179055509050600087905060405180608001604052808b6001600160a01b03168152602001826001600160601b031681526020018a6001600160a01b0316815260200160006001811115611f7c57611f7c612c0b565b90526001600160601b03808d1660009081526005602090815260408083206001600160401b0388168452825291829020845191850151909316600160a01b9081026001600160a01b039283161784559184015160018085018054929093166001600160a01b03198316811784556060870151946001600160a81b0319909316179190849081111561200f5761200f612c0b565b02179055509050508783600201600082825461202b91906130fa565b90915550506001600160601b038b1660009081526001602052604081205461205e90600160681b900460ff16600a6131f1565b90506000612075856002015483876000015461262a565b90508581101561208d57839650505050505050610edc565b8581111561214b576120a784878386868a600001546126d1565b6001600160601b038e8116600090815260066020908152604080832085518154938701516001600160401b039091166001600160a01b031990941693909317600160401b93861684021780825595909101516001909101556002890180549190940490921692916121199084906130c1565b90915550506002850154855460009161213391859061262a565b9050856003015481101561214957600386018190555b505b5050506001600160601b0399909916600090815260016020526040902080546bffffffffffff0000000000001916600160301b4265ffffffffffff16021790555096979650505050505050565b6121a06127e0565b6001600160601b0383811660009081526005602090815260408083206001600160401b03871684528252808320815160808101835281546001600160a01b038082168352600160a01b918290049097169482019490945260018083015496871693820193909352939490926060850192910460ff169081111561222557612225612c0b565b600181111561223657612236612c0b565b90525080516001600160a01b0390811684526040808301519091166020808601919091526001600160601b038716600090815260049091522060010154909150600160481b900460ff1615612379576001600160601b0384166000908152600660205260409020546001600160401b038085169116036122fd576020808201516001600160601b03908116604080860191909152868216600081815260068086529281206001810154606089015291905292529054600160401b900416608083015261239f565b602081810180516001600160601b03908116604086810191909152915187821660009081526001909452919092205461236892919091169061234a90600160681b900460ff16600a6131f1565b6001600160601b03871660009081526004602052604090205461262a565b60608301526000608083015261239f565b6020810180516001600160601b0390811660408501526000606085015290511660808301525b5092915050565b611b1e8161247d565b6000818060200190518101906123c59190613200565b80519091506000036123ea57604051633350f82560e11b815260040160405180910390fd5b61271065ffffffffffff16816020015162ffffff16111561241e57604051633350f82560e11b815260040160405180910390fd5b6001600160601b03841660009081526004602090815260409091208251815560018101805468ffffffffffffffff00191661010017905560a08501519183015190916124719162ffffff1661271061276e565b60039091015550505050565b6001600160601b038116600090815260046020526040812060019081015460ff16908111156124ae576124ae612c0b565b1480156124dd57506001600160601b0381166000908152600160205260409020544265ffffffffffff90911611155b801561251057506001600160601b03811660009081526001602052604090205442600160301b90910465ffffffffffff16115b15610abf57604051636985f4c960e11b81526001600160601b03821660048201526024016107d0565b6001600160601b03821660009081526004602090815260408083206001808201805460ff19168217905560029091015492528220548291829160609183916125af919061259190600160681b900460ff16600a6131f1565b6001600160601b038a1660009081526004602052604090205461262a565b6001600160601b0388166000908152600460205260409020600301549091508110156125df575060019150612621565b6001600160601b03871660009081526004602052604090206001818101805469ff0000000000000000001916600160481b179055600290910154955090935091505b92959194509250565b6000838302600019848609818110820190038061265f57836126545763ae47f7026000526004601cfd5b508290049050610f14565b8084116126745763ae47f7026000526004601cfd5b83858709600085810386169586900495848311909303908390038390046001010292030417600383026002908118808502820302808502820302808502820302808502820302808502820302808502909103020290509392505050565b60408051606081018252600080825260208201819052918101829052906127026001600160601b038616858561262a565b9050600061271088886130c1565b90506000612728876001600160601b0316838561276e565b9050600061273683856130c1565b604080516060810182526001600160401b038e1681526001600160601b03909416602085015283015250925050509695505050505050565b600061277b84848461262a565b90508183850915610f145760010180610f145763ae47f7026000526004601cfd5b6040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e081019190915290565b6040518060a0016040528060006001600160a01b0316815260200160006001600160a01b031681526020016000815260200160008152602001600081525090565b80356001600160601b038116811461283857600080fd5b919050565b60008060006060848603121561285257600080fd5b61285b84612821565b95602085013595506040909401359392505050565b6020808252825182820181905260009190848201906040850190845b818110156128b15783516001600160401b03168352928401929184019160010161288c565b50909695505050505050565b6000602082840312156128cf57600080fd5b610f1482612821565b6000806000604084860312156128ed57600080fd5b6128f684612821565b925060208401356001600160401b038082111561291257600080fd5b818601915086601f83011261292657600080fd5b81358181111561293557600080fd5b8760208260051b850101111561294a57600080fd5b6020830194508093505050509250925092565b80516001600160a01b039081168352602080830151909116908301526040808201519083015260608082015190830152608090810151910152565b6000815180845260005b818110156129be576020818501810151868301820152016129a2565b506000602082860101526020601f19601f83011685010191505092915050565b604080825283519082018190526000906020906060840190828701845b82811015612a2157612a0e84835161295d565b60a09390930192908401906001016129fb565b50505083810382850152610edc8186612998565b602081526000610f146020830184612998565b803565ffffffffffff8116811461283857600080fd5b600060208284031215612a7057600080fd5b610f1482612a48565b60008060408385031215612a8c57600080fd5b612a9583612821565b946020939093013593505050565b80356001600160401b038116811461283857600080fd5b80356001600160a01b038116811461283857600080fd5b60008060008060808587031215612ae757600080fd5b612af085612821565b9350612afe60208601612aa3565b925060408501359150612b1360608601612aba565b905092959194509250565b60008060008060008060a08789031215612b3757600080fd5b612b4087612821565b9550612b4e60208801612aba565b9450612b5c60408801612aba565b93506060870135925060808701356001600160401b0380821115612b7f57600080fd5b818901915089601f830112612b9357600080fd5b813581811115612ba257600080fd5b8a6020828501011115612bb457600080fd5b6020830194508093505050509295509295509295565b60008060408385031215612bdd57600080fd5b612be683612821565b9150612bf460208401612aa3565b90509250929050565b60a081016106f9828461295d565b634e487b7160e01b600052602160045260246000fd5b60028110610abf57610abf612c0b565b60208101612c3e83612c21565b91905290565b81516001600160a01b0390811682526020808401516001600160601b0316908301526040808401519091169082015260608201516080820190612c8681612c21565b8060608401525092915050565b634e487b7160e01b600052604160045260246000fd5b60405160a081016001600160401b0381118282101715612ccb57612ccb612c93565b60405290565b604051601f8201601f191681016001600160401b0381118282101715612cf957612cf9612c93565b604052919050565b8015158114610abf57600080fd5b803560ff8116811461283857600080fd5b60008060008060808587031215612d3657600080fd5b612d3f85612821565b93506020808601356001600160401b0380821115612d5c57600080fd5b9087019060a0828a031215612d7057600080fd5b612d78612ca9565b612d8183612a48565b8152612d8e848401612a48565b848201526040830135612da081612d01565b604082015260608381013590820152608083013582811115612dc157600080fd5b80840193505089601f840112612dd657600080fd5b823582811115612de857612de8612c93565b612dfa601f8201601f19168601612cd1565b92508083528a85828601011115612e1057600080fd5b80858501868501376000908301909401939093526080830152509250612e3860408601612d0f565b9150612b1360608601612d0f565b6020810160048310612c3e57612c3e612c0b565b81518152602082015160c0820190612e7181612c21565b806020840152506001600160401b0360408401511660408301526060830151151560608301526080830151608083015260a083015160a083015292915050565b858152846020820152836040820152821515606082015260a060808201526000610ed960a0830184612998565b600060208284031215612ef057600080fd5b8151610f1481612d01565b600181811c90821680612f0f57607f821691505b602082108103612f2f57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b65ffffffffffff81811683821601908082111561239f5761239f612f35565b601f821115611ccf57600081815260208120601f850160051c81016020861015612f915750805b601f850160051c820191505b81811015612fb057828155600101612f9d565b505050505050565b81516001600160401b03811115612fd157612fd1612c93565b612fe581612fdf8454612efb565b84612f6a565b602080601f83116001811461301a57600084156130025750858301515b600019600386901b1c1916600185901b178555612fb0565b600085815260208120601f198616915b828110156130495788860151825594840194600190910190840161302a565b50858210156130675787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561309f57600080fd5b610f1482612aa3565b6000600182016130ba576130ba612f35565b5060010190565b818103818111156106f9576106f9612f35565b60006001600160401b038083168181036130f0576130f0612f35565b6001019392505050565b808201808211156106f9576106f9612f35565b600181815b8085111561314857816000190482111561312e5761312e612f35565b8085161561313b57918102915b93841c9390800290613112565b509250929050565b60008261315f575060016106f9565b8161316c575060006106f9565b8160018114613182576002811461318c576131a8565b60019150506106f9565b60ff84111561319d5761319d612f35565b50506001821b6106f9565b5060208310610133831016604e8410600b84101617156131cb575081810a6106f9565b6131d5838361310d565b80600019048211156131e9576131e9612f35565b029392505050565b6000610f1460ff841683613150565b60006040828403121561321257600080fd5b604051604081018181106001600160401b038211171561323457613234612c93565b60405282518152602083015162ffffff8116811461325157600080fd5b6020820152939250505056fea2646970667358221220166f185aa1265c0401ca920fa8145b2e8c499f171cfddbfa21091ca77e5b489a64736f6c63430008130033",
    "sourceMap": "631:19949:92:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15878:96;;;;;;:::i;:::-;15955:15;15878:96;;;;;;;;;;;;;:::i;:::-;;;;;;;;5582:205:83;;;;;;:::i;:::-;;:::i;:::-;;;1537:14:105;;1530:22;1512:41;;1500:2;1485:18;5582:205:83;1372:187:105;5262:285:83;;;;;;:::i;:::-;;:::i;5226:438:89:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;587:48::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;11201:31:87:-;;;;;;;;-1:-1:-1;;;;;4289:32:105;;;4271:51;;4259:2;4244:18;11201:31:87;4125:203:105;6571:130:83;;;;;;:::i;:::-;;:::i;:::-;;9707:359:89;;;;;;:::i;:::-;;:::i;10522:257::-;;;;;;:::i;:::-;;:::i;6002:147:83:-;;;;;;:::i;:::-;-1:-1:-1;;;;;6111:15:83;6088:4;6111:15;;;:7;:15;;;;;:31;-1:-1:-1;;;6111:31:83;;;;;6002:147;6184:128;;;;;;:::i;:::-;;:::i;:::-;;;;;;4830:4:105;4872:3;4861:9;4857:19;4849:27;;4895:14;4955:2;4946:6;4940:13;4936:22;4925:9;4918:41;5027:2;5019:4;5011:6;5007:17;5001:24;4997:33;4990:4;4979:9;4975:20;4968:63;;5099:4;5091;5083:6;5079:17;5073:24;5069:35;5062:4;5051:9;5047:20;5040:65;5173:4;5165;5157:6;5153:17;5147:24;5143:35;5136:4;5125:9;5121:20;5114:65;5249:4;5241:6;5237:17;5231:24;5224:32;5217:40;5210:4;5199:9;5195:20;5188:70;5314:4;5306:6;5302:17;5296:24;5289:4;5278:9;5274:20;5267:54;5377:4;5369:6;5365:17;5359:24;5352:4;5341:9;5337:20;5330:54;5440:4;5432:6;5428:17;5422:24;5415:4;5404:9;5400:20;5393:54;4694:759;;;;;469:32:83;;;;;;;;;;;;5632:14:105;5620:27;;;5602:46;;5590:2;5575:18;469:32:83;5458:196:105;537:44:83;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;537:44:83;;;;;;;-1:-1:-1;;;537:44:83;;;;;-1:-1:-1;;;537:44:83;;;;;-1:-1:-1;;;537:44:83;;;;;;;;;;;;;;;;5994:14:105;6035:15;;;6017:34;;6087:15;;;;6082:2;6067:18;;6060:43;6151:4;6139:17;;;6119:18;;;6112:45;;;;6193:17;;;;6188:2;6173:18;;6166:45;6255:14;6248:22;6242:3;6227:19;;6220:51;6302:3;6287:19;;6280:35;6346:3;6331:19;;6324:35;6390:3;6375:19;;6368:35;5971:3;5956:19;537:44:83;5659:750:105;4945:282:83;;;;;;:::i;:::-;;:::i;16129:84:92:-;;;;;;:::i;:::-;16203:6;16129:84;;;;;;;;-1:-1:-1;;;;;6833:31:105;;;6815:50;;6803:2;6788:18;16129:84:92;6671:200:105;3466:591:89;;;;;;:::i;:::-;;:::i;:::-;;;7780:25:105;;;7768:2;7753:18;3466:591:89;7634:177:105;1346:529:89;;;;;;:::i;:::-;;:::i;16464:306:92:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;671:109:89:-;756:17;671:109;;;;;;:::i;14993:357:92:-;;;;;;:::i;:::-;;:::i;:::-;;;;9974:14:105;;9967:22;9949:41;;10030:13;;-1:-1:-1;;;;;10026:38:105;10021:2;10006:18;;;9999:66;;;;10111:15;;10105:22;-1:-1:-1;;;;;10101:55:105;10081:18;;;10074:83;10199:15;10193:22;10188:2;10173:18;;10166:50;9936:3;9921:19;14993:357:92;9720:502:105;511:35:89;;;;;;;;;14173:213:92;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;5822:145:83:-;;;;;;:::i;:::-;-1:-1:-1;;;;;5936:15:83;5910:7;5936:15;;;:7;:15;;;;;;;;:24;;;5822:145;3793:459;;;;;;:::i;:::-;;:::i;1485:1209::-;;;;;;:::i;:::-;;:::i;739:88::-;785:4;739:88;;;;;;:::i;14519:200:92:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;6962:940:89:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;1690:101:92:-;;;-1:-1:-1;;;15001:58:105;;14989:2;14974:18;1690:101:92;14827:238:105;15638:85:92;;;;;;:::i;:::-;-1:-1:-1;15712:7:92;;15638:85;13141:46:87;;;:::i;5582:205:83:-;-1:-1:-1;;;;;5721:15:83;;5659:4;5721:15;;;:7;:15;;;;;:26;;-1:-1:-1;;;5721:26:83;;;;;5701:15;5694:53;;;;;;:86;;-1:-1:-1;;;;;;5751:15:83;;;;;;:7;:15;;;;;;;;:24;;:29;5694:86;5675:105;5582:205;-1:-1:-1;;5582:205:83:o;5262:285::-;-1:-1:-1;;;;;5378:15:83;;5341:4;5378:15;;;:7;:15;;;;;;;:24;;:29;;;;:85;;-1:-1:-1;;;;;;5437:15:83;;;;;;:7;:15;;;;;:26;;-1:-1:-1;;;5437:26:83;;;;;5418:15;5411:52;;;;5378:85;:152;;;;-1:-1:-1;;;;;;;5509:15:83;;;;;:7;:15;;;;;:21;;;;;5490:15;5483:47;;;;;5262:285::o;5226:438:89:-;5397:27;;12069:10:87;-1:-1:-1;;;;;12083:6:87;12069:20;;12065:62;;12098:29;;-1:-1:-1;;;12098:29:87;;12116:10;12098:29;;;4271:51:105;4244:18;;12098:29:87;;;;;;;;12065:62;12154:6;-1:-1:-1;;;;;12142:34:87;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12138:70;;;12187:21;;-1:-1:-1;;;12187:21:87;;;;;;;;;;;12138:70;5499:27:89::1;5519:6;5499:19;:27::i;:::-;5536:30;5559:6;5536:22;:30::i;:::-;5630:27;5641:6;5649:7;;5630:10;:27::i;:::-;5623:34;;;;5226:438:::0;;;;;;:::o;587:48::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6571:130:83:-;11602:10:87;-1:-1:-1;;;;;11616:6:87;11602:20;;11598:62;;11631:29;;-1:-1:-1;;;11631:29:87;;11649:10;11631:29;;;4271:51:105;4244:18;;11631:29:87;4125:203:105;11598:62:87;6664:18:83::1;:30:::0;;-1:-1:-1;;6664:30:83::1;;::::0;;;::::1;::::0;;;::::1;::::0;;6571:130::o;9707:359:89:-;12069:10:87;-1:-1:-1;;;;;12083:6:87;12069:20;;12065:62;;12098:29;;-1:-1:-1;;;12098:29:87;;12116:10;12098:29;;;4271:51:105;4244:18;;12098:29:87;4125:203:105;12065:62:87;12154:6;-1:-1:-1;;;;;12142:34:87;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12138:70;;;12187:21;;-1:-1:-1;;;12187:21:87;;;;;;;;;;;12138:70;9831:27:89::1;9851:6;9831:19;:27::i;:::-;9868:35;9896:6;9868:27;:35::i;:::-;9913:38;9944:6;9913:30;:38::i;:::-;9961:27;9981:6;9961:19;:27::i;:::-;10045:14;10052:6;10045;:14::i;:::-;9707:359:::0;:::o;10522:257::-;11602:10:87;-1:-1:-1;;;;;11616:6:87;11602:20;;11598:62;;11631:29;;-1:-1:-1;;;11631:29:87;;11649:10;11631:29;;;4271:51:105;4244:18;;11631:29:87;4125:203:105;11598:62:87;10692:6:89::1;10682:7;:16;;;10678:52;;;10707:23;;-1:-1:-1::0;;;10707:23:89::1;;;;;;;;;;;10678:52;10741:21;:31:::0;;-1:-1:-1;;10741:31:89::1;;::::0;;;::::1;::::0;;;::::1;::::0;;10522:257::o;6184:128:83:-;6261:10;;:::i;:::-;-1:-1:-1;;;;;;6290:15:83;;;;;:7;:15;;;;;;;;;6283:22;;;;;;;;;;;;;;;-1:-1:-1;;;6283:22:83;;;;;;;;;;;-1:-1:-1;;;6283:22:83;;;;;;;;;;;-1:-1:-1;;;6283:22:83;;;;;;;;-1:-1:-1;;;6283:22:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6184:128::o;4945:282::-;-1:-1:-1;;;;;5057:15:83;;5020:4;5057:15;;;:7;:15;;;;;;;:24;;:29;;;;:85;;-1:-1:-1;;;;;;5116:15:83;;;;;;:7;:15;;;;;:26;;-1:-1:-1;;;5116:26:83;;;;;5097:15;5090:52;;;;5057:85;:153;;;;-1:-1:-1;;;;;;;5189:15:83;;;;;:7;:15;;;;;:21;;;;;5169:15;5162:48;;;;;;4945:282::o;3466:591:89:-;3634:14;12069:10:87;-1:-1:-1;;;;;12083:6:87;12069:20;;12065:62;;12098:29;;-1:-1:-1;;;12098:29:87;;12116:10;12098:29;;;4271:51:105;4244:18;;12098:29:87;4125:203:105;12065:62:87;12154:6;-1:-1:-1;;;;;12142:34:87;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12138:70;;;12187:21;;-1:-1:-1;;;12187:21:87;;;;;;;;;;;12138:70;3691:27:89::1;3711:6;3691:19;:27::i;:::-;3728:31;3752:6;3728:23;:31::i;:::-;3769:35;3789:6;3797;3769:19;:35::i;:::-;3814:45;3835:6;3843;3851:7;3814:20;:45::i;:::-;3869:35;3889:6;3897;3869:19;:35::i;:::-;3914:29;3936:6;3914:21;:29::i;:::-;4007:43;4018:6;4026;4034;4042:7;4007:10;:43::i;:::-;4000:50:::0;3466:591;-1:-1:-1;;;;;3466:591:89:o;1346:529::-;1550:12;12069:10:87;-1:-1:-1;;;;;12083:6:87;12069:20;;12065:62;;12098:29;;-1:-1:-1;;;12098:29:87;;12116:10;12098:29;;;4271:51:105;4244:18;;12098:29:87;4125:203:105;12065:62:87;12154:6;-1:-1:-1;;;;;12142:34:87;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12138:70;;;12187:21;;-1:-1:-1;;;12187:21:87;;;;;;;;;;;12138:70;1605:27:89::1;1625:6;1605:19;:27::i;:::-;1642:31;1666:6;1642:23;:31::i;:::-;1683:29;1705:6;1683:21;:29::i;:::-;1722:27;1742:6;1722:19;:27::i;:::-;1813:55;1818:6;1826:7;1835:9;1846:7;1855:12;;1813:4;:55::i;:::-;1806:62;;12218:1:87;1346:529:89::0;;;;;;;;:::o;16464:306:92:-;16569:24;;:::i;:::-;16605:27;16625:6;16605:19;:27::i;:::-;16642:30;16665:6;16642:22;:30::i;:::-;16682:35;16702:6;16710;16682:19;:35::i;:::-;16735:28;16748:6;16756;16735:12;:28::i;:::-;16728:35;16464:306;-1:-1:-1;;;16464:306:92:o;14993:357::-;-1:-1:-1;;;;;;;;15069:19:92;-1:-1:-1;;;;;;;;;;;;;;;15132:27:92;15152:6;15132:19;:27::i;:::-;15169:30;15192:6;15169:22;:30::i;:::-;-1:-1:-1;;;;;;;15224:23:92;;;;;;;:15;:23;;;;;;;;;15210:37;;;;;;;;;-1:-1:-1;;;;;15210:37:92;;;;;-1:-1:-1;;;15210:37:92;;;;;;;;;;;;;;;;;;;;;;;15274:22;;;;14993:357::o;14173:213::-;14242:14;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14242:14:92;14268:27;14288:6;14268:19;:27::i;:::-;14305:35;14325:6;14333;14305:19;:35::i;:::-;-1:-1:-1;;;;;14358:13:92;;;;;;;:5;:13;;;;;;;;-1:-1:-1;;;;;14358:21:92;;;;;;;;;;14351:28;;;;;;;;;-1:-1:-1;;;;;14351:28:92;;;;;-1:-1:-1;;;14351:28:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14358:21;;14351:28;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;-1:-1:-1;14351:28:92;14173:213;-1:-1:-1;;;14173:213:92:o;3793:459:83:-;12069:10:87;-1:-1:-1;;;;;12083:6:87;12069:20;;12065:62;;12098:29;;-1:-1:-1;;;12098:29:87;;12116:10;12098:29;;;4271:51:105;4244:18;;12098:29:87;4125:203:105;12065:62:87;12154:6;-1:-1:-1;;;;;12142:34:87;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12138:70;;;12187:21;;-1:-1:-1;;;12187:21:87;;;;;;;;;;;12138:70;3916:27:83::1;3936:6;3916:19;:27::i;:::-;3953:29;3975:6;3953:21;:29::i;:::-;4080:22;4095:6;4080:14;:22::i;:::-;-1:-1:-1::0;;;;;4153:15:83::1;4135;4153::::0;;;:7:::1;:15;::::0;;;;;;4179:40;;-1:-1:-1;;4179:40:83::1;-1:-1:-1::0;;;4203:15:83::1;4179:40;;;;::::0;;4229:12:::1;:16:::0;3793:459::o;1485:1209::-;12069:10:87;-1:-1:-1;;;;;12083:6:87;12069:20;;12065:62;;12098:29;;-1:-1:-1;;;12098:29:87;;12116:10;12098:29;;;4271:51:105;4244:18;;12098:29:87;4125:203:105;12065:62:87;12154:6;-1:-1:-1;;;;;12142:34:87;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12138:70;;;12187:21;;-1:-1:-1;;;12187:21:87;;;;;;;;;;;12138:70;1743:13:83;;:17:::1;;::::0;;;;:60:::1;;-1:-1:-1::0;1764:13:83;;:39:::1;1787:15;1764:39:::0;::::1;::::0;::::1;;1743:60;1739:158;;;1847:13:::0;;1826:60:::1;::::0;-1:-1:-1;;;1826:60:83;;15885:14:105;15926:15;;;1826:60:83::1;::::0;::::1;15908:34:105::0;1869:15:83::1;15978::105::0;;;15958:18;;;15951:43;15848:18;;1826:60:83::1;15705:295:105::0;1739:158:83::1;1980:18;::::0;1961:16:::1;::::0;::::1;::::0;1980:18:::1;::::0;;::::1;1961:37:::0;::::1;;1957:136;;;2045:16;::::0;::::1;::::0;2063:18:::1;::::0;2021:61:::1;::::0;-1:-1:-1;;;2021:61:83;;2063:18:::1;15926:15:105::0;;;2021:61:83::1;::::0;::::1;15908:34:105::0;2063:18:83;::::1;15958::105::0;;;15951:43;15848:18;;2021:61:83::1;15705:295:105::0;1957:136:83::1;2138:14;;:::i;:::-;2174:13:::0;;:18:::1;;::::0;:60:::1;;2221:13:::0;;2174:60:::1;;;2202:15;2174:60;2162:72;;::::0;;;2273:16:::1;::::0;::::1;::::0;2261:28:::1;::::0;::::1;:::i;:::-;2244:45;;:14;::::0;::::1;:45:::0;2299:44:::1;::::0;;::::1;:22;::::0;;::::1;:44:::0;;;;2353:42;;::::1;:21;::::0;;::::1;:42:::0;;;;2427:23;;::::1;::::0;2405:45:::1;;:19;::::0;;::::1;:45:::0;;;;2475:16;;::::1;::::0;2460:12:::1;::::0;::::1;:31:::0;2610:18;::::1;::::0;2588:41:::1;::::0;2597:6;;2244:3;;2588:8:::1;:41::i;:::-;-1:-1:-1::0;;;;;2666:15:83;;;::::1;;::::0;;;:7:::1;:15;::::0;;;;;;;;:21;;;;;;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;-1:-1:-1::0;;2666:21:83;;;;;;;-1:-1:-1;;;2666:21:83;;;::::1;::::0;;;::::1;::::0;;;::::1;-1:-1:-1::0;;;;2666:21:83;-1:-1:-1;;;2666:21:83::1;::::0;;::::1;;-1:-1:-1::0;;;;2666:21:83;;-1:-1:-1;;;2666:21:83;;;::::1;::::0;;;::::1;::::0;;;::::1;-1:-1:-1::0;;;;2666:21:83::1;-1:-1:-1::0;;;2666:21:83;::::1;;::::0;;;::::1;;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;-1:-1:-1;;;1485:1209:83:o;14519:200:92:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14647:27:92;14667:6;14647:19;:27::i;:::-;-1:-1:-1;;;;;14692:20:92;;;;;;:12;:20;;;;;;;;;14685:27;;;;;;;;;;;;;;;;;14692:20;;14685:27;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;14685:27:92;;;;;-1:-1:-1;;;14685:27:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14519:200:92:o;6962:940:89:-;7130:15;;;;7246:26;12069:10:87;-1:-1:-1;;;;;12083:6:87;12069:20;;12065:62;;12098:29;;-1:-1:-1;;;12098:29:87;;12116:10;12098:29;;;4271:51:105;4244:18;;12098:29:87;4125:203:105;12065:62:87;12154:6;-1:-1:-1;;;;;12142:34:87;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12138:70;;;12187:21;;-1:-1:-1;;;12187:21:87;;;;;;;;;;;12138:70;7328:27:89::1;7348:6;7328:19;:27::i;:::-;7365:31;7389:6;7365:23;:31::i;:::-;7406:26;7425:6;7406:18;:26::i;:::-;7442:27;7462:6;7442:19;:27::i;:::-;-1:-1:-1::0;;;;;7498:15:89;::::1;7480;7498::::0;;;:7:::1;:15;::::0;;;;7617:21:::1;7506:6:::0;7633:4;7617:7:::1;:21::i;:::-;-1:-1:-1::0;;;;;7693:15:89;::::1;;::::0;;;:7:::1;:15;::::0;;;;;;;:25:::1;::::0;;::::1;:35:::0;;;7738:20:::1;::::0;;::::1;:31:::0;;;7779:24;;;;;7570:68;;-1:-1:-1;7570:68:89;;-1:-1:-1;7570:68:89;-1:-1:-1;7570:68:89;-1:-1:-1;7779:40:89::1;7570:68:::0;7779:24;:40:::1;:::i;:::-;-1:-1:-1::0;7857:12:89::1;;::::0;;-1:-1:-1;6962:940:89;;;;;;;;:::o;13141:46:87:-;11602:10;-1:-1:-1;;;;;11616:6:87;11602:20;;11598:62;;11631:29;;-1:-1:-1;;;11631:29:87;;11649:10;11631:29;;;4271:51:105;4244:18;;11631:29:87;4125:203:105;11598:62:87;13141:46::o;6991:164:83:-;-1:-1:-1;;;;;7085:15:83;;;;;;:7;:15;;;;;:21;;;:26;;7081:67;;7120:28;;-1:-1:-1;;;7120:28:83;;-1:-1:-1;;;;;18678:39:105;;7120:28:83;;;18660:58:105;18633:18;;7120:28:83;18516:208:105;19272:247:92;-1:-1:-1;;;;;19405:20:92;;;;;;:12;:20;;;;;19436:17;19405:27;;;;;;:48;;;;;;;;:::i;:::-;;19401:112;;19476:26;;-1:-1:-1;;;19476:26:92;;-1:-1:-1;;;;;18678:39:105;;19476:26:92;;;18660:58:105;18633:18;;19476:26:92;18516:208:105;10426:691:92;10537:27;;10618:7;;-1:-1:-1;;;;;10654:19:92;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;10642:31;;10688:9;10683:384;10703:3;10699:1;:7;10683:384;;;10751:39;10771:6;10779:7;;10787:1;10779:10;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;10751:19;:39::i;:::-;10804;10824:6;10832:7;;10840:1;10832:10;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;10804:19;:39::i;:::-;-1:-1:-1;;;;;10903:13:92;;;;;;:5;:13;;;;;10938:17;;10917:7;;10925:1;10917:10;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;10903:25:92;-1:-1:-1;;;;;10903:25:92;;;;;;;;;;;;:32;;;:52;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;11024:32;11037:6;11045:7;;11053:1;11045:10;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;11024:12;:32::i;:::-;11009:9;11019:1;11009:12;;;;;;;;:::i;:::-;;;;;;:47;;;;10708:3;;;;;:::i;:::-;;;;10683:384;;;;11077:33;10426:691;;;;;;:::o;7964:257:83:-;-1:-1:-1;;;;;8092:15:83;;;;;;:7;:15;;;;;:26;;-1:-1:-1;;;8092:26:83;;;;;8073:15;8066:52;;;;:84;;;;-1:-1:-1;;;;;;8122:15:83;;8149:1;8122:15;;;:7;:15;;;;;;;;:24;;:28;;8066:84;8062:153;;;8173:31;;-1:-1:-1;;;8173:31:83;;-1:-1:-1;;;;;18678:39:105;;8173:31:83;;;18660:58:105;18633:18;;8173:31:83;18516:208:105;12786:431:89;-1:-1:-1;;;;;12961:15:89;;12941:17;12961:15;;;:7;:15;;;;;:26;;-1:-1:-1;;;12961:26:89;;;;;;13021:15;13014:37;;-1:-1:-1;13014:37:89;;;:117;;-1:-1:-1;13110:21:89;;13097:34;;13110:21;;13097:10;:34;:::i;:::-;13071:60;;13078:15;13071:60;;;13014:117;12997:214;;;13163:37;;-1:-1:-1;;;13163:37:89;;-1:-1:-1;;;;;18678:39:105;;13163:37:89;;;18660:58:105;18633:18;;13163:37:89;18516:208:105;12997:214:89;12869:348;12786:431;:::o;18979:248:92:-;-1:-1:-1;;;;;19113:20:92;;;;;;:12;:20;;;;;19144:17;19113:27;;;;;;:48;;;;;;;;:::i;:::-;;19109:112;;19184:26;;-1:-1:-1;;;19184:26:92;;-1:-1:-1;;;;;18678:39:105;;19184:26:92;;;18660:58:105;18633:18;;19184:26:92;18516:208:105;13694:249:92;-1:-1:-1;;;;;13812:20:92;;;;;:12;:20;;;;;13842:17;13812:27;;;:47;;-1:-1:-1;;13812:47:92;;;;;;13694:249::o;7302:189:83:-;-1:-1:-1;;;;;7426:15:83;;;;;;:7;:15;;;;;:21;;;;;7407:15;7400:47;;;;7396:88;;;7456:28;;-1:-1:-1;;;7456:28:83;;-1:-1:-1;;;;;18678:39:105;;7456:28:83;;;18660:58:105;18633:18;;7456:28:83;18516:208:105;19564:385:92;-1:-1:-1;;;;;19729:20:92;;;;;;:12;:20;;;;;:30;;;-1:-1:-1;;;;;19729:30:92;;;;;;19719:40;;;;19715:89;;19768:36;;-1:-1:-1;;;19768:36:92;;-1:-1:-1;;;;;19378:39:105;;19768:36:92;;;19360:58:105;-1:-1:-1;;;;;19454:31:105;;19434:18;;;19427:59;19333:18;;19768:36:92;19190:302:105;19715:89:92;-1:-1:-1;;;;;19855:13:92;;19895:1;19855:13;;;:5;:13;;;;;;;;-1:-1:-1;;;;;19855:21:92;;;;;;;;;:28;-1:-1:-1;;;;;19855:28:92;19851:91;;19906:36;;-1:-1:-1;;;19906:36:92;;-1:-1:-1;;;;;19378:39:105;;19906:36:92;;;19360:58:105;-1:-1:-1;;;;;19454:31:105;;19434:18;;;19427:59;19333:18;;19906:36:92;19190:302:105;19994:263:92;-1:-1:-1;;;;;20192:13:92;;;;;;:5;:13;;;;;;;;-1:-1:-1;;;;;20192:21:92;;;;;;;;;:28;-1:-1:-1;;;;;20181:39:92;;;20192:28;;20181:39;20177:73;;20229:21;;-1:-1:-1;;;20229:21:92;;-1:-1:-1;;;;;4289:32:105;;20229:21:92;;;4271:51:105;4244:18;;20229:21:92;4125:203:105;20177:73:92;19994:263;;;:::o;20302:276::-;20491:17;-1:-1:-1;;;;;20459:13:92;;;;;;:5;:13;;;;;;;;-1:-1:-1;;;;;20459:21:92;;;;;;;;;:28;;;;;-1:-1:-1;;;20459:28:92;;;;;:49;;;;;;;:::i;:::-;;20455:117;;20531:30;;-1:-1:-1;;;20531:30:92;;-1:-1:-1;;;;;19378:39:105;;20531:30:92;;;19360:58:105;-1:-1:-1;;;;;19454:31:105;;19434:18;;;19427:59;19333:18;;20531:30:92;19190:302:105;8368:382:83;-1:-1:-1;;;;;8529:15:83;;;;;;:7;:15;;;;;:26;;-1:-1:-1;;;8529:26:83;;;;;8509:15;8502:53;;;;8498:119;;8578:28;;-1:-1:-1;;;8578:28:83;;-1:-1:-1;;;;;18678:39:105;;8578:28:83;;;18660:58:105;18633:18;;8578:28:83;18516:208:105;8498:119:83;-1:-1:-1;;;;;8677:15:83;;;;;;:7;:15;;;;;;;:24;;:29;;8673:70;;8715:28;;-1:-1:-1;;;8715:28:83;;-1:-1:-1;;;;;18678:39:105;;8715:28:83;;;18660:58:105;18633:18;;8715:28:83;18516:208:105;9253:522:92;-1:-1:-1;;;;;9476:20:92;;9386:14;9476:20;;;:12;:20;;;;;;;;9524:5;:13;;;;;-1:-1:-1;;;;;9524:21:92;;;;;;;;;9602:17;9589:10;;;:30;;-1:-1:-1;;;;9589:30:92;-1:-1:-1;;;9602:17:92;9589:30;;;;-1:-1:-1;9692:10:92;;9669:19;;;:33;;-1:-1:-1;;;9692:10:92;;;-1:-1:-1;;;;;9692:10:92;;;;9669:33;;9692:10;;9669:33;:::i;:::-;;;;-1:-1:-1;;9758:10:92;-1:-1:-1;;;9758:10:92;;-1:-1:-1;;;;;9758:10:92;;;-1:-1:-1;;;;;;9253:522:92:o;5908:2835::-;6079:6;6169:12;;;:42;;-1:-1:-1;;;;;;6185:26:92;;6169:42;6165:78;;;6220:23;;-1:-1:-1;;;6220:23:92;;;;;;;;;;;6165:78;-1:-1:-1;;;;;6317:15:92;;6295:19;6317:15;;;:7;:15;;;;;;;;:24;;;6378:12;:20;;;;;6480:14;;;:16;;6317:24;;6378:20;;6295:19;;6480:16;;;-1:-1:-1;;;;;6480:16:92;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;6480:16:92;;;;;-1:-1:-1;;;;;6480:16:92;;;;;;6465:31;;6559:15;6584:7;6559:33;;6651:148;;;;;;;;6677:7;-1:-1:-1;;;;;6651:148:92;;;;;6706:8;-1:-1:-1;;;;;6651:148:92;;;;;6738:9;-1:-1:-1;;;;;6651:148:92;;;;;6769:19;6651:148;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;6628:13:92;;;;;;;:5;:13;;;;;;;;-1:-1:-1;;;;;6628:20:92;;;;;;;;;;:171;;;;;;;;;-1:-1:-1;;;6628:171:92;;;-1:-1:-1;;;;;6628:171:92;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6628:171:92;;;;;;;;;;;-1:-1:-1;;;;;;6628:171:92;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;6875:7;6852:4;:19;;;:30;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;7225:15:92;;7199:17;7225:15;;;:7;:15;;;;;:33;7219:39;;-1:-1:-1;;;7225:33:92;;;;7219:2;:39;:::i;:::-;7199:59;;7268:25;7296:59;7312:4;:19;;;7333:9;7344:4;:10;;;7296:15;:59::i;:::-;7268:87;;7481:11;7461:17;:31;7457:74;;;7515:5;7508:12;;;;;;;;;;7457:74;7630:11;7610:17;:31;7606:907;;;7721:123;7760:5;7767:11;7780:17;7799:8;7809:9;7820:4;:10;;;7721:21;:123::i;:::-;-1:-1:-1;;;;;7695:23:92;;;;;;;:15;:23;;;;;;;;:149;;;;;;;;-1:-1:-1;;;;;7695:149:92;;;-1:-1:-1;;;;;;7695:149:92;;;;;;;-1:-1:-1;;;7695:149:92;;;;;;;;;;;;;;-1:-1:-1;7695:149:92;;;;7919:19;;;:53;;7942:30;;;;;;;;7919:19;:53;;7942:30;;7919:53;:::i;:::-;;;;-1:-1:-1;;8081:19:92;;;;8113:10;;8040:22;;8065:59;;8102:9;;8065:15;:59::i;:::-;8040:84;;8455:4;:14;;;8438;:31;8434:68;;;8471:14;;;:31;;;8434:68;7643:870;7606:907;-1:-1:-1;;;;;;;;8661:15:92;;;;;;;;:7;:15;;;;;:52;;-1:-1:-1;;8661:52:92;-1:-1:-1;;;8697:15:92;8661:52;;;;;;-1:-1:-1;8731:5:92;;5908:2835;-1:-1:-1;;;;;;;5908:2835:92:o;17128:1392::-;17225:24;;:::i;:::-;-1:-1:-1;;;;;17307:13:92;;;17286:18;17307:13;;;:5;:13;;;;;;;;-1:-1:-1;;;;;17307:21:92;;;;;;;;;17286:42;;;;;;;;;-1:-1:-1;;;;;17286:42:92;;;;;-1:-1:-1;;;17286:42:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:18;;17307:21;;17286:42;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;-1:-1:-1;17407:14:92;;-1:-1:-1;;;;;17389:32:92;;;;;17451:16;;;;;17431:36;;;:17;;;;:36;;;;-1:-1:-1;;;;;17482:20:92;;-1:-1:-1;17482:20:92;;;:12;:20;;;;:38;;;17407:14;;-1:-1:-1;;;;17482:38:92;;;;17478:1010;;;-1:-1:-1;;;;;17597:23:92;;;;;;:15;:23;;;;;:29;-1:-1:-1;;;;;17597:39:92;;;:29;;:39;17593:685;;17725:14;;;;;-1:-1:-1;;;;;17709:30:92;;;:13;;;;:30;;;;17775:23;;;;;;;:15;:23;;;;;;:30;;;;17757:15;;;:48;17841:23;;;;;:30;;-1:-1:-1;;;17841:30:92;;;17823:15;;;:48;17478:1010;;17593:685;17998:14;;;;;;-1:-1:-1;;;;;17982:30:92;;;:13;;;;:30;;;;18085:14;;18127:15;;;;;;;:7;:15;;;;;;;:33;18048:178;;;;;;;18121:39;;-1:-1:-1;;;18127:33:92;;;;18121:2;:39;:::i;:::-;-1:-1:-1;;;;;18182:20:92;;;;;;:12;:20;;;;;:26;18048:15;:178::i;:::-;18030:15;;;:196;18262:1;18244:15;;;:19;17478:1010;;;18384:14;;;;;-1:-1:-1;;;;;18368:30:92;;;:13;;;:30;18430:1;18412:15;;;:19;18463:14;;18445:32;:15;;;:32;17478:1010;18498:15;17128:1392;;;;:::o;3818:464::-;4058:26;4077:6;4058:18;:26::i;2366:921::-;2503:31;2548:7;2537:40;;;;;;;;;;;;:::i;:::-;2634:12;;2503:74;;-1:-1:-1;2634:12:92;:17;2630:53;;2660:23;;-1:-1:-1;;;2660:23:92;;;;;;;;;;;2630:53;428:5:83;2759:44:92;;:6;:21;;;:44;;;2755:80;;;2812:23;;-1:-1:-1;;;2812:23:92;;;;;;;;;;;2755:80;-1:-1:-1;;;;;2905:20:92;;2878:24;2905:20;;;:12;:20;;;;;;;;2948:12;;2935:25;;2987:1;2970:14;;:18;;-1:-1:-1;;2970:18:92;;;;;3221:13;;;;3236:21;;;;2905:20;;3203:77;;;;428:5:83;3203:17:92;:77::i;:::-;3174:14;;;;:106;-1:-1:-1;;;;2366:921:92:o;18604:330::-;-1:-1:-1;;;;;18711:20:92;;18742:17;18711:20;;;:12;:20;;;;;:27;;;;;;;;:48;;;;;;;:::i;:::-;;:108;;;;-1:-1:-1;;;;;;18779:15:92;;;;;;:7;:15;;;;;:21;18804:15;18779:21;;;;:40;;18711:108;:172;;;;-1:-1:-1;;;;;;18839:15:92;;;;;;:7;:15;;;;;:26;18868:15;-1:-1:-1;;;18839:26:92;;;;;:44;18711:172;18694:233;;;18901:26;;-1:-1:-1;;;18901:26:92;;-1:-1:-1;;;;;18678:39:105;;18901:26:92;;;18660:58:105;18633:18;;18901:26:92;18516:208:105;11981:1255:92;-1:-1:-1;;;;;12236:20:92;;12095:16;12236:20;;;:12;:20;;;;;;;;12266:17;12236:27;;;:47;;-1:-1:-1;;12236:47:92;;;;;12389:35;;;;;12444:15;;;;:33;12095:16;;;;12148:27;;12095:16;;12360:167;;12389:35;12438:39;;-1:-1:-1;;;12444:33:92;;;;12438:2;:39;:::i;:::-;-1:-1:-1;;;;;12491:20:92;;;;;;:12;:20;;;;;:26;12360:15;:167::i;:::-;-1:-1:-1;;;;;12662:20:92;;;;;;:12;:20;;;;;:30;;;12335:192;;-1:-1:-1;12645:47:92;;12641:299;;;-1:-1:-1;12908:4:92;;-1:-1:-1;12879:50:92;;12641:299;-1:-1:-1;;;;;13032:20:92;;;;;;:12;:20;;;;;13073:4;13032:38;;;:45;;-1:-1:-1;;13032:45:92;-1:-1:-1;;;13032:45:92;;;13132:35;;;;;;-1:-1:-1;13189:14:92;;-1:-1:-1;13073:4:92;-1:-1:-1;11981:1255:92;;;;;;;;:::o;12569:3418:30:-;12645:14;13181:9;;;-1:-1:-1;;13188:1:30;13185;13217:20;13341:10;;;13333:19;;13325:28;;;13438:274;;13484:1;13474:153;;13526:10;13520:4;13513:24;13600:4;13594;13587:18;13474:153;-1:-1:-1;13658:10:30;;;;-1:-1:-1;13689:5:30;;13438:274;13833:2;13830:1;13827:9;13817:149;;13873:10;13867:4;13860:24;13943:4;13937;13930:18;13817:149;14223:1;14220;14217;14210:15;14371:1;14367:9;;;14360:17;;14462:9;;;;;15753;;;15745:18;;;15773:9;;;;15769:17;;;15788:1;15765:25;15741:50;15797:10;;15793:18;15738:74;14841:1;14837:9;;14848:1;14833:17;;;15119:11;;;15112:19;;15103:29;15192:11;;;15185:19;;15176:29;15266:11;;;15259:19;;15250:29;15340:11;;;15333:19;;15324:29;15414:11;;;15407:19;;15398:29;15900:11;;;15893:19;;;15884:29;15496:439;;-1:-1:-1;12569:3418:30;;;;;:::o;4325:904:92:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;4658:47:92;-1:-1:-1;;;;;4658:47:92;;4686:10;4698:6;4658:15;:47::i;:::-;4639:66;-1:-1:-1;4715:14:92;4732:29;4752:9;4732:17;:29;:::i;:::-;4715:46;;5027:13;5050:47;5068:10;-1:-1:-1;;;;;5050:47:92;5080:6;5088:8;5050:17;:47::i;:::-;5027:71;-1:-1:-1;5108:14:92;5125:17;5136:6;5125:8;:17;:::i;:::-;5161:60;;;;;;;;-1:-1:-1;;;;;5161:60:92;;;;-1:-1:-1;;;;;5161:60:92;;;;;;;;;;-1:-1:-1;5161:60:92;-1:-1:-1;;;4325:904:92;;;;;;;;:::o;16269:462:30:-;16347:14;16382:19;16393:1;16396;16399;16382:10;:19::i;:::-;16373:28;;16493:1;16490;16487;16480:15;16477:238;;;16536:1;16524:14;;16555:146;;16608:10;16602:4;16595:24;16678:4;16672;16665:18;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:179:105:-;81:20;;-1:-1:-1;;;;;130:38:105;;120:49;;110:77;;183:1;180;173:12;110:77;14:179;;;:::o;198:320::-;274:6;282;290;343:2;331:9;322:7;318:23;314:32;311:52;;;359:1;356;349:12;311:52;382:28;400:9;382:28;:::i;:::-;372:38;457:2;442:18;;429:32;;-1:-1:-1;508:2:105;493:18;;;480:32;;198:320;-1:-1:-1;;;198:320:105:o;523:655::-;692:2;744:21;;;814:13;;717:18;;;836:22;;;663:4;;692:2;915:15;;;;889:2;874:18;;;663:4;958:194;972:6;969:1;966:13;958:194;;;1037:13;;-1:-1:-1;;;;;1033:38:105;1021:51;;1127:15;;;;1092:12;;;;994:1;987:9;958:194;;;-1:-1:-1;1169:3:105;;523:655;-1:-1:-1;;;;;;523:655:105:o;1183:184::-;1241:6;1294:2;1282:9;1273:7;1269:23;1265:32;1262:52;;;1310:1;1307;1300:12;1262:52;1333:28;1351:9;1333:28;:::i;1564:686::-;1657:6;1665;1673;1726:2;1714:9;1705:7;1701:23;1697:32;1694:52;;;1742:1;1739;1732:12;1694:52;1765:28;1783:9;1765:28;:::i;:::-;1755:38;;1844:2;1833:9;1829:18;1816:32;-1:-1:-1;;;;;1908:2:105;1900:6;1897:14;1894:34;;;1924:1;1921;1914:12;1894:34;1962:6;1951:9;1947:22;1937:32;;2007:7;2000:4;1996:2;1992:13;1988:27;1978:55;;2029:1;2026;2019:12;1978:55;2069:2;2056:16;2095:2;2087:6;2084:14;2081:34;;;2111:1;2108;2101:12;2081:34;2164:7;2159:2;2149:6;2146:1;2142:14;2138:2;2134:23;2130:32;2127:45;2124:65;;;2185:1;2182;2175:12;2124:65;2216:2;2212;2208:11;2198:21;;2238:6;2228:16;;;;;1564:686;;;;;:::o;2255:373::-;2371:12;;-1:-1:-1;;;;;2367:21:105;;;2355:34;;2442:4;2431:16;;;2425:23;2421:32;;;2405:14;;;2398:56;2503:4;2492:16;;;2486:23;2470:14;;;2463:47;2559:4;2548:16;;;2542:23;2526:14;;;2519:47;2615:4;2604:16;;;2598:23;2582:14;;2575:47;2255:373::o;2633:422::-;2674:3;2712:5;2706:12;2739:6;2734:3;2727:19;2764:1;2774:162;2788:6;2785:1;2782:13;2774:162;;;2850:4;2906:13;;;2902:22;;2896:29;2878:11;;;2874:20;;2867:59;2803:12;2774:162;;;2778:3;2981:1;2974:4;2965:6;2960:3;2956:16;2952:27;2945:38;3044:4;3037:2;3033:7;3028:2;3020:6;3016:15;3012:29;3007:3;3003:39;2999:50;2992:57;;;2633:422;;;;:::o;3060:838::-;3350:2;3362:21;;;3432:13;;3335:18;;;3454:22;;;3302:4;;3529;;3507:2;3492:18;;;3556:15;;;3302:4;3599:191;3613:6;3610:1;3607:13;3599:191;;;3662:46;3704:3;3695:6;3689:13;3662:46;:::i;:::-;3737:4;3728:14;;;;;3765:15;;;;3635:1;3628:9;3599:191;;;3603:3;;;3835:9;3830:3;3826:19;3821:2;3810:9;3806:18;3799:47;3863:29;3888:3;3880:6;3863:29;:::i;3903:217::-;4050:2;4039:9;4032:21;4013:4;4070:44;4110:2;4099:9;4095:18;4087:6;4070:44;:::i;4333:167::-;4400:20;;4460:14;4449:26;;4439:37;;4429:65;;4490:1;4487;4480:12;4505:184;4563:6;4616:2;4604:9;4595:7;4591:23;4587:32;4584:52;;;4632:1;4629;4622:12;4584:52;4655:28;4673:9;4655:28;:::i;6414:252::-;6481:6;6489;6542:2;6530:9;6521:7;6517:23;6513:32;6510:52;;;6558:1;6555;6548:12;6510:52;6581:28;6599:9;6581:28;:::i;:::-;6571:38;6656:2;6641:18;;;;6628:32;;-1:-1:-1;;;6414:252:105:o;6876:171::-;6943:20;;-1:-1:-1;;;;;6992:30:105;;6982:41;;6972:69;;7037:1;7034;7027:12;7052:173;7120:20;;-1:-1:-1;;;;;7169:31:105;;7159:42;;7149:70;;7215:1;7212;7205:12;7230:399;7314:6;7322;7330;7338;7391:3;7379:9;7370:7;7366:23;7362:33;7359:53;;;7408:1;7405;7398:12;7359:53;7431:28;7449:9;7431:28;:::i;:::-;7421:38;;7478:37;7511:2;7500:9;7496:18;7478:37;:::i;:::-;7468:47;;7562:2;7551:9;7547:18;7534:32;7524:42;;7585:38;7619:2;7608:9;7604:18;7585:38;:::i;:::-;7575:48;;7230:399;;;;;;;:::o;7816:881::-;7921:6;7929;7937;7945;7953;7961;8014:3;8002:9;7993:7;7989:23;7985:33;7982:53;;;8031:1;8028;8021:12;7982:53;8054:28;8072:9;8054:28;:::i;:::-;8044:38;;8101;8135:2;8124:9;8120:18;8101:38;:::i;:::-;8091:48;;8158:38;8192:2;8181:9;8177:18;8158:38;:::i;:::-;8148:48;;8243:2;8232:9;8228:18;8215:32;8205:42;;8298:3;8287:9;8283:19;8270:33;-1:-1:-1;;;;;8363:2:105;8355:6;8352:14;8349:34;;;8379:1;8376;8369:12;8349:34;8417:6;8406:9;8402:22;8392:32;;8462:7;8455:4;8451:2;8447:13;8443:27;8433:55;;8484:1;8481;8474:12;8433:55;8524:2;8511:16;8550:2;8542:6;8539:14;8536:34;;;8566:1;8563;8556:12;8536:34;8611:7;8606:2;8597:6;8593:2;8589:15;8585:24;8582:37;8579:57;;;8632:1;8629;8622:12;8579:57;8663:2;8659;8655:11;8645:21;;8685:6;8675:16;;;;;7816:881;;;;;;;;:::o;8702:256::-;8768:6;8776;8829:2;8817:9;8808:7;8804:23;8800:32;8797:52;;;8845:1;8842;8835:12;8797:52;8868:28;8886:9;8868:28;:::i;:::-;8858:38;;8915:37;8948:2;8937:9;8933:18;8915:37;:::i;:::-;8905:47;;8702:256;;;;;:::o;8963:252::-;9151:3;9136:19;;9164:45;9140:9;9191:6;9164:45;:::i;9220:127::-;9281:10;9276:3;9272:20;9269:1;9262:31;9312:4;9309:1;9302:15;9336:4;9333:1;9326:15;9352:116;9436:1;9429:5;9426:12;9416:46;;9442:18;;:::i;9473:242::-;9622:2;9607:18;;9634:41;9668:6;9634:41;:::i;:::-;9684:25;;;9473:242;:::o;10227:604::-;10478:13;;-1:-1:-1;;;;;10474:22:105;;;10456:41;;10557:4;10545:17;;;10539:24;-1:-1:-1;;;;;10535:57:105;10513:20;;;10506:87;10653:4;10641:17;;;10635:24;10631:33;;;10609:20;;;10602:63;10712:4;10700:17;;10694:24;10405:3;10390:19;;;10727:47;10694:24;10727:47;:::i;:::-;10812:12;10805:4;10794:9;10790:20;10783:42;;10227:604;;;;:::o;10836:127::-;10897:10;10892:3;10888:20;10885:1;10878:31;10928:4;10925:1;10918:15;10952:4;10949:1;10942:15;10968:253;11040:2;11034:9;11082:4;11070:17;;-1:-1:-1;;;;;11102:34:105;;11138:22;;;11099:62;11096:88;;;11164:18;;:::i;:::-;11200:2;11193:22;10968:253;:::o;11226:275::-;11297:2;11291:9;11362:2;11343:13;;-1:-1:-1;;11339:27:105;11327:40;;-1:-1:-1;;;;;11382:34:105;;11418:22;;;11379:62;11376:88;;;11444:18;;:::i;:::-;11480:2;11473:22;11226:275;;-1:-1:-1;11226:275:105:o;11506:118::-;11592:5;11585:13;11578:21;11571:5;11568:32;11558:60;;11614:1;11611;11604:12;11629:156;11695:20;;11755:4;11744:16;;11734:27;;11724:55;;11775:1;11772;11765:12;11790:1564;11903:6;11911;11919;11927;11980:3;11968:9;11959:7;11955:23;11951:33;11948:53;;;11997:1;11994;11987:12;11948:53;12020:28;12038:9;12020:28;:::i;:::-;12010:38;;12067:2;12120;12109:9;12105:18;12092:32;-1:-1:-1;;;;;12184:2:105;12176:6;12173:14;12170:34;;;12200:1;12197;12190:12;12170:34;12223:22;;;;12279:4;12261:16;;;12257:27;12254:47;;;12297:1;12294;12287:12;12254:47;12323:22;;:::i;:::-;12368:21;12386:2;12368:21;:::i;:::-;12361:5;12354:36;12422:30;12448:2;12444;12440:11;12422:30;:::i;:::-;12417:2;12410:5;12406:14;12399:54;12498:2;12494;12490:11;12477:25;12511:30;12533:7;12511:30;:::i;:::-;12568:2;12557:14;;12550:31;12634:2;12626:11;;;12613:25;12597:14;;;12590:49;12685:3;12677:12;;12664:26;12702:16;;;12699:36;;;12731:1;12728;12721:12;12699:36;12762:8;12758:2;12754:17;12744:27;;;12809:7;12802:4;12798:2;12794:13;12790:27;12780:55;;12831:1;12828;12821:12;12780:55;12867:2;12854:16;12889:2;12885;12882:10;12879:36;;;12895:18;;:::i;:::-;12937:53;12980:2;12961:13;;-1:-1:-1;;12957:27:105;12953:36;;12937:53;:::i;:::-;12924:66;;13013:2;13006:5;12999:17;13053:7;13048:2;13043;13039;13035:11;13031:20;13028:33;13025:53;;;13074:1;13071;13064:12;13025:53;13129:2;13124;13120;13116:11;13111:2;13104:5;13100:14;13087:45;13173:1;13152:14;;;13148:23;;;13141:34;;;;13202:3;13191:15;;13184:30;-1:-1:-1;13195:5:105;-1:-1:-1;13257:36:105;13289:2;13274:18;;13257:36;:::i;:::-;13247:46;;13312:36;13344:2;13333:9;13329:18;13312:36;:::i;13359:241::-;13501:2;13486:18;;13534:1;13523:13;;13513:47;;13540:18;;:::i;13605:698::-;13830:13;;13812:32;;13891:4;13879:17;;13873:24;13799:3;13784:19;;;13906:47;13873:24;13906:47;:::i;:::-;13991:12;13984:4;13973:9;13969:20;13962:42;;-1:-1:-1;;;;;14064:4:105;14056:6;14052:17;14046:24;14042:49;14035:4;14024:9;14020:20;14013:79;14162:4;14154:6;14150:17;14144:24;14137:32;14130:40;14123:4;14112:9;14108:20;14101:70;14227:4;14219:6;14215:17;14209:24;14202:4;14191:9;14187:20;14180:54;14290:4;14282:6;14278:17;14272:24;14265:4;14254:9;14250:20;14243:54;13605:698;;;;:::o;14308:514::-;14561:6;14550:9;14543:25;14604:6;14599:2;14588:9;14584:18;14577:34;14647:6;14642:2;14631:9;14627:18;14620:34;14704:6;14697:14;14690:22;14685:2;14674:9;14670:18;14663:50;14750:3;14744;14733:9;14729:19;14722:32;14524:4;14771:45;14811:3;14800:9;14796:19;14788:6;14771:45;:::i;15070:245::-;15137:6;15190:2;15178:9;15169:7;15165:23;15161:32;15158:52;;;15206:1;15203;15196:12;15158:52;15238:9;15232:16;15257:28;15279:5;15257:28;:::i;15320:380::-;15399:1;15395:12;;;;15442;;;15463:61;;15517:4;15509:6;15505:17;15495:27;;15463:61;15570:2;15562:6;15559:14;15539:18;15536:38;15533:161;;15616:10;15611:3;15607:20;15604:1;15597:31;15651:4;15648:1;15641:15;15679:4;15676:1;15669:15;15533:161;;15320:380;;;:::o;16005:127::-;16066:10;16061:3;16057:20;16054:1;16047:31;16097:4;16094:1;16087:15;16121:4;16118:1;16111:15;16137:176;16204:14;16238:10;;;16250;;;16234:27;;16273:11;;;16270:37;;;16287:18;;:::i;16443:544::-;16544:2;16539:3;16536:11;16533:448;;;16580:1;16605:5;16601:2;16594:17;16650:4;16646:2;16636:19;16720:2;16708:10;16704:19;16701:1;16697:27;16691:4;16687:38;16756:4;16744:10;16741:20;16738:47;;;-1:-1:-1;16779:4:105;16738:47;16834:2;16829:3;16825:12;16822:1;16818:20;16812:4;16808:31;16798:41;;16889:82;16907:2;16900:5;16897:13;16889:82;;;16952:17;;;16933:1;16922:13;16889:82;;;16893:3;;;16443:544;;;:::o;17163:1348::-;17287:3;17281:10;-1:-1:-1;;;;;17306:6:105;17303:30;17300:56;;;17336:18;;:::i;:::-;17365:96;17454:6;17414:38;17446:4;17440:11;17414:38;:::i;:::-;17408:4;17365:96;:::i;:::-;17516:4;;17580:2;17569:14;;17597:1;17592:662;;;;18298:1;18315:6;18312:89;;;-1:-1:-1;18367:19:105;;;18361:26;18312:89;-1:-1:-1;;17120:1:105;17116:11;;;17112:24;17108:29;17098:40;17144:1;17140:11;;;17095:57;18414:81;;17562:943;;17592:662;16390:1;16383:14;;;16427:4;16414:18;;-1:-1:-1;;17628:20:105;;;17745:236;17759:7;17756:1;17753:14;17745:236;;;17848:19;;;17842:26;17827:42;;17940:27;;;;17908:1;17896:14;;;;17775:19;;17745:236;;;17749:3;18009:6;18000:7;17997:19;17994:201;;;18070:19;;;18064:26;-1:-1:-1;;18153:1:105;18149:14;;;18165:3;18145:24;18141:37;18137:42;18122:58;18107:74;;17994:201;-1:-1:-1;;;;;18241:1:105;18225:14;;;18221:22;18208:36;;-1:-1:-1;17163:1348:105:o;18729:127::-;18790:10;18785:3;18781:20;18778:1;18771:31;18821:4;18818:1;18811:15;18845:4;18842:1;18835:15;18861:184;18919:6;18972:2;18960:9;18951:7;18947:23;18943:32;18940:52;;;18988:1;18985;18978:12;18940:52;19011:28;19029:9;19011:28;:::i;19050:135::-;19089:3;19110:17;;;19107:43;;19130:18;;:::i;:::-;-1:-1:-1;19177:1:105;19166:13;;19050:135::o;19804:128::-;19871:9;;;19892:11;;;19889:37;;;19906:18;;:::i;19937:209::-;19975:3;-1:-1:-1;;;;;20056:2:105;20049:5;20045:14;20083:2;20074:7;20071:15;20068:41;;20089:18;;:::i;:::-;20138:1;20125:15;;19937:209;-1:-1:-1;;;19937:209:105:o;20151:125::-;20216:9;;;20237:10;;;20234:36;;;20250:18;;:::i;20281:422::-;20370:1;20413:5;20370:1;20427:270;20448:7;20438:8;20435:21;20427:270;;;20507:4;20503:1;20499:6;20495:17;20489:4;20486:27;20483:53;;;20516:18;;:::i;:::-;20566:7;20556:8;20552:22;20549:55;;;20586:16;;;;20549:55;20665:22;;;;20625:15;;;;20427:270;;;20431:3;20281:422;;;;;:::o;20708:806::-;20757:5;20787:8;20777:80;;-1:-1:-1;20828:1:105;20842:5;;20777:80;20876:4;20866:76;;-1:-1:-1;20913:1:105;20927:5;;20866:76;20958:4;20976:1;20971:59;;;;21044:1;21039:130;;;;20951:218;;20971:59;21001:1;20992:10;;21015:5;;;21039:130;21076:3;21066:8;21063:17;21060:43;;;21083:18;;:::i;:::-;-1:-1:-1;;21139:1:105;21125:16;;21154:5;;20951:218;;21253:2;21243:8;21240:16;21234:3;21228:4;21225:13;21221:36;21215:2;21205:8;21202:16;21197:2;21191:4;21188:12;21184:35;21181:77;21178:159;;;-1:-1:-1;21290:19:105;;;21322:5;;21178:159;21369:34;21394:8;21388:4;21369:34;:::i;:::-;21439:6;21435:1;21431:6;21427:19;21418:7;21415:32;21412:58;;;21450:18;;:::i;:::-;21488:20;;20708:806;-1:-1:-1;;;20708:806:105:o;21519:140::-;21577:5;21606:47;21647:4;21637:8;21633:19;21627:4;21606:47;:::i;21664:607::-;21770:6;21823:2;21811:9;21802:7;21798:23;21794:32;21791:52;;;21839:1;21836;21829:12;21791:52;21872:2;21866:9;21914:2;21906:6;21902:15;21983:6;21971:10;21968:22;-1:-1:-1;;;;;21935:10:105;21932:34;21929:62;21926:88;;;21994:18;;:::i;:::-;22030:2;22023:22;22069:16;;22054:32;;22129:2;22114:18;;22108:25;22173:8;22162:20;;22152:31;;22142:59;;22197:1;22194;22187:12;22142:59;22229:2;22217:15;;22210:30;22221:6;21664:607;-1:-1:-1;;;21664:607:105:o",
    "linkReferences": {},
    "immutableReferences": {
      "58631": [
        { "start": 658, "length": 32 },
        { "start": 1940, "length": 32 },
        { "start": 2011, "length": 32 },
        { "start": 2375, "length": 32 },
        { "start": 2482, "length": 32 },
        { "start": 2548, "length": 32 },
        { "start": 2765, "length": 32 },
        { "start": 3211, "length": 32 },
        { "start": 3277, "length": 32 },
        { "start": 3527, "length": 32 },
        { "start": 3593, "length": 32 },
        { "start": 4233, "length": 32 },
        { "start": 4299, "length": 32 },
        { "start": 4559, "length": 32 },
        { "start": 4625, "length": 32 },
        { "start": 5524, "length": 32 },
        { "start": 5590, "length": 32 },
        { "start": 5914, "length": 32 }
      ]
    }
  },
  "methodIdentifiers": {
    "INIT()": "ea643914",
    "PARENT()": "122b83f9",
    "TYPE()": "bb24fe8a",
    "VEECODE()": "d61735ca",
    "abort(uint96)": "1ed75f1f",
    "auction(uint96,(uint48,uint48,bool,uint256,bytes),uint8,uint8)": "bae96bdd",
    "auctionType()": "994595e1",
    "bid(uint96,address,address,uint256,bytes)": "87698a31",
    "cancelAuction(uint96)": "b04046df",
    "capacityInQuote(uint96)": "39792cdc",
    "claimBids(uint96,uint64[])": "0a35511b",
    "dedicatedSettlePeriod()": "a85cebb6",
    "getAuctionData(uint96)": "cadb3383",
    "getBid(uint96,uint64)": "a8bf44e4",
    "getBidClaim(uint96,uint64)": "8f21c318",
    "getBidIdAtIndex(uint96,uint256)": "7d7b6853",
    "getBidIds(uint96,uint256,uint256)": "00b33217",
    "getLot(uint96)": "4e1f4258",
    "getNumBids(uint96)": "d899a337",
    "getPartialFill(uint96)": "a16f7ef7",
    "hasEnded(uint96)": "03855921",
    "isLive(uint96)": "732efc03",
    "isUpcoming(uint96)": "0440ec53",
    "lotAuctionOutput(uint96)": "0cd0bcf2",
    "lotData(uint96)": "5806afc3",
    "minAuctionDuration()": "54134876",
    "refundBid(uint96,uint64,uint256,address)": "7d9234bc",
    "remainingCapacity(uint96)": "ace54da5",
    "setDedicatedSettlePeriod(uint48)": "29da5abd",
    "setMinAuctionDuration(uint48)": "12d6ef2d",
    "settle(uint96,uint256)": "cd280bdb"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"auctionHouse_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Auction_AmountLessThanMinimum\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId\",\"type\":\"uint96\"}],\"name\":\"Auction_DedicatedSettlePeriod\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction_InsufficientCapacity\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId\",\"type\":\"uint96\"},{\"internalType\":\"uint96\",\"name\":\"bidId\",\"type\":\"uint96\"}],\"name\":\"Auction_InvalidBidId\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint48\",\"name\":\"duration_\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"minimum_\",\"type\":\"uint48\"}],\"name\":\"Auction_InvalidDuration\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId\",\"type\":\"uint96\"}],\"name\":\"Auction_InvalidLotId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction_InvalidParams\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint48\",\"name\":\"start_\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"minimum_\",\"type\":\"uint48\"}],\"name\":\"Auction_InvalidStart\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId\",\"type\":\"uint96\"}],\"name\":\"Auction_LotActive\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId\",\"type\":\"uint96\"}],\"name\":\"Auction_LotNotActive\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId\",\"type\":\"uint96\"}],\"name\":\"Auction_LotNotConcluded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction_NotAuthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction_NotBidder\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction_NotImplemented\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction_OnlyLotOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId\",\"type\":\"uint96\"}],\"name\":\"Auction_WrongState\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"bidId\",\"type\":\"uint64\"}],\"name\":\"Bid_WrongState\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"parent_\",\"type\":\"address\"}],\"name\":\"Module_InvalidParent\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module_OnlyInternal\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller_\",\"type\":\"address\"}],\"name\":\"Module_OnlyParent\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"NotPermitted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"INIT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PARENT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TYPE\",\"outputs\":[{\"internalType\":\"enum Module.Type\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VEECODE\",\"outputs\":[{\"internalType\":\"Veecode\",\"name\":\"\",\"type\":\"bytes7\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId_\",\"type\":\"uint96\"}],\"name\":\"abort\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId_\",\"type\":\"uint96\"},{\"components\":[{\"internalType\":\"uint48\",\"name\":\"start\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"duration\",\"type\":\"uint48\"},{\"internalType\":\"bool\",\"name\":\"capacityInQuote\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"capacity\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"implParams\",\"type\":\"bytes\"}],\"internalType\":\"struct IAuction.AuctionParams\",\"name\":\"params_\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"quoteTokenDecimals_\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"baseTokenDecimals_\",\"type\":\"uint8\"}],\"name\":\"auction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"auctionType\",\"outputs\":[{\"internalType\":\"enum IAuction.AuctionType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId_\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"bidder_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"referrer_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"auctionData_\",\"type\":\"bytes\"}],\"name\":\"bid\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"bidId\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId_\",\"type\":\"uint96\"}],\"name\":\"cancelAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId_\",\"type\":\"uint96\"}],\"name\":\"capacityInQuote\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId_\",\"type\":\"uint96\"},{\"internalType\":\"uint64[]\",\"name\":\"bidIds_\",\"type\":\"uint64[]\"}],\"name\":\"claimBids\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"paid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"payout\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"refund\",\"type\":\"uint256\"}],\"internalType\":\"struct IBatchAuction.BidClaim[]\",\"name\":\"bidClaims\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"auctionOutput\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dedicatedSettlePeriod\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId_\",\"type\":\"uint96\"}],\"name\":\"getAuctionData\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"enum IFixedPriceBatch.LotStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"nextBidId\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"settlementCleared\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"totalBidAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minFilled\",\"type\":\"uint256\"}],\"internalType\":\"struct IFixedPriceBatch.AuctionData\",\"name\":\"auctionData_\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId_\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"bidId_\",\"type\":\"uint64\"}],\"name\":\"getBid\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"amount\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"internalType\":\"enum IFixedPriceBatch.BidStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"internalType\":\"struct IFixedPriceBatch.Bid\",\"name\":\"bid\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId_\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"bidId_\",\"type\":\"uint64\"}],\"name\":\"getBidClaim\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"paid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"payout\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"refund\",\"type\":\"uint256\"}],\"internalType\":\"struct IBatchAuction.BidClaim\",\"name\":\"bidClaim\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getBidIdAtIndex\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getBidIds\",\"outputs\":[{\"internalType\":\"uint64[]\",\"name\":\"\",\"type\":\"uint64[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId_\",\"type\":\"uint96\"}],\"name\":\"getLot\",\"outputs\":[{\"components\":[{\"internalType\":\"uint48\",\"name\":\"start\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"conclusion\",\"type\":\"uint48\"},{\"internalType\":\"uint8\",\"name\":\"quoteTokenDecimals\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"baseTokenDecimals\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"capacityInQuote\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"capacity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"purchased\",\"type\":\"uint256\"}],\"internalType\":\"struct IAuction.Lot\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"name\":\"getNumBids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId_\",\"type\":\"uint96\"}],\"name\":\"getPartialFill\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"hasPartialFill\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint64\",\"name\":\"bidId\",\"type\":\"uint64\"},{\"internalType\":\"uint96\",\"name\":\"refund\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"payout\",\"type\":\"uint256\"}],\"internalType\":\"struct IFixedPriceBatch.PartialFill\",\"name\":\"partialFill\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId_\",\"type\":\"uint96\"}],\"name\":\"hasEnded\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId_\",\"type\":\"uint96\"}],\"name\":\"isLive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId_\",\"type\":\"uint96\"}],\"name\":\"isUpcoming\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"name\":\"lotAuctionOutput\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"id\",\"type\":\"uint96\"}],\"name\":\"lotData\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"start\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"conclusion\",\"type\":\"uint48\"},{\"internalType\":\"uint8\",\"name\":\"quoteTokenDecimals\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"baseTokenDecimals\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"capacityInQuote\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"capacity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"purchased\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minAuctionDuration\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId_\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"bidId_\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"index_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"caller_\",\"type\":\"address\"}],\"name\":\"refundBid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"refund\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId_\",\"type\":\"uint96\"}],\"name\":\"remainingCapacity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint48\",\"name\":\"period_\",\"type\":\"uint48\"}],\"name\":\"setDedicatedSettlePeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint48\",\"name\":\"duration_\",\"type\":\"uint48\"}],\"name\":\"setMinAuctionDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId_\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"num_\",\"type\":\"uint256\"}],\"name\":\"settle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"capacity\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"finished\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"auctionOutput\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"INIT()\":{\"details\":\"This function is called when the module is installed or upgraded by the module.MUST BE GATED BY onlyParent. Used to encompass any initialization or upgrade logic.\"},\"TYPE()\":{\"details\":\"This enables the parent contract to check that the module Keycode specifiedis of the correct type\"},\"abort(uint96)\":{\"details\":\"Implements a basic abort function that:             - Validates the lot id and state             - Calls the implementation-specific function             The abort function allows anyone to abort the lot after the conclusion and settlement time has passed.             This can be useful if the lot is unable to be settled, or if the seller is unwilling to settle the lot.             This function reverts if:             - The lot id is invalid             - The lot has not concluded             - The lot is in the dedicated settle period             - The lot is settled (after which it cannot be aborted)\",\"params\":{\"lotId_\":\"The lot id\"}},\"auction(uint96,(uint48,uint48,bool,uint256,bytes),uint8,uint8)\":{\"details\":\"If the start time is zero, the auction will have a start time of the current block timestamp.             This function handles the following:             - Validates the lot parameters             - Stores the auction lot             - Calls the implementation-specific function             This function reverts if:             - The caller is not the parent of the module             - The start time is in the past             - The duration is less than the minimum\",\"params\":{\"baseTokenDecimals_\":\"The base token decimals\",\"lotId_\":\"The lot id\",\"params_\":\"The auction parameters\",\"quoteTokenDecimals_\":\"The quote token decimals\"}},\"bid(uint96,address,address,uint256,bytes)\":{\"details\":\"Implements a basic bid function that:             - Validates the lot and bid parameters             - Calls the implementation-specific function             This function reverts if:             - The lot id is invalid             - The lot has not started             - The lot has concluded             - The lot is already settled             - The caller is not an internal module\",\"params\":{\"amount_\":\"The amount of quote tokens to bid\",\"auctionData_\":\"The auction-specific data\",\"bidder_\":\"The bidder of the purchased tokens\",\"lotId_\":\"The lot id\",\"referrer_\":\"The referrer of the bid\"},\"returns\":{\"bidId\":\"          The bid id\"}},\"cancelAuction(uint96)\":{\"details\":\"Assumptions:             - The parent will refund the seller the remaining capacity             - The parent will verify that the caller is the seller             This function handles the following:             - Calls the implementation-specific function             - Updates the lot data             This function reverts if:             - the caller is not the parent of the module             - the lot id is invalid             - the lot has concluded\",\"params\":{\"lotId_\":\"The lot id\"}},\"capacityInQuote(uint96)\":{\"details\":\"The implementing function should handle the following:             - Return true if the capacity is in quote tokens             - Return false if the capacity is in base tokens\",\"params\":{\"lotId_\":\"The lot id\"},\"returns\":{\"_0\":\"bool    Whether or not the capacity is in quote tokens\"}},\"claimBids(uint96,uint64[])\":{\"details\":\"Implements a basic claimBids function that:             - Validates the lot and bid parameters             - Calls the implementation-specific function             This function reverts if:             - The lot id is invalid             - The lot is not settled             - The caller is not an internal module\",\"params\":{\"bidIds_\":\"The bid ids\",\"lotId_\":\"The lot id\"},\"returns\":{\"auctionOutput\":\"  The auction-specific output\",\"bidClaims\":\"      The bid claim data\"}},\"getAuctionData(uint96)\":{\"details\":\"This function reverts if:             - The lot ID is invalid\",\"params\":{\"lotId_\":\"The lot ID\"},\"returns\":{\"auctionData_\":\"   The `AuctionData`\"}},\"getBid(uint96,uint64)\":{\"details\":\"This function reverts if:             - The lot ID is invalid             - The bid ID is invalid\",\"params\":{\"bidId_\":\"The bid ID\",\"lotId_\":\"The lot ID\"},\"returns\":{\"bid\":\"            The `Bid` data\"}},\"getBidClaim(uint96,uint64)\":{\"details\":\"This function reverts if:             - The lot ID is invalid             - The lot is not settled (since there would be no claim)             - The bid ID is invalid\",\"params\":{\"bidId_\":\"The bid ID\",\"lotId_\":\"The lot ID\"},\"returns\":{\"bidClaim\":\"   The bid claim data\"}},\"getBidIdAtIndex(uint96,uint256)\":{\"details\":\"This function is not implemented in fixed price batch since bid IDs are not stored in an array\",\"params\":{\"index_\":\"The index\",\"lotId_\":\"The lot ID\"},\"returns\":{\"_0\":\"  The bid ID\"}},\"getBidIds(uint96,uint256,uint256)\":{\"details\":\"This function is not implemented in fixed price batch since bid IDs are not stored in an array\",\"params\":{\"count_\":\"The number of bids to retrieve\",\"lotId_\":\"The lot ID\",\"start_\":\"The index to start retrieving bid IDs from\"},\"returns\":{\"_0\":\" The bid IDs\"}},\"getLot(uint96)\":{\"params\":{\"lotId_\":\"The lot ID\"}},\"getNumBids(uint96)\":{\"details\":\"This function is not implemented in fixed price batch since bid IDs are not stored in an array             A proxy is using the nextBidId to determine how many bids have been submitted, but this doesn't consider refunds\",\"params\":{\"lotId_\":\"The lot ID\"},\"returns\":{\"_0\":\"The number of bids\"}},\"getPartialFill(uint96)\":{\"details\":\"For ease of use, this function determines if a partial fill exists.             This function reverts if:             - The lot ID is invalid             - The lot is not settled\",\"params\":{\"lotId_\":\"The lot ID\"},\"returns\":{\"hasPartialFill\":\" True if a partial fill exists\",\"partialFill\":\"    The `PartialFill` data\"}},\"hasEnded(uint96)\":{\"details\":\"The implementing function should handle the following:             - Return true if the lot is not accepting bids/purchases and will not at any point             - Return false if the lot hasn't started or is actively accepting bids/purchases\",\"params\":{\"lotId_\":\"The lot id\"},\"returns\":{\"_0\":\"bool    Whether or not the lot is active\"}},\"isLive(uint96)\":{\"details\":\"A lot is active if:             - The lot has not concluded             - The lot has started             - The lot has not sold out or been cancelled (capacity > 0)\",\"params\":{\"lotId_\":\"The lot ID\"},\"returns\":{\"_0\":\"bool    Whether or not the lot is active\"}},\"isUpcoming(uint96)\":{\"details\":\"The implementing function should handle the following:             - Return true if the lot has not started yet AND has not been cancelled             - Return false if the lot is active, has ended, or was cancelled\",\"params\":{\"lotId_\":\"The lot id\"},\"returns\":{\"_0\":\"bool    Whether or not the lot is upcoming\"}},\"refundBid(uint96,uint64,uint256,address)\":{\"details\":\"Implements a basic refundBid function that:             - Validates the lot and bid parameters             - Calls the implementation-specific function             This function reverts if:             - The lot id is invalid             - The lot has not started             - The lot is concluded, decrypted or settled             - The bid id is invalid             - `caller_` is not the bid owner             - The bid is claimed or refunded             - The caller is not an internal module\",\"params\":{\"bidId_\":\"The bid id\",\"caller_\":\"The caller\",\"index_\":\"The index of the bid ID in the auction's bid list\",\"lotId_\":\"The lot id\"},\"returns\":{\"refund\":\"     The amount of quote tokens to refund\"}},\"remainingCapacity(uint96)\":{\"details\":\"The implementing function should handle the following:             - Return the remaining capacity of the lot\",\"params\":{\"lotId_\":\"The lot id\"},\"returns\":{\"_0\":\"uint96 The remaining capacity of the lot\"}},\"setMinAuctionDuration(uint48)\":{\"details\":\"This function must be called by the parent AuctionHouse, and             can be called by governance using `execOnModule`.\"},\"settle(uint96,uint256)\":{\"details\":\"Implements a basic settle function that:             - Validates the lot and bid parameters             - Calls the implementation-specific function             - Updates the lot data             This function reverts if:             - The lot id is invalid             - The lot has not started             - The lot is active             - The lot has already been settled             - The caller is not an internal module\",\"params\":{\"lotId_\":\"The lot id\",\"num_\":\"The number of winning bids to settle (capped at the remaining number if more is provided)\"},\"returns\":{\"auctionOutput\":\"  Custom data returned by the auction module\",\"capacity\":\"       The original capacity of the lot\",\"finished\":\"       Whether the settlement is finished\",\"totalIn\":\"        Total amount of quote tokens from bids that were filled\",\"totalOut\":\"       Total amount of base tokens paid out to winning bids\"}}},\"stateVariables\":{\"_auctionData\":{\"details\":\"Access via `getAuctionData()`\"},\"_bids\":{\"details\":\"Access via `getBid()`\"},\"_lotPartialFill\":{\"details\":\"Each FPBA can have at most one partial fill             Access via `getPartialFill()`\"}},\"title\":\"FixedPriceBatch\",\"version\":1},\"userdoc\":{\"errors\":{\"Module_InvalidParent(address)\":[{\"notice\":\"Error when the parent contract is invalid\"}],\"Module_OnlyInternal()\":[{\"notice\":\"Error when a module function is called by a non-internal contract\"}],\"Module_OnlyParent(address)\":[{\"notice\":\"Error when a module function is called by a non-parent contract\"}]},\"kind\":\"user\",\"methods\":{\"INIT()\":{\"notice\":\"Initialization function for the module\"},\"PARENT()\":{\"notice\":\"The parent contract for this module.\"},\"TYPE()\":{\"notice\":\"2 byte identifier for the module type\"},\"VEECODE()\":{\"notice\":\"7 byte, versioned identifier for the module. 2 characters from 0-9 that signify the version and 3-5 characters from A-Z.\"},\"abort(uint96)\":{\"notice\":\"Abort a batch auction that cannot be settled, refunding the seller and allowing bidders to claim refunds\"},\"auction(uint96,(uint48,uint48,bool,uint256,bytes),uint8,uint8)\":{\"notice\":\"Create an auction lot\"},\"auctionType()\":{\"notice\":\"Get the auction type\"},\"bid(uint96,address,address,uint256,bytes)\":{\"notice\":\"Bid on an auction lot\"},\"cancelAuction(uint96)\":{\"notice\":\"Cancel an auction lot\"},\"capacityInQuote(uint96)\":{\"notice\":\"Get whether or not the capacity is in quote tokens\"},\"claimBids(uint96,uint64[])\":{\"notice\":\"Claim multiple bids\"},\"dedicatedSettlePeriod()\":{\"notice\":\"Time period after auction conclusion where bidders cannot refund bids\"},\"getAuctionData(uint96)\":{\"notice\":\"Returns the `AuctionData` data for an auction lot\"},\"getBid(uint96,uint64)\":{\"notice\":\"Returns the `Bid` and `EncryptedBid` data for a given lot and bid ID\"},\"getBidClaim(uint96,uint64)\":{\"notice\":\"Get the claim data for a bidThis provides information on the outcome of a bid, independent of the claim status\"},\"getBidIdAtIndex(uint96,uint256)\":{\"notice\":\"Get the bid ID at the given index\"},\"getBidIds(uint96,uint256,uint256)\":{\"notice\":\"Get the bid IDs from the given index\"},\"getLot(uint96)\":{\"notice\":\"Get the lot data for a given lot ID\"},\"getNumBids(uint96)\":{\"notice\":\"Get the number of bids for a lot\"},\"getPartialFill(uint96)\":{\"notice\":\"Returns the `PartialFill` data for an auction lot\"},\"hasEnded(uint96)\":{\"notice\":\"Returns whether the auction has ended\"},\"isLive(uint96)\":{\"notice\":\"Returns whether the auction is currently accepting bids or purchases\"},\"isUpcoming(uint96)\":{\"notice\":\"Returns whether the auction is upcoming\"},\"lotAuctionOutput(uint96)\":{\"notice\":\"Custom auction output for each lot\"},\"lotData(uint96)\":{\"notice\":\"General information pertaining to auction lots\"},\"minAuctionDuration()\":{\"notice\":\"Minimum auction duration in seconds\"},\"refundBid(uint96,uint64,uint256,address)\":{\"notice\":\"Refund a bid\"},\"remainingCapacity(uint96)\":{\"notice\":\"Get the remaining capacity of a lot\"},\"setMinAuctionDuration(uint48)\":{\"notice\":\"Set the minimum auction duration\"},\"settle(uint96,uint256)\":{\"notice\":\"Settle a batch auction lot with on-chain storage and settlement\"}},\"notice\":\"A module for creating fixed price batch auctions\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/modules/auctions/batch/FPB.sol\":\"FixedPriceBatch\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@clones-with-immutable-args-1.1.1/=dependencies/clones-with-immutable-args-1.1.1/src/\",\":@forge-std-1.9.1/=dependencies/forge-std-1.9.1/src/\",\":@openzeppelin-contracts-4.9.2/=dependencies/@openzeppelin-contracts-4.9.2/\",\":@solady-0.0.124/=dependencies/solady-0.0.124/src/\",\":@solmate-6.8.0/=dependencies/solmate-6.8.0/src/\"]},\"sources\":{\"dependencies/solady-0.0.124/src/utils/FixedPointMathLib.sol\":{\"keccak256\":\"0x8f90be29fd62817be94061136dd2dcc42cf2d5cc38005b1b606d2ee826598776\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d794cf6143263cba72409c99b5036626eeb08ed5fc71cf8beee4881c6fc58e4\",\"dweb:/ipfs/QmePnCXajwV65z9p9rgDrjo2sgwkZodVdr6QJsWNvQvfcV\"]},\"dependencies/solmate-6.8.0/src/auth/Owned.sol\":{\"keccak256\":\"0xfedb27d14c508342c33eb067c9a02eabcdb0f9dcf93b04ded1001f580d12d0ea\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://1ff52bbee698b9cf9e4574615e6550be0887ccf355f6571e23d6f25b332e79b4\",\"dweb:/ipfs/QmVorA2apojVRStzS7h8aFccR3Uv32G6HVtBtFHZrE7YXx\"]},\"src/interfaces/modules/IAuction.sol\":{\"keccak256\":\"0xcd173cbd0c4d98f4e31a1dd37e8196566d89142afb87e8de64da669edeb2310d\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://62fbdad49956da85dfef2ffab63f40ba384d2b9d9bc9b73294189c66d63c5016\",\"dweb:/ipfs/QmRVyJYwwfoho7cN39A2diVTmoUZHE5WRn13DyyFvngGVF\"]},\"src/interfaces/modules/IBatchAuction.sol\":{\"keccak256\":\"0xebea8d3d97beca2607af9404f80d9fb8f08d7866aced2714c51491b89c61d1d1\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://e7b012ae6b9db6b8ff57e916df80cb92877a2c8908c5458a2a2545039c9acc7d\",\"dweb:/ipfs/QmSKJsd6PvZWVRUgxU5quAXLnqmqqC5Gg2NzUD7vwY5are\"]},\"src/interfaces/modules/auctions/IFixedPriceBatch.sol\":{\"keccak256\":\"0x3e6a05664069f6237bb744f03cb2ed013a51341803868c41884253aa1490d081\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://d7e54c2238dcf46e138c835de63e8d2bfd07ace676a7d4739d349d8b8ac029a4\",\"dweb:/ipfs/QmQm4mjYHTHRnnqS1pCyEvnYFdcbdhkx3HoQ6FWgtjDM4m\"]},\"src/modules/Auction.sol\":{\"keccak256\":\"0x9c3d79f8f3f41e220d881b687103f3d773130b974b09ad7406eb761f4d01ef87\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://67a9dec8a05395a5f8809f9b12aabc59698eb84344aa8c3164c8cb89cec88cf6\",\"dweb:/ipfs/QmaB8JHa6dKFvRcZ1i9ywSqk4EcECozfJuM1XeModo3i5w\"]},\"src/modules/Keycode.sol\":{\"keccak256\":\"0xe66d837151db915034f1a3def76c68b2103774128995fc6738ebd5a23d2c2447\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://11f3cd702238d51b91036378d941dc624e48ef6370f04ad1ad8c7a6f421961b5\",\"dweb:/ipfs/QmVuFPmnhkzcc4UMZEzoNkMJyAyAR3iv9tP7epuLymW7vT\"]},\"src/modules/Modules.sol\":{\"keccak256\":\"0xd4aad24a3336ac1d5dd531b65c1d109d092b370fb32046bfe5247beb19874dfb\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://5af6ed6a4e90ddd5bc2992df7bd37714d045fa7a71611c7429651e20c82d28f8\",\"dweb:/ipfs/QmSy8tUrQrSpSjnA2FCJchqpK52CBxX1kmftK2hCgcLYLy\"]},\"src/modules/auctions/BatchAuctionModule.sol\":{\"keccak256\":\"0xb573483f2f486dd0dacafe9ed81c9a1d305e9328351cdf77530d62172c3abc4c\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://ece68ba6081cc8a89baa77478a88288b6a84108b064caa596e7b17119fcbda59\",\"dweb:/ipfs/QmeftyrM6e2KFTuwMLCQJU8x1GcXC2iwGJuTVu2z9HcceB\"]},\"src/modules/auctions/batch/FPB.sol\":{\"keccak256\":\"0xf0113ce008d7bdc4292bec0547e7e6be85104845c6b1891598d1e38a1d243876\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://31fe557977d0038e4487417fea344e143ef5431860c664797839bc39f32bfacf\",\"dweb:/ipfs/QmYsnJ3KPWSAxEbWG84ymLZvG2FY81emtUumwfbAvuzU33\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.19+commit.7dd6d404" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "auctionHouse_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Auction_AmountLessThanMinimum"
        },
        {
          "inputs": [
            { "internalType": "uint96", "name": "lotId", "type": "uint96" }
          ],
          "type": "error",
          "name": "Auction_DedicatedSettlePeriod"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Auction_InsufficientCapacity"
        },
        {
          "inputs": [
            { "internalType": "uint96", "name": "lotId", "type": "uint96" },
            { "internalType": "uint96", "name": "bidId", "type": "uint96" }
          ],
          "type": "error",
          "name": "Auction_InvalidBidId"
        },
        {
          "inputs": [
            { "internalType": "uint48", "name": "duration_", "type": "uint48" },
            { "internalType": "uint48", "name": "minimum_", "type": "uint48" }
          ],
          "type": "error",
          "name": "Auction_InvalidDuration"
        },
        {
          "inputs": [
            { "internalType": "uint96", "name": "lotId", "type": "uint96" }
          ],
          "type": "error",
          "name": "Auction_InvalidLotId"
        },
        { "inputs": [], "type": "error", "name": "Auction_InvalidParams" },
        {
          "inputs": [
            { "internalType": "uint48", "name": "start_", "type": "uint48" },
            { "internalType": "uint48", "name": "minimum_", "type": "uint48" }
          ],
          "type": "error",
          "name": "Auction_InvalidStart"
        },
        {
          "inputs": [
            { "internalType": "uint96", "name": "lotId", "type": "uint96" }
          ],
          "type": "error",
          "name": "Auction_LotActive"
        },
        {
          "inputs": [
            { "internalType": "uint96", "name": "lotId", "type": "uint96" }
          ],
          "type": "error",
          "name": "Auction_LotNotActive"
        },
        {
          "inputs": [
            { "internalType": "uint96", "name": "lotId", "type": "uint96" }
          ],
          "type": "error",
          "name": "Auction_LotNotConcluded"
        },
        { "inputs": [], "type": "error", "name": "Auction_NotAuthorized" },
        { "inputs": [], "type": "error", "name": "Auction_NotBidder" },
        { "inputs": [], "type": "error", "name": "Auction_NotImplemented" },
        { "inputs": [], "type": "error", "name": "Auction_OnlyLotOwner" },
        {
          "inputs": [
            { "internalType": "uint96", "name": "lotId", "type": "uint96" }
          ],
          "type": "error",
          "name": "Auction_WrongState"
        },
        {
          "inputs": [
            { "internalType": "uint96", "name": "lotId", "type": "uint96" },
            { "internalType": "uint64", "name": "bidId", "type": "uint64" }
          ],
          "type": "error",
          "name": "Bid_WrongState"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "parent_", "type": "address" }
          ],
          "type": "error",
          "name": "Module_InvalidParent"
        },
        { "inputs": [], "type": "error", "name": "Module_OnlyInternal" },
        {
          "inputs": [
            { "internalType": "address", "name": "caller_", "type": "address" }
          ],
          "type": "error",
          "name": "Module_OnlyParent"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "caller", "type": "address" }
          ],
          "type": "error",
          "name": "NotPermitted"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "INIT"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "PARENT",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "TYPE",
          "outputs": [
            { "internalType": "enum Module.Type", "name": "", "type": "uint8" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "VEECODE",
          "outputs": [
            { "internalType": "Veecode", "name": "", "type": "bytes7" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint96", "name": "lotId_", "type": "uint96" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "abort"
        },
        {
          "inputs": [
            { "internalType": "uint96", "name": "lotId_", "type": "uint96" },
            {
              "internalType": "struct IAuction.AuctionParams",
              "name": "params_",
              "type": "tuple",
              "components": [
                { "internalType": "uint48", "name": "start", "type": "uint48" },
                {
                  "internalType": "uint48",
                  "name": "duration",
                  "type": "uint48"
                },
                {
                  "internalType": "bool",
                  "name": "capacityInQuote",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "capacity",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "implParams",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "uint8",
              "name": "quoteTokenDecimals_",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "baseTokenDecimals_",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "auction"
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "auctionType",
          "outputs": [
            {
              "internalType": "enum IAuction.AuctionType",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint96", "name": "lotId_", "type": "uint96" },
            { "internalType": "address", "name": "bidder_", "type": "address" },
            {
              "internalType": "address",
              "name": "referrer_",
              "type": "address"
            },
            { "internalType": "uint256", "name": "amount_", "type": "uint256" },
            { "internalType": "bytes", "name": "auctionData_", "type": "bytes" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "bid",
          "outputs": [
            { "internalType": "uint64", "name": "bidId", "type": "uint64" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint96", "name": "lotId_", "type": "uint96" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "cancelAuction"
        },
        {
          "inputs": [
            { "internalType": "uint96", "name": "lotId_", "type": "uint96" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "capacityInQuote",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "uint96", "name": "lotId_", "type": "uint96" },
            {
              "internalType": "uint64[]",
              "name": "bidIds_",
              "type": "uint64[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimBids",
          "outputs": [
            {
              "internalType": "struct IBatchAuction.BidClaim[]",
              "name": "bidClaims",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "bidder",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "referrer",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "paid",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "payout",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "refund",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "auctionOutput",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "dedicatedSettlePeriod",
          "outputs": [
            { "internalType": "uint48", "name": "", "type": "uint48" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint96", "name": "lotId_", "type": "uint96" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAuctionData",
          "outputs": [
            {
              "internalType": "struct IFixedPriceBatch.AuctionData",
              "name": "auctionData_",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "enum IFixedPriceBatch.LotStatus",
                  "name": "status",
                  "type": "uint8"
                },
                {
                  "internalType": "uint64",
                  "name": "nextBidId",
                  "type": "uint64"
                },
                {
                  "internalType": "bool",
                  "name": "settlementCleared",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "totalBidAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minFilled",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint96", "name": "lotId_", "type": "uint96" },
            { "internalType": "uint64", "name": "bidId_", "type": "uint64" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getBid",
          "outputs": [
            {
              "internalType": "struct IFixedPriceBatch.Bid",
              "name": "bid",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "bidder",
                  "type": "address"
                },
                {
                  "internalType": "uint96",
                  "name": "amount",
                  "type": "uint96"
                },
                {
                  "internalType": "address",
                  "name": "referrer",
                  "type": "address"
                },
                {
                  "internalType": "enum IFixedPriceBatch.BidStatus",
                  "name": "status",
                  "type": "uint8"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint96", "name": "lotId_", "type": "uint96" },
            { "internalType": "uint64", "name": "bidId_", "type": "uint64" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getBidClaim",
          "outputs": [
            {
              "internalType": "struct IBatchAuction.BidClaim",
              "name": "bidClaim",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "bidder",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "referrer",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "paid",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "payout",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "refund",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint96", "name": "", "type": "uint96" },
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getBidIdAtIndex",
          "outputs": [
            { "internalType": "uint64", "name": "", "type": "uint64" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint96", "name": "", "type": "uint96" },
            { "internalType": "uint256", "name": "", "type": "uint256" },
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getBidIds",
          "outputs": [
            { "internalType": "uint64[]", "name": "", "type": "uint64[]" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint96", "name": "lotId_", "type": "uint96" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getLot",
          "outputs": [
            {
              "internalType": "struct IAuction.Lot",
              "name": "",
              "type": "tuple",
              "components": [
                { "internalType": "uint48", "name": "start", "type": "uint48" },
                {
                  "internalType": "uint48",
                  "name": "conclusion",
                  "type": "uint48"
                },
                {
                  "internalType": "uint8",
                  "name": "quoteTokenDecimals",
                  "type": "uint8"
                },
                {
                  "internalType": "uint8",
                  "name": "baseTokenDecimals",
                  "type": "uint8"
                },
                {
                  "internalType": "bool",
                  "name": "capacityInQuote",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "capacity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "sold",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "purchased",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint96", "name": "", "type": "uint96" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getNumBids",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint96", "name": "lotId_", "type": "uint96" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPartialFill",
          "outputs": [
            {
              "internalType": "bool",
              "name": "hasPartialFill",
              "type": "bool"
            },
            {
              "internalType": "struct IFixedPriceBatch.PartialFill",
              "name": "partialFill",
              "type": "tuple",
              "components": [
                { "internalType": "uint64", "name": "bidId", "type": "uint64" },
                {
                  "internalType": "uint96",
                  "name": "refund",
                  "type": "uint96"
                },
                {
                  "internalType": "uint256",
                  "name": "payout",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint96", "name": "lotId_", "type": "uint96" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasEnded",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "uint96", "name": "lotId_", "type": "uint96" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isLive",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "uint96", "name": "lotId_", "type": "uint96" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isUpcoming",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "uint96", "name": "", "type": "uint96" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "lotAuctionOutput",
          "outputs": [{ "internalType": "bytes", "name": "", "type": "bytes" }]
        },
        {
          "inputs": [
            { "internalType": "uint96", "name": "id", "type": "uint96" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "lotData",
          "outputs": [
            { "internalType": "uint48", "name": "start", "type": "uint48" },
            {
              "internalType": "uint48",
              "name": "conclusion",
              "type": "uint48"
            },
            {
              "internalType": "uint8",
              "name": "quoteTokenDecimals",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "baseTokenDecimals",
              "type": "uint8"
            },
            {
              "internalType": "bool",
              "name": "capacityInQuote",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "capacity",
              "type": "uint256"
            },
            { "internalType": "uint256", "name": "sold", "type": "uint256" },
            {
              "internalType": "uint256",
              "name": "purchased",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "minAuctionDuration",
          "outputs": [
            { "internalType": "uint48", "name": "", "type": "uint48" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint96", "name": "lotId_", "type": "uint96" },
            { "internalType": "uint64", "name": "bidId_", "type": "uint64" },
            { "internalType": "uint256", "name": "index_", "type": "uint256" },
            { "internalType": "address", "name": "caller_", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "refundBid",
          "outputs": [
            { "internalType": "uint256", "name": "refund", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint96", "name": "lotId_", "type": "uint96" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "remainingCapacity",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint48", "name": "period_", "type": "uint48" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDedicatedSettlePeriod"
        },
        {
          "inputs": [
            { "internalType": "uint48", "name": "duration_", "type": "uint48" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMinAuctionDuration"
        },
        {
          "inputs": [
            { "internalType": "uint96", "name": "lotId_", "type": "uint96" },
            { "internalType": "uint256", "name": "num_", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "settle",
          "outputs": [
            { "internalType": "uint256", "name": "totalIn", "type": "uint256" },
            {
              "internalType": "uint256",
              "name": "totalOut",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "capacity",
              "type": "uint256"
            },
            { "internalType": "bool", "name": "finished", "type": "bool" },
            {
              "internalType": "bytes",
              "name": "auctionOutput",
              "type": "bytes"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "INIT()": {
            "details": "This function is called when the module is installed or upgraded by the module.MUST BE GATED BY onlyParent. Used to encompass any initialization or upgrade logic."
          },
          "TYPE()": {
            "details": "This enables the parent contract to check that the module Keycode specifiedis of the correct type"
          },
          "abort(uint96)": {
            "details": "Implements a basic abort function that:             - Validates the lot id and state             - Calls the implementation-specific function             The abort function allows anyone to abort the lot after the conclusion and settlement time has passed.             This can be useful if the lot is unable to be settled, or if the seller is unwilling to settle the lot.             This function reverts if:             - The lot id is invalid             - The lot has not concluded             - The lot is in the dedicated settle period             - The lot is settled (after which it cannot be aborted)",
            "params": { "lotId_": "The lot id" }
          },
          "auction(uint96,(uint48,uint48,bool,uint256,bytes),uint8,uint8)": {
            "details": "If the start time is zero, the auction will have a start time of the current block timestamp.             This function handles the following:             - Validates the lot parameters             - Stores the auction lot             - Calls the implementation-specific function             This function reverts if:             - The caller is not the parent of the module             - The start time is in the past             - The duration is less than the minimum",
            "params": {
              "baseTokenDecimals_": "The base token decimals",
              "lotId_": "The lot id",
              "params_": "The auction parameters",
              "quoteTokenDecimals_": "The quote token decimals"
            }
          },
          "bid(uint96,address,address,uint256,bytes)": {
            "details": "Implements a basic bid function that:             - Validates the lot and bid parameters             - Calls the implementation-specific function             This function reverts if:             - The lot id is invalid             - The lot has not started             - The lot has concluded             - The lot is already settled             - The caller is not an internal module",
            "params": {
              "amount_": "The amount of quote tokens to bid",
              "auctionData_": "The auction-specific data",
              "bidder_": "The bidder of the purchased tokens",
              "lotId_": "The lot id",
              "referrer_": "The referrer of the bid"
            },
            "returns": { "bidId": "          The bid id" }
          },
          "cancelAuction(uint96)": {
            "details": "Assumptions:             - The parent will refund the seller the remaining capacity             - The parent will verify that the caller is the seller             This function handles the following:             - Calls the implementation-specific function             - Updates the lot data             This function reverts if:             - the caller is not the parent of the module             - the lot id is invalid             - the lot has concluded",
            "params": { "lotId_": "The lot id" }
          },
          "capacityInQuote(uint96)": {
            "details": "The implementing function should handle the following:             - Return true if the capacity is in quote tokens             - Return false if the capacity is in base tokens",
            "params": { "lotId_": "The lot id" },
            "returns": {
              "_0": "bool    Whether or not the capacity is in quote tokens"
            }
          },
          "claimBids(uint96,uint64[])": {
            "details": "Implements a basic claimBids function that:             - Validates the lot and bid parameters             - Calls the implementation-specific function             This function reverts if:             - The lot id is invalid             - The lot is not settled             - The caller is not an internal module",
            "params": { "bidIds_": "The bid ids", "lotId_": "The lot id" },
            "returns": {
              "auctionOutput": "  The auction-specific output",
              "bidClaims": "      The bid claim data"
            }
          },
          "getAuctionData(uint96)": {
            "details": "This function reverts if:             - The lot ID is invalid",
            "params": { "lotId_": "The lot ID" },
            "returns": { "auctionData_": "   The `AuctionData`" }
          },
          "getBid(uint96,uint64)": {
            "details": "This function reverts if:             - The lot ID is invalid             - The bid ID is invalid",
            "params": { "bidId_": "The bid ID", "lotId_": "The lot ID" },
            "returns": { "bid": "            The `Bid` data" }
          },
          "getBidClaim(uint96,uint64)": {
            "details": "This function reverts if:             - The lot ID is invalid             - The lot is not settled (since there would be no claim)             - The bid ID is invalid",
            "params": { "bidId_": "The bid ID", "lotId_": "The lot ID" },
            "returns": { "bidClaim": "   The bid claim data" }
          },
          "getBidIdAtIndex(uint96,uint256)": {
            "details": "This function is not implemented in fixed price batch since bid IDs are not stored in an array",
            "params": { "index_": "The index", "lotId_": "The lot ID" },
            "returns": { "_0": "  The bid ID" }
          },
          "getBidIds(uint96,uint256,uint256)": {
            "details": "This function is not implemented in fixed price batch since bid IDs are not stored in an array",
            "params": {
              "count_": "The number of bids to retrieve",
              "lotId_": "The lot ID",
              "start_": "The index to start retrieving bid IDs from"
            },
            "returns": { "_0": " The bid IDs" }
          },
          "getLot(uint96)": { "params": { "lotId_": "The lot ID" } },
          "getNumBids(uint96)": {
            "details": "This function is not implemented in fixed price batch since bid IDs are not stored in an array             A proxy is using the nextBidId to determine how many bids have been submitted, but this doesn't consider refunds",
            "params": { "lotId_": "The lot ID" },
            "returns": { "_0": "The number of bids" }
          },
          "getPartialFill(uint96)": {
            "details": "For ease of use, this function determines if a partial fill exists.             This function reverts if:             - The lot ID is invalid             - The lot is not settled",
            "params": { "lotId_": "The lot ID" },
            "returns": {
              "hasPartialFill": " True if a partial fill exists",
              "partialFill": "    The `PartialFill` data"
            }
          },
          "hasEnded(uint96)": {
            "details": "The implementing function should handle the following:             - Return true if the lot is not accepting bids/purchases and will not at any point             - Return false if the lot hasn't started or is actively accepting bids/purchases",
            "params": { "lotId_": "The lot id" },
            "returns": { "_0": "bool    Whether or not the lot is active" }
          },
          "isLive(uint96)": {
            "details": "A lot is active if:             - The lot has not concluded             - The lot has started             - The lot has not sold out or been cancelled (capacity > 0)",
            "params": { "lotId_": "The lot ID" },
            "returns": { "_0": "bool    Whether or not the lot is active" }
          },
          "isUpcoming(uint96)": {
            "details": "The implementing function should handle the following:             - Return true if the lot has not started yet AND has not been cancelled             - Return false if the lot is active, has ended, or was cancelled",
            "params": { "lotId_": "The lot id" },
            "returns": { "_0": "bool    Whether or not the lot is upcoming" }
          },
          "refundBid(uint96,uint64,uint256,address)": {
            "details": "Implements a basic refundBid function that:             - Validates the lot and bid parameters             - Calls the implementation-specific function             This function reverts if:             - The lot id is invalid             - The lot has not started             - The lot is concluded, decrypted or settled             - The bid id is invalid             - `caller_` is not the bid owner             - The bid is claimed or refunded             - The caller is not an internal module",
            "params": {
              "bidId_": "The bid id",
              "caller_": "The caller",
              "index_": "The index of the bid ID in the auction's bid list",
              "lotId_": "The lot id"
            },
            "returns": { "refund": "     The amount of quote tokens to refund" }
          },
          "remainingCapacity(uint96)": {
            "details": "The implementing function should handle the following:             - Return the remaining capacity of the lot",
            "params": { "lotId_": "The lot id" },
            "returns": { "_0": "uint96 The remaining capacity of the lot" }
          },
          "setMinAuctionDuration(uint48)": {
            "details": "This function must be called by the parent AuctionHouse, and             can be called by governance using `execOnModule`."
          },
          "settle(uint96,uint256)": {
            "details": "Implements a basic settle function that:             - Validates the lot and bid parameters             - Calls the implementation-specific function             - Updates the lot data             This function reverts if:             - The lot id is invalid             - The lot has not started             - The lot is active             - The lot has already been settled             - The caller is not an internal module",
            "params": {
              "lotId_": "The lot id",
              "num_": "The number of winning bids to settle (capped at the remaining number if more is provided)"
            },
            "returns": {
              "auctionOutput": "  Custom data returned by the auction module",
              "capacity": "       The original capacity of the lot",
              "finished": "       Whether the settlement is finished",
              "totalIn": "        Total amount of quote tokens from bids that were filled",
              "totalOut": "       Total amount of base tokens paid out to winning bids"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "INIT()": { "notice": "Initialization function for the module" },
          "PARENT()": { "notice": "The parent contract for this module." },
          "TYPE()": { "notice": "2 byte identifier for the module type" },
          "VEECODE()": {
            "notice": "7 byte, versioned identifier for the module. 2 characters from 0-9 that signify the version and 3-5 characters from A-Z."
          },
          "abort(uint96)": {
            "notice": "Abort a batch auction that cannot be settled, refunding the seller and allowing bidders to claim refunds"
          },
          "auction(uint96,(uint48,uint48,bool,uint256,bytes),uint8,uint8)": {
            "notice": "Create an auction lot"
          },
          "auctionType()": { "notice": "Get the auction type" },
          "bid(uint96,address,address,uint256,bytes)": {
            "notice": "Bid on an auction lot"
          },
          "cancelAuction(uint96)": { "notice": "Cancel an auction lot" },
          "capacityInQuote(uint96)": {
            "notice": "Get whether or not the capacity is in quote tokens"
          },
          "claimBids(uint96,uint64[])": { "notice": "Claim multiple bids" },
          "dedicatedSettlePeriod()": {
            "notice": "Time period after auction conclusion where bidders cannot refund bids"
          },
          "getAuctionData(uint96)": {
            "notice": "Returns the `AuctionData` data for an auction lot"
          },
          "getBid(uint96,uint64)": {
            "notice": "Returns the `Bid` and `EncryptedBid` data for a given lot and bid ID"
          },
          "getBidClaim(uint96,uint64)": {
            "notice": "Get the claim data for a bidThis provides information on the outcome of a bid, independent of the claim status"
          },
          "getBidIdAtIndex(uint96,uint256)": {
            "notice": "Get the bid ID at the given index"
          },
          "getBidIds(uint96,uint256,uint256)": {
            "notice": "Get the bid IDs from the given index"
          },
          "getLot(uint96)": { "notice": "Get the lot data for a given lot ID" },
          "getNumBids(uint96)": {
            "notice": "Get the number of bids for a lot"
          },
          "getPartialFill(uint96)": {
            "notice": "Returns the `PartialFill` data for an auction lot"
          },
          "hasEnded(uint96)": {
            "notice": "Returns whether the auction has ended"
          },
          "isLive(uint96)": {
            "notice": "Returns whether the auction is currently accepting bids or purchases"
          },
          "isUpcoming(uint96)": {
            "notice": "Returns whether the auction is upcoming"
          },
          "lotAuctionOutput(uint96)": {
            "notice": "Custom auction output for each lot"
          },
          "lotData(uint96)": {
            "notice": "General information pertaining to auction lots"
          },
          "minAuctionDuration()": {
            "notice": "Minimum auction duration in seconds"
          },
          "refundBid(uint96,uint64,uint256,address)": {
            "notice": "Refund a bid"
          },
          "remainingCapacity(uint96)": {
            "notice": "Get the remaining capacity of a lot"
          },
          "setMinAuctionDuration(uint48)": {
            "notice": "Set the minimum auction duration"
          },
          "settle(uint96,uint256)": {
            "notice": "Settle a batch auction lot with on-chain storage and settlement"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@clones-with-immutable-args-1.1.1/=dependencies/clones-with-immutable-args-1.1.1/src/",
        "@forge-std-1.9.1/=dependencies/forge-std-1.9.1/src/",
        "@openzeppelin-contracts-4.9.2/=dependencies/@openzeppelin-contracts-4.9.2/",
        "@solady-0.0.124/=dependencies/solady-0.0.124/src/",
        "@solmate-6.8.0/=dependencies/solmate-6.8.0/src/"
      ],
      "optimizer": { "enabled": true, "runs": 200 },
      "metadata": { "bytecodeHash": "ipfs" },
      "compilationTarget": {
        "src/modules/auctions/batch/FPB.sol": "FixedPriceBatch"
      },
      "evmVersion": "paris",
      "libraries": {}
    },
    "sources": {
      "dependencies/solady-0.0.124/src/utils/FixedPointMathLib.sol": {
        "keccak256": "0x8f90be29fd62817be94061136dd2dcc42cf2d5cc38005b1b606d2ee826598776",
        "urls": [
          "bzz-raw://7d794cf6143263cba72409c99b5036626eeb08ed5fc71cf8beee4881c6fc58e4",
          "dweb:/ipfs/QmePnCXajwV65z9p9rgDrjo2sgwkZodVdr6QJsWNvQvfcV"
        ],
        "license": "MIT"
      },
      "dependencies/solmate-6.8.0/src/auth/Owned.sol": {
        "keccak256": "0xfedb27d14c508342c33eb067c9a02eabcdb0f9dcf93b04ded1001f580d12d0ea",
        "urls": [
          "bzz-raw://1ff52bbee698b9cf9e4574615e6550be0887ccf355f6571e23d6f25b332e79b4",
          "dweb:/ipfs/QmVorA2apojVRStzS7h8aFccR3Uv32G6HVtBtFHZrE7YXx"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/interfaces/modules/IAuction.sol": {
        "keccak256": "0xcd173cbd0c4d98f4e31a1dd37e8196566d89142afb87e8de64da669edeb2310d",
        "urls": [
          "bzz-raw://62fbdad49956da85dfef2ffab63f40ba384d2b9d9bc9b73294189c66d63c5016",
          "dweb:/ipfs/QmRVyJYwwfoho7cN39A2diVTmoUZHE5WRn13DyyFvngGVF"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/interfaces/modules/IBatchAuction.sol": {
        "keccak256": "0xebea8d3d97beca2607af9404f80d9fb8f08d7866aced2714c51491b89c61d1d1",
        "urls": [
          "bzz-raw://e7b012ae6b9db6b8ff57e916df80cb92877a2c8908c5458a2a2545039c9acc7d",
          "dweb:/ipfs/QmSKJsd6PvZWVRUgxU5quAXLnqmqqC5Gg2NzUD7vwY5are"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/interfaces/modules/auctions/IFixedPriceBatch.sol": {
        "keccak256": "0x3e6a05664069f6237bb744f03cb2ed013a51341803868c41884253aa1490d081",
        "urls": [
          "bzz-raw://d7e54c2238dcf46e138c835de63e8d2bfd07ace676a7d4739d349d8b8ac029a4",
          "dweb:/ipfs/QmQm4mjYHTHRnnqS1pCyEvnYFdcbdhkx3HoQ6FWgtjDM4m"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/modules/Auction.sol": {
        "keccak256": "0x9c3d79f8f3f41e220d881b687103f3d773130b974b09ad7406eb761f4d01ef87",
        "urls": [
          "bzz-raw://67a9dec8a05395a5f8809f9b12aabc59698eb84344aa8c3164c8cb89cec88cf6",
          "dweb:/ipfs/QmaB8JHa6dKFvRcZ1i9ywSqk4EcECozfJuM1XeModo3i5w"
        ],
        "license": "BSL-1.1"
      },
      "src/modules/Keycode.sol": {
        "keccak256": "0xe66d837151db915034f1a3def76c68b2103774128995fc6738ebd5a23d2c2447",
        "urls": [
          "bzz-raw://11f3cd702238d51b91036378d941dc624e48ef6370f04ad1ad8c7a6f421961b5",
          "dweb:/ipfs/QmVuFPmnhkzcc4UMZEzoNkMJyAyAR3iv9tP7epuLymW7vT"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/modules/Modules.sol": {
        "keccak256": "0xd4aad24a3336ac1d5dd531b65c1d109d092b370fb32046bfe5247beb19874dfb",
        "urls": [
          "bzz-raw://5af6ed6a4e90ddd5bc2992df7bd37714d045fa7a71611c7429651e20c82d28f8",
          "dweb:/ipfs/QmSy8tUrQrSpSjnA2FCJchqpK52CBxX1kmftK2hCgcLYLy"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/modules/auctions/BatchAuctionModule.sol": {
        "keccak256": "0xb573483f2f486dd0dacafe9ed81c9a1d305e9328351cdf77530d62172c3abc4c",
        "urls": [
          "bzz-raw://ece68ba6081cc8a89baa77478a88288b6a84108b064caa596e7b17119fcbda59",
          "dweb:/ipfs/QmeftyrM6e2KFTuwMLCQJU8x1GcXC2iwGJuTVu2z9HcceB"
        ],
        "license": "BSL-1.1"
      },
      "src/modules/auctions/batch/FPB.sol": {
        "keccak256": "0xf0113ce008d7bdc4292bec0547e7e6be85104845c6b1891598d1e38a1d243876",
        "urls": [
          "bzz-raw://31fe557977d0038e4487417fea344e143ef5431860c664797839bc39f32bfacf",
          "dweb:/ipfs/QmYsnJ3KPWSAxEbWG84ymLZvG2FY81emtUumwfbAvuzU33"
        ],
        "license": "BSL-1.1"
      }
    },
    "version": 1
  },
  "id": 92
}
