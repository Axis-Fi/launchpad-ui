{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "auctionHouse_",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "uniV3Factory_",
          "type": "address",
          "internalType": "address"
        },
        { "name": "gUniFactory_", "type": "address", "internalType": "address" }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "AUCTION_HOUSE",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "LINEAR_VESTING_KEYCODE",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bytes5", "internalType": "bytes5" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "MAX_PERCENT",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint24", "internalType": "uint24" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "gUniFactory",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IGUniFactory"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "lotConfiguration",
      "inputs": [
        { "name": "lotId", "type": "uint96", "internalType": "uint96" }
      ],
      "outputs": [
        { "name": "recipient", "type": "address", "internalType": "address" },
        { "name": "lotCapacity", "type": "uint256", "internalType": "uint256" },
        {
          "name": "lotCuratorPayout",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "proceedsUtilisationPercent",
          "type": "uint24",
          "internalType": "uint24"
        },
        { "name": "vestingStart", "type": "uint48", "internalType": "uint48" },
        { "name": "vestingExpiry", "type": "uint48", "internalType": "uint48" },
        {
          "name": "linearVestingModule",
          "type": "address",
          "internalType": "contract LinearVesting"
        },
        { "name": "active", "type": "bool", "internalType": "bool" },
        { "name": "implParams", "type": "bytes", "internalType": "bytes" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "lotIdRegistered",
      "inputs": [{ "name": "", "type": "uint96", "internalType": "uint96" }],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "onBid",
      "inputs": [
        { "name": "lotId_", "type": "uint96", "internalType": "uint96" },
        { "name": "bidId", "type": "uint64", "internalType": "uint64" },
        { "name": "buyer_", "type": "address", "internalType": "address" },
        { "name": "amount_", "type": "uint256", "internalType": "uint256" },
        { "name": "callbackData_", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [{ "name": "", "type": "bytes4", "internalType": "bytes4" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "onCancel",
      "inputs": [
        { "name": "lotId_", "type": "uint96", "internalType": "uint96" },
        { "name": "refund_", "type": "uint256", "internalType": "uint256" },
        { "name": "prefunded_", "type": "bool", "internalType": "bool" },
        { "name": "callbackData_", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [{ "name": "", "type": "bytes4", "internalType": "bytes4" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "onCreate",
      "inputs": [
        { "name": "lotId_", "type": "uint96", "internalType": "uint96" },
        { "name": "seller_", "type": "address", "internalType": "address" },
        { "name": "baseToken_", "type": "address", "internalType": "address" },
        { "name": "quoteToken_", "type": "address", "internalType": "address" },
        { "name": "capacity_", "type": "uint256", "internalType": "uint256" },
        { "name": "prefund_", "type": "bool", "internalType": "bool" },
        { "name": "callbackData_", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [{ "name": "", "type": "bytes4", "internalType": "bytes4" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "onCurate",
      "inputs": [
        { "name": "lotId_", "type": "uint96", "internalType": "uint96" },
        { "name": "curatorFee_", "type": "uint256", "internalType": "uint256" },
        { "name": "prefund_", "type": "bool", "internalType": "bool" },
        { "name": "callbackData_", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [{ "name": "", "type": "bytes4", "internalType": "bytes4" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "onPurchase",
      "inputs": [
        { "name": "lotId_", "type": "uint96", "internalType": "uint96" },
        { "name": "buyer_", "type": "address", "internalType": "address" },
        { "name": "amount_", "type": "uint256", "internalType": "uint256" },
        { "name": "payout_", "type": "uint256", "internalType": "uint256" },
        { "name": "prefunded_", "type": "bool", "internalType": "bool" },
        { "name": "callbackData_", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [{ "name": "", "type": "bytes4", "internalType": "bytes4" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "onSettle",
      "inputs": [
        { "name": "lotId_", "type": "uint96", "internalType": "uint96" },
        { "name": "proceeds_", "type": "uint256", "internalType": "uint256" },
        { "name": "refund_", "type": "uint256", "internalType": "uint256" },
        { "name": "callbackData_", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [{ "name": "", "type": "bytes4", "internalType": "bytes4" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "uniV3Factory",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IUniswapV3Factory"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "error",
      "name": "Callback_InsufficientBalance",
      "inputs": [
        { "name": "token_", "type": "address", "internalType": "address" },
        { "name": "account_", "type": "address", "internalType": "address" },
        { "name": "balance_", "type": "uint256", "internalType": "uint256" },
        { "name": "required_", "type": "uint256", "internalType": "uint256" }
      ]
    },
    { "type": "error", "name": "Callback_InvalidParams", "inputs": [] },
    {
      "type": "error",
      "name": "Callback_LinearVestingModuleNotFound",
      "inputs": []
    },
    { "type": "error", "name": "Callback_NotAuthorized", "inputs": [] },
    { "type": "error", "name": "Callback_NotImplemented", "inputs": [] },
    { "type": "error", "name": "Callback_Params_InvalidAddress", "inputs": [] },
    {
      "type": "error",
      "name": "Callback_Params_InvalidVestingParams",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Callback_Params_PercentOutOfBounds",
      "inputs": [
        { "name": "actual_", "type": "uint24", "internalType": "uint24" },
        { "name": "min_", "type": "uint24", "internalType": "uint24" },
        { "name": "max_", "type": "uint24", "internalType": "uint24" }
      ]
    },
    { "type": "error", "name": "Callback_Params_PoolExists", "inputs": [] },
    {
      "type": "error",
      "name": "Callback_Params_PoolFeeNotEnabled",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Callback_Slippage",
      "inputs": [
        { "name": "token_", "type": "address", "internalType": "address" },
        {
          "name": "amountActual_",
          "type": "uint256",
          "internalType": "uint256"
        },
        { "name": "amountMin_", "type": "uint256", "internalType": "uint256" }
      ]
    },
    {
      "type": "error",
      "name": "CallbacksAddressNotValid",
      "inputs": [
        { "name": "callbacks", "type": "address", "internalType": "address" }
      ]
    }
  ],
  "bytecode": {
    "object": "0x60a06040523480156200001157600080fd5b506040516200300838038062003008833981016040819052620000349162000236565b60408051610100810182526001808252602082018190529181018290526000606082018190526080820181905260a0820183905260c082019290925260e08101919091528390819062000088308262000122565b506001600160a01b0390811660805283169050620000b9576040516302180d7960e51b815260040160405180910390fd5b600280546001600160a01b0319166001600160a01b03848116919091179091558116620000f9576040516302180d7960e51b815260040160405180910390fd5b600380546001600160a01b0319166001600160a01b039290921691909117905550620002809050565b805115156001609f1b831615151415806200014b5750602081015115156001609e1b8316151514155b80620001655750604081015115156001609d1b8316151514155b806200017f5750606081015115156001609c1b8316151514155b80620001995750608081015115156001609b1b8316151514155b80620001b3575060a081015115156001609a1b8316151514155b80620001cd575060c08101511515600160991b8316151514155b80620001e7575060e08101511515600160981b8316151514155b1562000215576040516303b556f760e01b81526001600160a01b038316600482015260240160405180910390fd5b5050565b80516001600160a01b03811681146200023157600080fd5b919050565b6000806000606084860312156200024c57600080fd5b620002578462000219565b9250620002676020850162000219565b9150620002776040850162000219565b90509250925092565b608051612d34620002d4600039600081816101860152818161027501528181610329015281816103f6015281816104b50152818161055b0152818161070001528181610c5401526111700152612d346000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063705e474b1161008c578063a5b13f6911610066578063a5b13f6914610207578063b898895e1461021a578063d52812191461022d578063fc4399821461025557600080fd5b8063705e474b146101bb57806395fd2ef2146101ce578063a5658c86146101f457600080fd5b806309b9601c146100d45780631036bbe2146101055780631cae9eef14610123578063258f8931146101565780634226b1bf1461018157806366e74167146101a8575b600080fd5b6100e76100e23660046120b1565b610268565b6040516001600160e01b031990911681526020015b60405180910390f35b61010f620186a081565b60405162ffffff90911681526020016100fc565b610146610131366004612121565b60006020819052908152604090205460ff1681565b60405190151581526020016100fc565b600354610169906001600160a01b031681565b6040516001600160a01b0390911681526020016100fc565b6101697f000000000000000000000000000000000000000000000000000000000000000081565b6100e76101b6366004612151565b61031c565b600254610169906001600160a01b031681565b6101db622624ab60e91b81565b6040516001600160d81b031990911681526020016100fc565b6100e76102023660046120b1565b6103e9565b6100e76102153660046121f8565b6104a8565b6100e7610228366004612242565b61054e565b61024061023b366004612121565b6105f6565b6040516100fc9998979695949392919061231f565b6100e7610263366004612394565b6106f3565b6000336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102b357604051630d0ec32b60e31b815260040160405180910390fd5b6001600160601b038616600090815260208190526040902054869060ff166102ee57604051630d0ec32b60e31b815260040160405180910390fd5b505050506001600160601b03929092166000908152600160205260409020600201555063026e580760e21b90565b6000336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461036757604051630d0ec32b60e31b815260040160405180910390fd5b6001600160601b03891660009081526020819052604090205460ff16156103a1576040516363d2088f60e11b815260040160405180910390fd5b6001600160601b0389166000908152602081905260409020805460ff191660011790556103d4898989898989898961079d565b506366e7416760e01b98975050505050505050565b6000336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461043457604051630d0ec32b60e31b815260040160405180910390fd5b6001600160601b038616600090815260208190526040902054869060ff1661046f57604051630d0ec32b60e31b815260040160405180910390fd5b6001600160601b0387166000908152600160205260409020600401805460ff60a01b19169055506352b2c64360e11b9695505050505050565b6000336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104f357604051630d0ec32b60e31b815260040160405180910390fd5b6001600160601b038616600090815260208190526040902054869060ff1661052e57604051630d0ec32b60e31b815260040160405180910390fd5b61053b8787878787610aeb565b5063a5b13f6960e01b9695505050505050565b6000336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461059957604051630d0ec32b60e31b815260040160405180910390fd5b6001600160601b038716600090815260208190526040902054879060ff166105d457604051630d0ec32b60e31b815260040160405180910390fd5b6105e2888888888888611137565b50635c4c44af60e11b979650505050505050565b60016020819052600091825260409091208054918101546002820154600383015460048401546005850180546001600160a01b03978816979596949562ffffff8516956301000000860465ffffffffffff90811696600160481b9004169491821693600160a01b90920460ff169290919061067090612420565b80601f016020809104026020016040519081016040528092919081815260200182805461069c90612420565b80156106e95780601f106106be576101008083540402835291602001916106e9565b820191906000526020600020905b8154815290600101906020018083116106cc57829003601f168201915b5050505050905089565b6000336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461073e57604051630d0ec32b60e31b815260040160405180910390fd5b6001600160601b038816600090815260208190526040902054889060ff1661077957604051630d0ec32b60e31b815260040160405180910390fd5b61078889898989898989611137565b50637e21ccc160e11b98975050505050505050565b60006107ab82840184612516565b805190915062ffffff1615806107cb57508051620186a062ffffff909116115b1561080857805160405163440e0f3160e01b815262ffffff909116600482015260016024820152620186a060448201526064015b60405180910390fd5b6000816020015165ffffffffffff1660001415806108315750604082015165ffffffffffff1615155b156108dd5761083e611150565b9050806001600160a01b031663caf9278589610862856020015186604001516112a3565b6040518363ffffffff1660e01b815260040161087f929190612610565b602060405180830381865afa15801561089c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c09190612634565b6108dd576040516328db098b60e01b815260040160405180910390fd5b60608201516001600160a01b0316610908576040516302180d7960e51b815260040160405180910390fd5b60405180610120016040528083606001516001600160a01b0316815260200187815260200160008152602001836000015162ffffff168152602001836020015165ffffffffffff168152602001836040015165ffffffffffff168152602001826001600160a01b031681526020016001151581526020018360800151815250600160008c6001600160601b03166001600160601b0316815260200190815260200160002060008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550602082015181600101556040820151816002015560608201518160030160006101000a81548162ffffff021916908362ffffff16021790555060808201518160030160036101000a81548165ffffffffffff021916908365ffffffffffff16021790555060a08201518160030160096101000a81548165ffffffffffff021916908365ffffffffffff16021790555060c08201518160040160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060e08201518160040160146101000a81548160ff021916908315150217905550610100820151816005019081610acb91906126a0565b50905050610adf8a8a8a8a8a8a8a8a6112eb565b50505050505050505050565b6001600160601b038516600090815260016020818152604080842081516101208101835281546001600160a01b0390811682529482015493810193909352600281015491830191909152600381015462ffffff811660608401526301000000810465ffffffffffff9081166080850152600160481b9091041660a0830152600481015492831660c0830152600160a01b90920460ff16151560e082015260058201805491929161010084019190610ba190612420565b80601f0160208091040260200160405190810160405280929190818152602001828054610bcd90612420565b8015610c1a5780601f10610bef57610100808354040283529160200191610c1a565b820191906000526020600020905b815481529060010190602001808311610bfd57829003601f168201915b505050919092525050604051634f17001d60e11b81526001600160601b038916600482015291925060009182915081906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690639e2e003a90602401600060405180830381865afa158015610c9b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610cc39190810190612777565b50505050604089015160208a01519598509396509194506000938493849350839250610cee91612891565b610cfb8c620186a06128a4565b610d0591906128d1565b610d1290620186a06128e5565b9050620186a062ffffff16818960200151610d2d91906128a4565b610d3791906128d1565b915050610d48818860600151611447565b9250610d588b8860600151611447565b6040516370a0823160e01b81526001600160a01b03888116600483015291935060009250908616906370a0823190602401602060405180830381865afa158015610da6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dca91906128f8565b905082811015610e0e5760405163141b7cb560e21b81526001600160a01b0380871660048301528716602482015260448101849052606481018290526084016107ff565b610e236001600160a01b03861687308661146d565b506000610e6a8c858488878e8e8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061150992505050565b6040516370a0823160e01b81523060048201529091506000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610eb4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ed891906128f8565b60c08901519091506001600160a01b0316156110015760c088015160405163095ea7b360e01b81526001600160a01b039182166004820152602481018390529083169063095ea7b3906044016020604051808303816000875af1158015610f43573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f679190612634565b508760c001516001600160a01b031663e40d88f8896000015184610f938c608001518d60a001516112a3565b8560016040518663ffffffff1660e01b8152600401610fb6959493929190612911565b6060604051808303816000875af1158015610fd5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ff99190612956565b505050611018565b8751611018906001600160a01b0384169083611a7a565b6040516370a0823160e01b81523060048201526000906001600160a01b038716906370a0823190602401602060405180830381865afa15801561105f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061108391906128f8565b9050801561109f5761109f6001600160a01b0387168983611a7a565b506040516370a0823160e01b81523060048201526000906001600160a01b038816906370a0823190602401602060405180830381865afa1580156110e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061110b91906128f8565b90508015611127576111276001600160a01b0388168983611a7a565b5050505050505050505050505050565b604051638a8cacbf60e01b815260040160405180910390fd5b604051635bb27aab60e01b8152622624ab60e91b600482018190526000917f00000000000000000000000000000000000000000000000000000000000000009190839081906001600160a01b03851690635bb27aab906024016040805180830381865afa1580156111c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111e991906129a0565b9150915080806111fa575060ff8216155b1561121857604051633d495ecd60e11b815260040160405180910390fd5b836001600160a01b0316639e55cba36112318585611b01565b6040516001600160e01b031960e084901b1681526001600160c81b03199091166004820152602401602060405180830381865afa158015611276573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061129a91906129d7565b94505050505090565b60408051808201825265ffffffffffff848116808352848216602093840190815284519384019190915251168183015281518082038301815260609091019091525b92915050565b60006112f982840184612516565b90506000816080015180602001905181019061131591906129f4565b6002546040516322afcccb60e01b815262ffffff831660048201529192506001600160a01b0316906322afcccb90602401602060405180830381865afa158015611363573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113879190612a23565b60020b6000036113aa57604051635a60fc9d60e01b815260040160405180910390fd5b600254604051630b4c774160e11b81526000916001600160a01b031690631698ee82906113df908c908c908790600401612a3e565b602060405180830381865afa1580156113fc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061142091906129d7565b6001600160a01b031614610adf57604051635c4b439f60e01b815260040160405180910390fd5b6000620186a061145c62ffffff8416856128a4565b61146691906128d1565b9392505050565b60006040516323b872dd60e01b81526001600160a01b03851660048201526001600160a01b03841660248201528260448201526020600060648360008a5af13d15601f3d11600160005114161716915050806115025760405162461bcd60e51b81526020600482015260146024820152731514905394d1915497d19493d357d1905253115160621b60448201526064016107ff565b5050505050565b600080828060200190518101906115209190612a66565b6001600160601b03891660009081526001602052604081206005018054929350909161154b90612420565b80601f016020809104026020016040519081016040528092919081815260200182805461157790612420565b80156115c45780601f10611599576101008083540402835291602001916115c4565b820191906000526020600020905b8154815290600101906020018083116115a757829003601f168201915b50505050508060200190518101906115dc91906129f4565b90506001600160a01b038087169089161060006115fb8a898b8a611b90565b90506116218261160b578861160d565b8a5b83611618578b61161a565b895b8584611c2a565b50506002546040516322afcccb60e01b815262ffffff8416600482015260009182916001600160a01b03909116906322afcccb90602401602060405180830381865afa158015611675573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116999190612a23565b6003549091506001600160a01b031663a958b895846116b8578a6116ba565b8c5b856116c5578d6116c7565b8b5b87856116d781620d89e719612ab1565b6116e19190612aeb565b86806116f0620d89e719612b12565b6116fa9190612ab1565b6117049190612aeb565b6040516001600160e01b031960e088901b1681526001600160a01b03958616600482015294909316602485015262ffffff9091166044840152600290810b60648401520b608482015260a4016020604051808303816000875af115801561176f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061179391906129d7565b9150819050600080806001600160a01b038416639894f21a876117b6578c6117b8565b8e5b886117c3578f6117c5565b8d5b6040516001600160e01b031960e085901b16815260048101929092526024820152604401606060405180830381865afa158015611806573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061182a9190612b34565b92509250925060008661183d578261183f565b835b905060006118518f8b60000151611e8d565b905080821015611896578f8282604051636ad6fa4b60e01b81526004016107ff939291906001600160a01b039390931683526020830191909152604082015260600190565b8f6001600160a01b031663095ea7b388846040518363ffffffff1660e01b81526004016118d89291906001600160a01b03929092168252602082015260400190565b6020604051808303816000875af11580156118f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061191b9190612634565b50505060008661192b578361192d565b825b9050600061193f8d8b60000151611e8d565b90508082101561197b57604051636ad6fa4b60e01b81526001600160a01b038f16600482015260248101839052604481018290526064016107ff565b60405163095ea7b360e01b81526001600160a01b038881166004830152602482018490528f169063095ea7b3906044016020604051808303816000875af11580156119ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119ee9190612634565b50506040516394bf804d60e01b8152600481018390523060248201526001600160a01b03861691506394bf804d906044016060604051808303816000875af1158015611a3e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a629190612b62565b50505050505050809450505050509695505050505050565b600060405163a9059cbb60e01b81526001600160a01b0384166004820152826024820152602060006044836000895af13d15601f3d1160016000511416171691505080611afb5760405162461bcd60e51b815260206004820152600f60248201526e1514905394d1915497d19052531151608a1b60448201526064016107ff565b50505050565b600080611b0f600a84612bb0565b611b1a906030612bd2565b60f81b90506000611b2c600a85612beb565b611b37906030612bd2565b6040516001600160f81b0319808516602083015260f89290921b91821660218201526001600160d81b031987166022820152909150602701604051602081830303815290604052611b8790612c0d565b95945050505050565b6000806000856001600160a01b0316876001600160a01b031610611bb5578385611bb8565b84845b915091506000611bcd82600160c01b85611eec565b90506000611bda82611f9e565b90506001600160a01b03811115611c1e5760405162461bcd60e51b81526020600482015260086024820152676f766572666c6f7760c01b60448201526064016107ff565b98975050505050505050565b6000836001600160a01b0316856001600160a01b031610611c4a57600080fd5b600254604051630b4c774160e11b81526001600160a01b0390911690631698ee8290611c7e90889088908890600401612a3e565b602060405180830381865afa158015611c9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cbf91906129d7565b90506001600160a01b038116611daa5760025460405163a167129560e01b81526001600160a01b039091169063a167129590611d0390889088908890600401612a3e565b6020604051808303816000875af1158015611d22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d4691906129d7565b60405163f637731d60e01b81526001600160a01b0384811660048301529192509082169063f637731d90602401600060405180830381600087803b158015611d8d57600080fd5b505af1158015611da1573d6000803e3d6000fd5b50505050611e85565b6000816001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015611dea573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e0e9190612c56565b5050505050509050806001600160a01b0316600003611e835760405163f637731d60e01b81526001600160a01b03848116600483015283169063f637731d90602401600060405180830381600087803b158015611e6a57600080fd5b505af1158015611e7e573d6000803e3d6000fd5b505050505b505b949350505050565b6000620186a062ffffff83161115611ecf5760405163440e0f3160e01b815262ffffff8316600482015260006024820152620186a060448201526064016107ff565b620186a0611edd8382612ce2565b61145c9062ffffff16856128a4565b6000808060001985870985870292508281108382030391505080600003611f255760008411611f1a57600080fd5b508290049050611466565b808411611f3157600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b60b581600160881b8110611fb75760409190911b9060801c5b600160481b8110611fcd5760209190911b9060401c5b650100000000008110611fe55760109190911b9060201c5b63010000008110611ffb5760089190911b9060101c5b62010000010260121c80820401600190811c80830401811c80830401811c80830401811c80830401811c80830401811c80830401901c908190048111900390565b80356001600160601b038116811461205357600080fd5b919050565b801515811461206657600080fd5b50565b60008083601f84011261207b57600080fd5b5081356001600160401b0381111561209257600080fd5b6020830191508360208285010111156120aa57600080fd5b9250929050565b6000806000806000608086880312156120c957600080fd5b6120d28661203c565b94506020860135935060408601356120e981612058565b925060608601356001600160401b0381111561210457600080fd5b61211088828901612069565b969995985093965092949392505050565b60006020828403121561213357600080fd5b6114668261203c565b6001600160a01b038116811461206657600080fd5b60008060008060008060008060e0898b03121561216d57600080fd5b6121768961203c565b975060208901356121868161213c565b965060408901356121968161213c565b955060608901356121a68161213c565b94506080890135935060a08901356121bd81612058565b925060c08901356001600160401b038111156121d857600080fd5b6121e48b828c01612069565b999c989b5096995094979396929594505050565b60008060008060006080868803121561221057600080fd5b6122198661203c565b9450602086013593506040860135925060608601356001600160401b0381111561210457600080fd5b60008060008060008060a0878903121561225b57600080fd5b6122648761203c565b955060208701356001600160401b03808216821461228157600080fd5b9095506040880135906122938261213c565b90945060608801359350608088013590808211156122b057600080fd5b506122bd89828a01612069565b979a9699509497509295939492505050565b60005b838110156122ea5781810151838201526020016122d2565b50506000910152565b6000815180845261230b8160208601602086016122cf565b601f01601f19169290920160200192915050565b6001600160a01b038a81168252602082018a90526040820189905262ffffff8816606083015265ffffffffffff8781166080840152861660a0830152841660c082015282151560e08201526101206101008201819052600090612384838201856122f3565b9c9b505050505050505050505050565b600080600080600080600060c0888a0312156123af57600080fd5b6123b88861203c565b965060208801356123c88161213c565b9550604088013594506060880135935060808801356123e681612058565b925060a08801356001600160401b0381111561240157600080fd5b61240d8a828b01612069565b989b979a50959850939692959293505050565b600181811c9082168061243457607f821691505b60208210810361245457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b60405160a081016001600160401b03811182821017156124925761249261245a565b60405290565b604051601f8201601f191681016001600160401b03811182821017156124c0576124c061245a565b604052919050565b62ffffff8116811461206657600080fd5b803565ffffffffffff8116811461205357600080fd5b60006001600160401b038211156125085761250861245a565b50601f01601f191660200190565b6000602080838503121561252957600080fd5b82356001600160401b038082111561254057600080fd5b9084019060a0828703121561255457600080fd5b61255c612470565b8235612567816124c8565b81526125748385016124d9565b84820152612584604084016124d9565b604082015260608301356125978161213c565b60608201526080830135828111156125ae57600080fd5b80840193505086601f8401126125c357600080fd5b823591506125d86125d3836124ef565b612498565b82815287858486010111156125ec57600080fd5b82858501868301376000858483010152806080830152508094505050505092915050565b6001600160a01b0383168152604060208201819052600090611e85908301846122f3565b60006020828403121561264657600080fd5b815161146681612058565b601f82111561269b57600081815260208120601f850160051c810160208610156126785750805b601f850160051c820191505b8181101561269757828155600101612684565b5050505b505050565b81516001600160401b038111156126b9576126b961245a565b6126cd816126c78454612420565b84612651565b602080601f83116001811461270257600084156126ea5750858301515b600019600386901b1c1916600185901b178555612697565b600085815260208120601f198616915b8281101561273157888601518255948401946001909101908401612712565b508582101561274f5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b80516001600160c81b03198116811461205357600080fd5b60008060008060008060008060006101208a8c03121561279657600080fd5b89516127a18161213c565b60208b01519099506127b28161213c565b60408b01519098506127c38161213c565b96506127d160608b0161275f565b955060808a0151945060a08a01516127e88161213c565b93506127f660c08b0161275f565b925060e08a015161280681612058565b6101008b01519092506001600160401b0381111561282357600080fd5b8a01601f81018c1361283457600080fd5b80516128426125d3826124ef565b8181528d602083850101111561285757600080fd5b6128688260208301602086016122cf565b8093505050509295985092959850929598565b634e487b7160e01b600052601160045260246000fd5b808201808211156112e5576112e561287b565b80820281158282048414176112e5576112e561287b565b634e487b7160e01b600052601260045260246000fd5b6000826128e0576128e06128bb565b500490565b818103818111156112e5576112e561287b565b60006020828403121561290a57600080fd5b5051919050565b6001600160a01b0386811682528516602082015260a06040820181905260009061293d908301866122f3565b6060830194909452509015156080909101529392505050565b60008060006060848603121561296b57600080fd5b83519250602084015161297d8161213c565b80925050604084015190509250925092565b805160ff8116811461205357600080fd5b600080604083850312156129b357600080fd5b6129bc8361298f565b915060208301516129cc81612058565b809150509250929050565b6000602082840312156129e957600080fd5b81516114668161213c565b600060208284031215612a0657600080fd5b8151611466816124c8565b8051600281900b811461205357600080fd5b600060208284031215612a3557600080fd5b61146682612a11565b6001600160a01b03938416815291909216602082015262ffffff909116604082015260600190565b600060208284031215612a7857600080fd5b604051602081018181106001600160401b0382111715612a9a57612a9a61245a565b6040528251612aa8816124c8565b81529392505050565b60008160020b8360020b80612ac857612ac86128bb565b627fffff19821460001982141615612ae257612ae261287b565b90059392505050565b60008260020b8260020b028060020b9150808214612b0b57612b0b61287b565b5092915050565b60008160020b627fffff198103612b2b57612b2b61287b565b60000392915050565b600080600060608486031215612b4957600080fd5b8351925060208401519150604084015190509250925092565b600080600060608486031215612b7757600080fd5b835192506020840151915060408401516fffffffffffffffffffffffffffffffff81168114612ba557600080fd5b809150509250925092565b600060ff831680612bc357612bc36128bb565b8060ff84160491505092915050565b60ff81811683821601908111156112e5576112e561287b565b600060ff831680612bfe57612bfe6128bb565b8060ff84160691505092915050565b805160208201516001600160c81b03198082169291906007831015612c3c5780818460070360031b1b83161693505b505050919050565b805161ffff8116811461205357600080fd5b600080600080600080600060e0888a031215612c7157600080fd5b8751612c7c8161213c565b9650612c8a60208901612a11565b9550612c9860408901612c44565b9450612ca660608901612c44565b9350612cb460808901612c44565b9250612cc260a0890161298f565b915060c0880151612cd281612058565b8091505092959891949750929550565b62ffffff828116828216039080821115612b0b57612b0b61287b56fea2646970667358221220e34b9413cff9c08e0930b32c80d5c4a260f993a4d898cef0b80a614ddb31e06364736f6c63430008130033",
    "sourceMap": "1679:8501:130:-:0;;;2705:473;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3630:311:128;;;;;;;;3680:4;3630:311;;;;;;;;;;;;;;;-1:-1:-1;3630:311:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2837:13:130;;;;1095:58:123;1134:4;3630:311:128;1095:38:123;:58::i;:::-;-1:-1:-1;;;;;;1197:29:123;;;;;2866:27:130;::::1;::::0;-1:-1:-1;2862:97:130::1;;2916:32;;-1:-1:-1::0;;;2916:32:130::1;;;;;;;;;;;2862:97;2968:12;:47:::0;;-1:-1:-1;;;;;;2968:47:130::1;-1:-1:-1::0;;;;;2968:47:130;;::::1;::::0;;;::::1;::::0;;;3030:26;::::1;3026:96;;3079:32;;-1:-1:-1::0;;;3079:32:130::1;;;;;;;;;;;3026:96;3131:11;:40:::0;;-1:-1:-1;;;;;;3131:40:130::1;-1:-1:-1::0;;;;;3131:40:130;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;1679:8501:130;;-1:-1:-1;1679:8501:130;2332:873:148;2481:20;;:58;;-1:-1:-1;;;8425:38:148;;:43;;2481:58;;;:136;;-1:-1:-1;2559:20:148;;;;:58;;-1:-1:-1;;;8425:38:148;;:43;;2559:58;;2481:136;:214;;;-1:-1:-1;2637:20:148;;;;:58;;-1:-1:-1;;;8425:38:148;;:43;;2637:58;;2481:214;:296;;;-1:-1:-1;2715:22:148;;;;:62;;-1:-1:-1;;;8425:38:148;;:43;;2715:62;;2481:296;:368;;;-1:-1:-1;2797:17:148;;;;:52;;-1:-1:-1;;;8425:38:148;;:43;;2797:52;;2481:368;:446;;;-1:-1:-1;2869:20:148;;;;:58;;-1:-1:-1;;;8425:38:148;;:43;;2869:58;;2481:446;:545;;;-1:-1:-1;2947:30:148;;;;:79;;-1:-1:-1;;;8425:38:148;;:43;;2947:79;;2481:545;:636;;;-1:-1:-1;3046:26:148;;;;:71;;-1:-1:-1;;;8425:38:148;;:43;;3046:71;;2481:636;2464:735;;;3149:39;;-1:-1:-1;;;3149:39:148;;-1:-1:-1;;;;;743:32:260;;3149:39:148;;;725:51:260;698:18;;3149:39:148;;;;;;;2464:735;2332:873;;:::o;14:177:260:-;93:13;;-1:-1:-1;;;;;135:31:260;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:378::-;284:6;292;300;353:2;341:9;332:7;328:23;324:32;321:52;;;369:1;366;359:12;321:52;392:40;422:9;392:40;:::i;:::-;382:50;;451:49;496:2;485:9;481:18;451:49;:::i;:::-;441:59;;519:49;564:2;553:9;549:18;519:49;:::i;:::-;509:59;;196:378;;;;;:::o;579:203::-;1679:8501:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063705e474b1161008c578063a5b13f6911610066578063a5b13f6914610207578063b898895e1461021a578063d52812191461022d578063fc4399821461025557600080fd5b8063705e474b146101bb57806395fd2ef2146101ce578063a5658c86146101f457600080fd5b806309b9601c146100d45780631036bbe2146101055780631cae9eef14610123578063258f8931146101565780634226b1bf1461018157806366e74167146101a8575b600080fd5b6100e76100e23660046120b1565b610268565b6040516001600160e01b031990911681526020015b60405180910390f35b61010f620186a081565b60405162ffffff90911681526020016100fc565b610146610131366004612121565b60006020819052908152604090205460ff1681565b60405190151581526020016100fc565b600354610169906001600160a01b031681565b6040516001600160a01b0390911681526020016100fc565b6101697f000000000000000000000000000000000000000000000000000000000000000081565b6100e76101b6366004612151565b61031c565b600254610169906001600160a01b031681565b6101db622624ab60e91b81565b6040516001600160d81b031990911681526020016100fc565b6100e76102023660046120b1565b6103e9565b6100e76102153660046121f8565b6104a8565b6100e7610228366004612242565b61054e565b61024061023b366004612121565b6105f6565b6040516100fc9998979695949392919061231f565b6100e7610263366004612394565b6106f3565b6000336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102b357604051630d0ec32b60e31b815260040160405180910390fd5b6001600160601b038616600090815260208190526040902054869060ff166102ee57604051630d0ec32b60e31b815260040160405180910390fd5b505050506001600160601b03929092166000908152600160205260409020600201555063026e580760e21b90565b6000336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461036757604051630d0ec32b60e31b815260040160405180910390fd5b6001600160601b03891660009081526020819052604090205460ff16156103a1576040516363d2088f60e11b815260040160405180910390fd5b6001600160601b0389166000908152602081905260409020805460ff191660011790556103d4898989898989898961079d565b506366e7416760e01b98975050505050505050565b6000336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461043457604051630d0ec32b60e31b815260040160405180910390fd5b6001600160601b038616600090815260208190526040902054869060ff1661046f57604051630d0ec32b60e31b815260040160405180910390fd5b6001600160601b0387166000908152600160205260409020600401805460ff60a01b19169055506352b2c64360e11b9695505050505050565b6000336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104f357604051630d0ec32b60e31b815260040160405180910390fd5b6001600160601b038616600090815260208190526040902054869060ff1661052e57604051630d0ec32b60e31b815260040160405180910390fd5b61053b8787878787610aeb565b5063a5b13f6960e01b9695505050505050565b6000336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461059957604051630d0ec32b60e31b815260040160405180910390fd5b6001600160601b038716600090815260208190526040902054879060ff166105d457604051630d0ec32b60e31b815260040160405180910390fd5b6105e2888888888888611137565b50635c4c44af60e11b979650505050505050565b60016020819052600091825260409091208054918101546002820154600383015460048401546005850180546001600160a01b03978816979596949562ffffff8516956301000000860465ffffffffffff90811696600160481b9004169491821693600160a01b90920460ff169290919061067090612420565b80601f016020809104026020016040519081016040528092919081815260200182805461069c90612420565b80156106e95780601f106106be576101008083540402835291602001916106e9565b820191906000526020600020905b8154815290600101906020018083116106cc57829003601f168201915b5050505050905089565b6000336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461073e57604051630d0ec32b60e31b815260040160405180910390fd5b6001600160601b038816600090815260208190526040902054889060ff1661077957604051630d0ec32b60e31b815260040160405180910390fd5b61078889898989898989611137565b50637e21ccc160e11b98975050505050505050565b60006107ab82840184612516565b805190915062ffffff1615806107cb57508051620186a062ffffff909116115b1561080857805160405163440e0f3160e01b815262ffffff909116600482015260016024820152620186a060448201526064015b60405180910390fd5b6000816020015165ffffffffffff1660001415806108315750604082015165ffffffffffff1615155b156108dd5761083e611150565b9050806001600160a01b031663caf9278589610862856020015186604001516112a3565b6040518363ffffffff1660e01b815260040161087f929190612610565b602060405180830381865afa15801561089c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c09190612634565b6108dd576040516328db098b60e01b815260040160405180910390fd5b60608201516001600160a01b0316610908576040516302180d7960e51b815260040160405180910390fd5b60405180610120016040528083606001516001600160a01b0316815260200187815260200160008152602001836000015162ffffff168152602001836020015165ffffffffffff168152602001836040015165ffffffffffff168152602001826001600160a01b031681526020016001151581526020018360800151815250600160008c6001600160601b03166001600160601b0316815260200190815260200160002060008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550602082015181600101556040820151816002015560608201518160030160006101000a81548162ffffff021916908362ffffff16021790555060808201518160030160036101000a81548165ffffffffffff021916908365ffffffffffff16021790555060a08201518160030160096101000a81548165ffffffffffff021916908365ffffffffffff16021790555060c08201518160040160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060e08201518160040160146101000a81548160ff021916908315150217905550610100820151816005019081610acb91906126a0565b50905050610adf8a8a8a8a8a8a8a8a6112eb565b50505050505050505050565b6001600160601b038516600090815260016020818152604080842081516101208101835281546001600160a01b0390811682529482015493810193909352600281015491830191909152600381015462ffffff811660608401526301000000810465ffffffffffff9081166080850152600160481b9091041660a0830152600481015492831660c0830152600160a01b90920460ff16151560e082015260058201805491929161010084019190610ba190612420565b80601f0160208091040260200160405190810160405280929190818152602001828054610bcd90612420565b8015610c1a5780601f10610bef57610100808354040283529160200191610c1a565b820191906000526020600020905b815481529060010190602001808311610bfd57829003601f168201915b505050919092525050604051634f17001d60e11b81526001600160601b038916600482015291925060009182915081906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690639e2e003a90602401600060405180830381865afa158015610c9b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610cc39190810190612777565b50505050604089015160208a01519598509396509194506000938493849350839250610cee91612891565b610cfb8c620186a06128a4565b610d0591906128d1565b610d1290620186a06128e5565b9050620186a062ffffff16818960200151610d2d91906128a4565b610d3791906128d1565b915050610d48818860600151611447565b9250610d588b8860600151611447565b6040516370a0823160e01b81526001600160a01b03888116600483015291935060009250908616906370a0823190602401602060405180830381865afa158015610da6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dca91906128f8565b905082811015610e0e5760405163141b7cb560e21b81526001600160a01b0380871660048301528716602482015260448101849052606481018290526084016107ff565b610e236001600160a01b03861687308661146d565b506000610e6a8c858488878e8e8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061150992505050565b6040516370a0823160e01b81523060048201529091506000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610eb4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ed891906128f8565b60c08901519091506001600160a01b0316156110015760c088015160405163095ea7b360e01b81526001600160a01b039182166004820152602481018390529083169063095ea7b3906044016020604051808303816000875af1158015610f43573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f679190612634565b508760c001516001600160a01b031663e40d88f8896000015184610f938c608001518d60a001516112a3565b8560016040518663ffffffff1660e01b8152600401610fb6959493929190612911565b6060604051808303816000875af1158015610fd5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ff99190612956565b505050611018565b8751611018906001600160a01b0384169083611a7a565b6040516370a0823160e01b81523060048201526000906001600160a01b038716906370a0823190602401602060405180830381865afa15801561105f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061108391906128f8565b9050801561109f5761109f6001600160a01b0387168983611a7a565b506040516370a0823160e01b81523060048201526000906001600160a01b038816906370a0823190602401602060405180830381865afa1580156110e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061110b91906128f8565b90508015611127576111276001600160a01b0388168983611a7a565b5050505050505050505050505050565b604051638a8cacbf60e01b815260040160405180910390fd5b604051635bb27aab60e01b8152622624ab60e91b600482018190526000917f00000000000000000000000000000000000000000000000000000000000000009190839081906001600160a01b03851690635bb27aab906024016040805180830381865afa1580156111c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111e991906129a0565b9150915080806111fa575060ff8216155b1561121857604051633d495ecd60e11b815260040160405180910390fd5b836001600160a01b0316639e55cba36112318585611b01565b6040516001600160e01b031960e084901b1681526001600160c81b03199091166004820152602401602060405180830381865afa158015611276573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061129a91906129d7565b94505050505090565b60408051808201825265ffffffffffff848116808352848216602093840190815284519384019190915251168183015281518082038301815260609091019091525b92915050565b60006112f982840184612516565b90506000816080015180602001905181019061131591906129f4565b6002546040516322afcccb60e01b815262ffffff831660048201529192506001600160a01b0316906322afcccb90602401602060405180830381865afa158015611363573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113879190612a23565b60020b6000036113aa57604051635a60fc9d60e01b815260040160405180910390fd5b600254604051630b4c774160e11b81526000916001600160a01b031690631698ee82906113df908c908c908790600401612a3e565b602060405180830381865afa1580156113fc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061142091906129d7565b6001600160a01b031614610adf57604051635c4b439f60e01b815260040160405180910390fd5b6000620186a061145c62ffffff8416856128a4565b61146691906128d1565b9392505050565b60006040516323b872dd60e01b81526001600160a01b03851660048201526001600160a01b03841660248201528260448201526020600060648360008a5af13d15601f3d11600160005114161716915050806115025760405162461bcd60e51b81526020600482015260146024820152731514905394d1915497d19493d357d1905253115160621b60448201526064016107ff565b5050505050565b600080828060200190518101906115209190612a66565b6001600160601b03891660009081526001602052604081206005018054929350909161154b90612420565b80601f016020809104026020016040519081016040528092919081815260200182805461157790612420565b80156115c45780601f10611599576101008083540402835291602001916115c4565b820191906000526020600020905b8154815290600101906020018083116115a757829003601f168201915b50505050508060200190518101906115dc91906129f4565b90506001600160a01b038087169089161060006115fb8a898b8a611b90565b90506116218261160b578861160d565b8a5b83611618578b61161a565b895b8584611c2a565b50506002546040516322afcccb60e01b815262ffffff8416600482015260009182916001600160a01b03909116906322afcccb90602401602060405180830381865afa158015611675573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116999190612a23565b6003549091506001600160a01b031663a958b895846116b8578a6116ba565b8c5b856116c5578d6116c7565b8b5b87856116d781620d89e719612ab1565b6116e19190612aeb565b86806116f0620d89e719612b12565b6116fa9190612ab1565b6117049190612aeb565b6040516001600160e01b031960e088901b1681526001600160a01b03958616600482015294909316602485015262ffffff9091166044840152600290810b60648401520b608482015260a4016020604051808303816000875af115801561176f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061179391906129d7565b9150819050600080806001600160a01b038416639894f21a876117b6578c6117b8565b8e5b886117c3578f6117c5565b8d5b6040516001600160e01b031960e085901b16815260048101929092526024820152604401606060405180830381865afa158015611806573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061182a9190612b34565b92509250925060008661183d578261183f565b835b905060006118518f8b60000151611e8d565b905080821015611896578f8282604051636ad6fa4b60e01b81526004016107ff939291906001600160a01b039390931683526020830191909152604082015260600190565b8f6001600160a01b031663095ea7b388846040518363ffffffff1660e01b81526004016118d89291906001600160a01b03929092168252602082015260400190565b6020604051808303816000875af11580156118f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061191b9190612634565b50505060008661192b578361192d565b825b9050600061193f8d8b60000151611e8d565b90508082101561197b57604051636ad6fa4b60e01b81526001600160a01b038f16600482015260248101839052604481018290526064016107ff565b60405163095ea7b360e01b81526001600160a01b038881166004830152602482018490528f169063095ea7b3906044016020604051808303816000875af11580156119ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119ee9190612634565b50506040516394bf804d60e01b8152600481018390523060248201526001600160a01b03861691506394bf804d906044016060604051808303816000875af1158015611a3e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a629190612b62565b50505050505050809450505050509695505050505050565b600060405163a9059cbb60e01b81526001600160a01b0384166004820152826024820152602060006044836000895af13d15601f3d1160016000511416171691505080611afb5760405162461bcd60e51b815260206004820152600f60248201526e1514905394d1915497d19052531151608a1b60448201526064016107ff565b50505050565b600080611b0f600a84612bb0565b611b1a906030612bd2565b60f81b90506000611b2c600a85612beb565b611b37906030612bd2565b6040516001600160f81b0319808516602083015260f89290921b91821660218201526001600160d81b031987166022820152909150602701604051602081830303815290604052611b8790612c0d565b95945050505050565b6000806000856001600160a01b0316876001600160a01b031610611bb5578385611bb8565b84845b915091506000611bcd82600160c01b85611eec565b90506000611bda82611f9e565b90506001600160a01b03811115611c1e5760405162461bcd60e51b81526020600482015260086024820152676f766572666c6f7760c01b60448201526064016107ff565b98975050505050505050565b6000836001600160a01b0316856001600160a01b031610611c4a57600080fd5b600254604051630b4c774160e11b81526001600160a01b0390911690631698ee8290611c7e90889088908890600401612a3e565b602060405180830381865afa158015611c9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cbf91906129d7565b90506001600160a01b038116611daa5760025460405163a167129560e01b81526001600160a01b039091169063a167129590611d0390889088908890600401612a3e565b6020604051808303816000875af1158015611d22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d4691906129d7565b60405163f637731d60e01b81526001600160a01b0384811660048301529192509082169063f637731d90602401600060405180830381600087803b158015611d8d57600080fd5b505af1158015611da1573d6000803e3d6000fd5b50505050611e85565b6000816001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015611dea573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e0e9190612c56565b5050505050509050806001600160a01b0316600003611e835760405163f637731d60e01b81526001600160a01b03848116600483015283169063f637731d90602401600060405180830381600087803b158015611e6a57600080fd5b505af1158015611e7e573d6000803e3d6000fd5b505050505b505b949350505050565b6000620186a062ffffff83161115611ecf5760405163440e0f3160e01b815262ffffff8316600482015260006024820152620186a060448201526064016107ff565b620186a0611edd8382612ce2565b61145c9062ffffff16856128a4565b6000808060001985870985870292508281108382030391505080600003611f255760008411611f1a57600080fd5b508290049050611466565b808411611f3157600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b60b581600160881b8110611fb75760409190911b9060801c5b600160481b8110611fcd5760209190911b9060401c5b650100000000008110611fe55760109190911b9060201c5b63010000008110611ffb5760089190911b9060101c5b62010000010260121c80820401600190811c80830401811c80830401811c80830401811c80830401811c80830401811c80830401901c908190048111900390565b80356001600160601b038116811461205357600080fd5b919050565b801515811461206657600080fd5b50565b60008083601f84011261207b57600080fd5b5081356001600160401b0381111561209257600080fd5b6020830191508360208285010111156120aa57600080fd5b9250929050565b6000806000806000608086880312156120c957600080fd5b6120d28661203c565b94506020860135935060408601356120e981612058565b925060608601356001600160401b0381111561210457600080fd5b61211088828901612069565b969995985093965092949392505050565b60006020828403121561213357600080fd5b6114668261203c565b6001600160a01b038116811461206657600080fd5b60008060008060008060008060e0898b03121561216d57600080fd5b6121768961203c565b975060208901356121868161213c565b965060408901356121968161213c565b955060608901356121a68161213c565b94506080890135935060a08901356121bd81612058565b925060c08901356001600160401b038111156121d857600080fd5b6121e48b828c01612069565b999c989b5096995094979396929594505050565b60008060008060006080868803121561221057600080fd5b6122198661203c565b9450602086013593506040860135925060608601356001600160401b0381111561210457600080fd5b60008060008060008060a0878903121561225b57600080fd5b6122648761203c565b955060208701356001600160401b03808216821461228157600080fd5b9095506040880135906122938261213c565b90945060608801359350608088013590808211156122b057600080fd5b506122bd89828a01612069565b979a9699509497509295939492505050565b60005b838110156122ea5781810151838201526020016122d2565b50506000910152565b6000815180845261230b8160208601602086016122cf565b601f01601f19169290920160200192915050565b6001600160a01b038a81168252602082018a90526040820189905262ffffff8816606083015265ffffffffffff8781166080840152861660a0830152841660c082015282151560e08201526101206101008201819052600090612384838201856122f3565b9c9b505050505050505050505050565b600080600080600080600060c0888a0312156123af57600080fd5b6123b88861203c565b965060208801356123c88161213c565b9550604088013594506060880135935060808801356123e681612058565b925060a08801356001600160401b0381111561240157600080fd5b61240d8a828b01612069565b989b979a50959850939692959293505050565b600181811c9082168061243457607f821691505b60208210810361245457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b60405160a081016001600160401b03811182821017156124925761249261245a565b60405290565b604051601f8201601f191681016001600160401b03811182821017156124c0576124c061245a565b604052919050565b62ffffff8116811461206657600080fd5b803565ffffffffffff8116811461205357600080fd5b60006001600160401b038211156125085761250861245a565b50601f01601f191660200190565b6000602080838503121561252957600080fd5b82356001600160401b038082111561254057600080fd5b9084019060a0828703121561255457600080fd5b61255c612470565b8235612567816124c8565b81526125748385016124d9565b84820152612584604084016124d9565b604082015260608301356125978161213c565b60608201526080830135828111156125ae57600080fd5b80840193505086601f8401126125c357600080fd5b823591506125d86125d3836124ef565b612498565b82815287858486010111156125ec57600080fd5b82858501868301376000858483010152806080830152508094505050505092915050565b6001600160a01b0383168152604060208201819052600090611e85908301846122f3565b60006020828403121561264657600080fd5b815161146681612058565b601f82111561269b57600081815260208120601f850160051c810160208610156126785750805b601f850160051c820191505b8181101561269757828155600101612684565b5050505b505050565b81516001600160401b038111156126b9576126b961245a565b6126cd816126c78454612420565b84612651565b602080601f83116001811461270257600084156126ea5750858301515b600019600386901b1c1916600185901b178555612697565b600085815260208120601f198616915b8281101561273157888601518255948401946001909101908401612712565b508582101561274f5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b80516001600160c81b03198116811461205357600080fd5b60008060008060008060008060006101208a8c03121561279657600080fd5b89516127a18161213c565b60208b01519099506127b28161213c565b60408b01519098506127c38161213c565b96506127d160608b0161275f565b955060808a0151945060a08a01516127e88161213c565b93506127f660c08b0161275f565b925060e08a015161280681612058565b6101008b01519092506001600160401b0381111561282357600080fd5b8a01601f81018c1361283457600080fd5b80516128426125d3826124ef565b8181528d602083850101111561285757600080fd5b6128688260208301602086016122cf565b8093505050509295985092959850929598565b634e487b7160e01b600052601160045260246000fd5b808201808211156112e5576112e561287b565b80820281158282048414176112e5576112e561287b565b634e487b7160e01b600052601260045260246000fd5b6000826128e0576128e06128bb565b500490565b818103818111156112e5576112e561287b565b60006020828403121561290a57600080fd5b5051919050565b6001600160a01b0386811682528516602082015260a06040820181905260009061293d908301866122f3565b6060830194909452509015156080909101529392505050565b60008060006060848603121561296b57600080fd5b83519250602084015161297d8161213c565b80925050604084015190509250925092565b805160ff8116811461205357600080fd5b600080604083850312156129b357600080fd5b6129bc8361298f565b915060208301516129cc81612058565b809150509250929050565b6000602082840312156129e957600080fd5b81516114668161213c565b600060208284031215612a0657600080fd5b8151611466816124c8565b8051600281900b811461205357600080fd5b600060208284031215612a3557600080fd5b61146682612a11565b6001600160a01b03938416815291909216602082015262ffffff909116604082015260600190565b600060208284031215612a7857600080fd5b604051602081018181106001600160401b0382111715612a9a57612a9a61245a565b6040528251612aa8816124c8565b81529392505050565b60008160020b8360020b80612ac857612ac86128bb565b627fffff19821460001982141615612ae257612ae261287b565b90059392505050565b60008260020b8260020b028060020b9150808214612b0b57612b0b61287b565b5092915050565b60008160020b627fffff198103612b2b57612b2b61287b565b60000392915050565b600080600060608486031215612b4957600080fd5b8351925060208401519150604084015190509250925092565b600080600060608486031215612b7757600080fd5b835192506020840151915060408401516fffffffffffffffffffffffffffffffff81168114612ba557600080fd5b809150509250925092565b600060ff831680612bc357612bc36128bb565b8060ff84160491505092915050565b60ff81811683821601908111156112e5576112e561287b565b600060ff831680612bfe57612bfe6128bb565b8060ff84160691505092915050565b805160208201516001600160c81b03198082169291906007831015612c3c5780818460070360031b1b83161693505b505050919050565b805161ffff8116811461205357600080fd5b600080600080600080600060e0888a031215612c7157600080fd5b8751612c7c8161213c565b9650612c8a60208901612a11565b9550612c9860408901612c44565b9450612ca660608901612c44565b9350612cb460808901612c44565b9250612cc260a0890161298f565b915060c0880151612cd281612058565b8091505092959891949750929550565b62ffffff828116828216039080821115612b0b57612b0b61287b56fea2646970667358221220e34b9413cff9c08e0930b32c80d5c4a260f993a4d898cef0b80a614ddb31e06364736f6c63430008130033",
    "sourceMap": "1679:8501:130:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3313:486:123;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;;1519:33:260;;;1501:52;;1489:2;1474:18;3313:486:123;;;;;;;;3234:40:128;;3271:3;3234:40;;;;;1738:8:260;1726:21;;;1708:40;;1696:2;1681:18;3234:40:128;1564:190:260;844:46:123;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;2113:14:260;;2106:22;2088:41;;2076:2;2061:18;844:46:123;1948:187:260;2622:31:130;;;;;-1:-1:-1;;;;;2622:31:130;;;;;;-1:-1:-1;;;;;2326:32:260;;;2308:51;;2296:2;2281:18;2622:31:130;2140:225:260;733:38:123;;;;;1627:763;;;;;;:::i;:::-;;:::i;2459:37:130:-;;;;;-1:-1:-1;;;;;2459:37:130;;;3280:60:128;;-1:-1:-1;;;3280:60:128;;;;;-1:-1:-1;;;;;;4221:35:260;;;4203:54;;4191:2;4176:18;3280:60:128;4059:204:260;2667:451:123;;;;;;:::i;:::-;;:::i;5332:370::-;;;;;;:::i;:::-;;:::i;4765:384::-;;;;;;:::i;:::-;;:::i;3417:65:128:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;:::i;3996:523:123:-;;;;;;:::i;:::-;;:::i;3313:486::-;3520:6;1324:10;-1:-1:-1;;;;;1338:13:123;1324:27;;1320:64;;1360:24;;-1:-1:-1;;;1360:24:123;;;;;;;;;;;1320:64;-1:-1:-1;;;;;1465:23:123;::::1;:15;:23:::0;;;::::1;::::0;;;;;;;3503:6;;1465:23:::1;;1460:61;;1497:24;;-1:-1:-1::0;;;1497:24:123::1;;;;;;;;;;;1460:61;-1:-1:-1::0;;;;;;;;;9611:24:128;;;;9577:31;9611:24;;;:16;:24;;;;;9645:23;;:40;-1:-1:-1;;;;3770:22:123;3313:486::o;1627:763::-;1888:6;1324:10;-1:-1:-1;;;;;1338:13:123;1324:27;;1320:64;;1360:24;;-1:-1:-1;;;1360:24:123;;;;;;;;;;;1320:64;-1:-1:-1;;;;;1951:23:123;::::1;:15;:23:::0;;;::::1;::::0;;;;;;;::::1;;1947:60;;;1983:24;;-1:-1:-1::0;;;1983:24:123::1;;;;;;;;;;;1947:60;-1:-1:-1::0;;;;;2058:23:123;::::1;:15;:23:::0;;;::::1;::::0;;;;;;:30;;-1:-1:-1;;2058:30:123::1;2084:4;2058:30;::::0;;2256:87:::1;2074:6:::0;2274:7;2283:10;2295:11;2308:9;2319:8;2329:13;;2256:9:::1;:87::i;:::-;-1:-1:-1::0;;;;1627:763:123;;;;;;;;;;:::o;2667:451::-;2872:6;1324:10;-1:-1:-1;;;;;1338:13:123;1324:27;;1320:64;;1360:24;;-1:-1:-1;;;1360:24:123;;;;;;;;;;;1320:64;-1:-1:-1;;;;;1465:23:123;::::1;:15;:23:::0;;;::::1;::::0;;;;;;;2855:6;;1465:23:::1;;1460:61;;1497:24;;-1:-1:-1::0;;;1497:24:123::1;;;;;;;;;;;1460:61;-1:-1:-1::0;;;;;8951:24:128;;8917:31;8951:24;;;:16;:24;;;;;8985:13;;:21;;-1:-1:-1;;;;8985:21:128;;;-1:-1:-1;;;;3089:22:123;2667:451;-1:-1:-1;;;;;;2667:451:123:o;5332:370::-;5539:6;1324:10;-1:-1:-1;;;;;1338:13:123;1324:27;;1320:64;;1360:24;;-1:-1:-1;;;1360:24:123;;;;;;;;;;;1320:64;-1:-1:-1;;;;;1465:23:123;::::1;:15;:23:::0;;;::::1;::::0;;;;;;;5522:6;;1465:23:::1;;1460:61;;1497:24;;-1:-1:-1::0;;;1497:24:123::1;;;;;;;;;;;1460:61;5603:52:::2;5613:6;5621:9;5632:7;5641:13;;5603:9;:52::i;:::-;-1:-1:-1::0;;;;5673:22:123;5332:370;-1:-1:-1;;;;;;5332:370:123:o;4765:384::-;4988:6;1324:10;-1:-1:-1;;;;;1338:13:123;1324:27;;1320:64;;1360:24;;-1:-1:-1;;;1360:24:123;;;;;;;;;;;1320:64;-1:-1:-1;;;;;1465:23:123;::::1;:15;:23:::0;;;::::1;::::0;;;;;;;4971:6;;1465:23:::1;;1460:61;;1497:24;;-1:-1:-1::0;;;1497:24:123::1;;;;;;;;;;;1460:61;5052:53:::2;5059:6;5067:5;5074:6;5082:7;5091:13;;5052:6;:53::i;:::-;-1:-1:-1::0;;;;5123:19:123;4765:384;-1:-1:-1;;;;;;;4765:384:123:o;3417:65:128:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3417:65:128;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3417:65:128;;;;;;;;-1:-1:-1;;;3417:65:128;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3996:523:123:-;4252:6;1324:10;-1:-1:-1;;;;;1338:13:123;1324:27;;1320:64;;1360:24;;-1:-1:-1;;;1360:24:123;;;;;;;;;;;1320:64;-1:-1:-1;;;;;1465:23:123;::::1;:15;:23:::0;;;::::1;::::0;;;;;;;4235:6;;1465:23:::1;;1460:61;;1497:24;;-1:-1:-1::0;;;1497:24:123::1;;;;;;;;;;;1460:61;4398:72:::2;4410:6;4418;4426:7;4435;4444:10;4456:13;;4398:11;:72::i;:::-;-1:-1:-1::0;;;;4488:24:123;3996:523;-1:-1:-1;;;;;;;;3996:523:123:o;5035:2332:128:-;5337:28;5368:43;;;;5379:13;5368:43;:::i;:::-;5506:33;;5337:74;;-1:-1:-1;5506:38:128;;;;:105;;-1:-1:-1;5564:33:128;;3271:3;5564:47;;;;;5506:105;5489:280;;;5695:33;;5643:115;;-1:-1:-1;;;5643:115:128;;11295:8:260;11330:15;;;5643:115:128;;;11312:34:260;5730:1:128;11362:18:260;;;11355:43;3271:3:128;11414:18:260;;;11407:43;11258:18;;5643:115:128;;;;;;;;5489:280;5798:33;5879:6;:19;;;:24;;5902:1;5879:24;;:53;;;-1:-1:-1;5907:20:128;;;;:25;;;;5879:53;5875:672;;;6041:31;:29;:31::i;:::-;6005:68;;6268:19;-1:-1:-1;;;;;6268:28:128;;6326:10;6359:67;6384:6;:19;;;6405:6;:20;;;6359:24;:67::i;:::-;6268:176;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6112:425;;6484:38;;-1:-1:-1;;;6484:38:128;;;;;;;;;;;6112:425;6609:16;;;;-1:-1:-1;;;;;6609:30:128;6605:100;;6662:32;;-1:-1:-1;;;6662:32:128;;;;;;;;;;;6605:100;6777:432;;;;;;;;6819:6;:16;;;-1:-1:-1;;;;;6777:432:128;;;;;6862:9;6777:432;;;;6903:1;6777:432;;;;6946:6;:33;;;6777:432;;;;;;7007:6;:19;;;6777:432;;;;;;7055:6;:20;;;6777:432;;;;;;7110:19;-1:-1:-1;;;;;6777:432:128;;;;;7151:4;6777:432;;;;;;7181:6;:17;;;6777:432;;;6750:16;:24;6767:6;-1:-1:-1;;;;;6750:24:128;-1:-1:-1;;;;;6750:24:128;;;;;;;;;;;;:459;;;;;;;;;;;;;-1:-1:-1;;;;;6750:459:128;;;;;-1:-1:-1;;;;;6750:459:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6750:459:128;;;;;-1:-1:-1;;;;;6750:459:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;7272:88;7283:6;7291:7;7300:10;7312:11;7325:9;7336:8;7346:13;;7272:10;:88::i;:::-;5279:2088;;5035:2332;;;;;;;;:::o;11421:3705::-;-1:-1:-1;;;;;11628:24:128;;11595:30;11628:24;;;:16;:24;;;;;;;;11595:57;;;;;;;;;-1:-1:-1;;;;;11595:57:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;11595:57:128;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;11595:57:128;;;;;;;;;;;;;;;;;;11628:24;11595:57;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;11595:57:128;;;;-1:-1:-1;;11795:46:128;;-1:-1:-1;;;11795:46:128;;-1:-1:-1;;;;;14390:39:260;;11795:46:128;;;14372:58:260;11595:57:128;;-1:-1:-1;11662:14:128;;;;-1:-1:-1;11662:14:128;;-1:-1:-1;;;;;11808:13:128;11795:38;;;;14345:18:260;;11795:46:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11795:46:128;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;12487:23:128;;;;12466:18;;;;11755:86;;-1:-1:-1;11755:86:128;;-1:-1:-1;11755:86:128;;-1:-1:-1;11862:26:128;;;;;;-1:-1:-1;11862:26:128;;-1:-1:-1;12466:44:128;;;:::i;:::-;12449:13;:7;12459:3;12449:13;:::i;:::-;:62;;;;:::i;:::-;12443:68;;:3;:68;:::i;:::-;12394:117;;3271:3;12549:55;;12571:18;12550:6;:18;;;:39;;;;:::i;:::-;12549:55;;;;:::i;:::-;12530:74;;12050:569;12739:75;12762:16;12780:6;:33;;;12739:22;:75::i;:::-;12702:112;;12866:68;12889:9;12900:6;:33;;;12866:22;:68::i;:::-;13113:34;;-1:-1:-1;;;13113:34:128;;-1:-1:-1;;;;;2326:32:260;;;13113:34:128;;;2308:51:260;12828:106:128;;-1:-1:-1;13086:24:128;;-1:-1:-1;13113:26:128;;;;;;2281:18:260;;13113:34:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13086:61;;13184:18;13165:16;:37;13161:206;;;13229:123;;-1:-1:-1;;;13229:123:128;;-1:-1:-1;;;;;17618:15:260;;;13229:123:128;;;17600:34:260;17670:15;;17650:18;;;17643:43;17702:18;;;17695:34;;;17745:18;;;17738:34;;;17534:19;;13229:123:128;17331:447:260;13161:206:128;13381:76;-1:-1:-1;;;;;13381:33:128;;13415:6;13431:4;13438:18;13381:33;:76::i;:::-;13020:448;13521:15;13540:124;13569:6;13577:10;13589:19;13610:9;13621:18;13641:13;;13540:124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13540:15:128;;-1:-1:-1;;;13540:124:128:i;:::-;13702:34;;-1:-1:-1;;;13702:34:128;;13730:4;13702:34;;;2308:51:260;13520:144:128;;-1:-1:-1;13674:25:128;;-1:-1:-1;;;;;13702:19:128;;;;;2281:18:260;;13702:34:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13819:26;;;;13674:62;;-1:-1:-1;;;;;;13811:49:128;;13807:735;;13948:26;;;;13922:73;;-1:-1:-1;;;13922:73:128;;-1:-1:-1;;;;;17975:32:260;;;13922:73:128;;;17957:51:260;18024:18;;;18017:34;;;13922:17:128;;;;;;17930:18:260;;13922:73:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;14079:6;:26;;;-1:-1:-1;;;;;14079:31:128;;14128:6;:16;;;14170:9;14198:67;14223:6;:19;;;14244:6;:20;;;14198:24;:67::i;:::-;14283:17;14318:4;14079:310;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;13807:735;;;14495:16;;14472:59;;-1:-1:-1;;;;;14472:22:128;;;14513:17;14472:22;:59::i;:::-;14651:42;;-1:-1:-1;;;14651:42:128;;14687:4;14651:42;;;2308:51:260;14623:25:128;;-1:-1:-1;;;;;14651:27:128;;;;;2281:18:260;;14651:42:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14623:70;-1:-1:-1;14711:21:128;;14707:117;;14752:57;-1:-1:-1;;;;;14752:30:128;;14783:6;14791:17;14752:30;:57::i;:::-;-1:-1:-1;14941:41:128;;-1:-1:-1;;;14941:41:128;;14976:4;14941:41;;;2308:51:260;14914:24:128;;-1:-1:-1;;;;;14941:26:128;;;;;2281:18:260;;14941:41:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14914:68;-1:-1:-1;15000:20:128;;14996:114;;15040:55;-1:-1:-1;;;;;15040:29:128;;15070:6;15078:16;15040:29;:55::i;:::-;14900:220;11585:3541;;;;;;;;11421:3705;;;;;:::o;10090:165::-;10223:25;;-1:-1:-1;;;10223:25:128;;;;;;;;;;;16910:605;17209:51;;-1:-1:-1;;;17209:51:128;;-1:-1:-1;;;17209:51:128;;;4203:54:260;;;16974:7:128;;17042:13;;17103:22;16974:7;;;;-1:-1:-1;;;;;17209:36:128;;;;;4176:18:260;;17209:51:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17170:90;;;;17275:8;:30;;;-1:-1:-1;17287:18:128;;;;17275:30;17271:106;;;17328:38;;-1:-1:-1;;;17328:38:128;;;;;;;;;;;17271:106;17415:20;-1:-1:-1;;;;;17415:40:128;;17456:41;17468:13;17483;17456:11;:41::i;:::-;17415:83;;-1:-1:-1;;;;;;17415:83:128;;;;;;;-1:-1:-1;;;;;;19942:39:260;;;17415:83:128;;;19924:58:260;19897:18;;17415:83:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17387:121;;;;;;16910:605;:::o;17521:222::-;17673:62;;;;;;;;;;;;;;;;;;;;;;;;;17662:74;;;;;20508:41:260;;;;20591:24;20587:33;20565:20;;;20558:63;17662:74:128;;;;;;;;;17631:12;20448:18:260;;;17662:74:128;;;17521:222;;;;;:::o;3588:772:130:-;3809:28;3840:43;;;;3851:13;3840:43;:::i;:::-;3809:74;;3894:14;3923:6;:17;;;3912:39;;;;;;;;;;;;:::i;:::-;4048:12;;:42;;-1:-1:-1;;;4048:42:130;;1738:8:260;1726:21;;4048:42:130;;;1708:40:260;3893:58:130;;-1:-1:-1;;;;;;4048:12:130;;:33;;1681:18:260;;4048:42:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:47;;4094:1;4048:47;4044:120;;4118:35;;-1:-1:-1;;;4118:35:130;;;;;;;;;;;4044:120;4224:12;;:54;;-1:-1:-1;;;4224:54:130;;4290:1;;-1:-1:-1;;;;;4224:12:130;;:20;;:54;;4245:10;;4257:11;;4270:7;;4224:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4224:68:130;;4220:134;;4315:28;;-1:-1:-1;;;4315:28:130;;;;;;;;;;;16688:216:128;16818:7;3271:3;16845:37;16844:53;16845:37;;:7;:37;:::i;:::-;16844:53;;;;:::i;:::-;16837:60;16688:216;-1:-1:-1;;;16688:216:128:o;1328:1782:57:-;1466:12;1636:4;1630:11;-1:-1:-1;;;1759:17:57;1752:93;-1:-1:-1;;;;;1896:4:57;1892:53;1888:1;1869:17;1865:25;1858:88;-1:-1:-1;;;;;2038:2:57;2034:51;2029:2;2010:17;2006:26;1999:87;2172:6;2167:2;2148:17;2144:26;2137:42;3026:2;3023:1;3018:3;2999:17;2996:1;2989:5;2982;2977:52;2545:16;2538:24;2532:2;2514:16;2511:24;2507:1;2503;2497:8;2494:15;2490:46;2487:76;2287:756;2276:767;;;3071:7;3063:40;;;;-1:-1:-1;;;3063:40:57;;22115:2:260;3063:40:57;;;22097:21:260;22154:2;22134:18;;;22127:30;-1:-1:-1;;;22173:18:260;;;22166:50;22233:18;;3063:40:57;21913:344:260;3063:40:57;1456:1654;1328:1782;;;;:::o;5090:4285:130:-;5341:15;5404:28;5446:13;5435:43;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5571:24:130;;5542:14;5571:24;;;:16;:24;;;;;:35;;5560:57;;5404:74;;-1:-1:-1;5542:14:130;;5560:57;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5541:76;-1:-1:-1;;;;;;5698:24:130;;;;;;;5672:23;5863:121;5698:11;5712:10;5935:17;5954:16;5863:29;:121::i;:::-;5840:144;;6179:230;6232:18;:45;;6267:10;6232:45;;;6253:11;6232:45;6295:18;:45;;6329:11;6295:45;;;6316:10;6295:45;6358:7;6383:12;6179:35;:230::i;:::-;-1:-1:-1;;6624:12:130;;:42;;-1:-1:-1;;;6624:42:130;;1738:8:260;1726:21;;6624:42:130;;;1708:40:260;6463:24:130;;;;-1:-1:-1;;;;;6624:12:130;;;;:33;;1681:18:260;;6624:42:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6887:11;;6604:62;;-1:-1:-1;;;;;;6887:11:130;:22;6927:18;:45;;6962:10;6927:45;;;6948:11;6927:45;6990:18;:45;;7024:11;6990:45;;;7011:10;6990:45;7053:7;7112:11;7078:31;7112:11;-1:-1:-1;;7078:31:130;:::i;:::-;:45;;;;:::i;:::-;7175:11;;667:9:93;-1:-1:-1;;667:9:93;:::i;:::-;7141:31:130;;;;:::i;:::-;:45;;;;:::i;:::-;6887:313;;-1:-1:-1;;;;;;6887:313:130;;;;;;;-1:-1:-1;;;;;23799:15:260;;;6887:313:130;;;23781:34:260;23851:15;;;;23831:18;;;23824:43;23915:8;23903:21;;;23883:18;;;23876:49;23972:1;23961:21;;;23941:18;;;23934:49;24020:21;23999:19;;;23992:50;23715:19;;6887:313:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6868:332;-1:-1:-1;6868:332:130;;-1:-1:-1;7268:22:130;;;-1:-1:-1;;;;;7539:28:130;;;7585:18;:57;;7626:16;7585:57;;;7606:17;7585:57;7660:18;:57;;7700:17;7660:57;;;7681:16;7660:57;7539:192;;-1:-1:-1;;;;;;7539:192:130;;;;;;;;;;24227:25:260;;;;24268:18;;;24261:34;24200:18;;7539:192:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7451:280;;;;;;7814:26;7843:18;:50;;7880:13;7843:50;;;7864:13;7843:50;7814:79;;8056:13;8072:61;8095:17;8114:6;:18;;;8072:22;:61::i;:::-;8056:77;;8176:5;8155:18;:26;8151:137;;;8230:11;8243:18;8263:5;8212:57;;-1:-1:-1;;;8212:57:130;;;;;;;;;-1:-1:-1;;;;;24837:32:260;;;;24819:51;;24901:2;24886:18;;24879:34;;;;24944:2;24929:18;;24922:34;24807:2;24792:18;;24617:345;8151:137:130;8369:11;-1:-1:-1;;;;;8363:26:130;;8398:16;8417:18;8363:73;;;;;;;;;;;;;;;-1:-1:-1;;;;;17975:32:260;;;;17957:51;;18039:2;18024:18;;18017:34;17945:2;17930:18;;17783:274;8363:73:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7796:655;;8482:25;8510:18;:50;;8547:13;8510:50;;;8531:13;8510:50;8482:78;;8721:13;8737:60;8760:16;8778:6;:18;;;8737:22;:60::i;:::-;8721:76;;8839:5;8819:17;:25;8815:134;;;8875:55;;-1:-1:-1;;;8875:55:130;;-1:-1:-1;;;;;24837:32:260;;8875:55:130;;;24819:51:260;24886:18;;;24879:34;;;24929:18;;;24922:34;;;24792:18;;8875:55:130;24617:345:260;8815:134:130;9024:71;;-1:-1:-1;;;9024:71:130;;-1:-1:-1;;;;;17975:32:260;;;9024:71:130;;;17957:51:260;18024:18;;;18017:34;;;9024:25:130;;;;;17930:18:260;;9024:71:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;9260:52:130;;-1:-1:-1;;;9260:52:130;;;;;25141:25:260;;;9306:4:130;25182:18:260;;;25175:60;-1:-1:-1;;;;;9260:18:130;;;-1:-1:-1;9260:18:130;;25114::260;;9260:52:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;7254:2069;;;;9351:16;9333:35;;5358:4017;;;;5090:4285;;;;;;;;:::o;3116:1607:57:-;3228:12;3398:4;3392:11;-1:-1:-1;;;3521:17:57;3514:93;-1:-1:-1;;;;;3658:2:57;3654:51;3650:1;3631:17;3627:25;3620:86;3792:6;3787:2;3768:17;3764:26;3757:42;4644:2;4641:1;4637:2;4618:17;4615:1;4608:5;4601;4596:51;4165:16;4158:24;4152:2;4134:16;4131:24;4127:1;4123;4117:8;4114:15;4110:46;4107:76;3907:754;3896:765;;;4689:7;4681:35;;;;-1:-1:-1;;;4681:35:57;;25880:2:260;4681:35:57;;;25862:21:260;25919:2;25899:18;;;25892:30;-1:-1:-1;;;25938:18:260;;;25931:45;25993:18;;4681:35:57;25678:339:260;4681:35:57;3218:1505;3116:1607;;;:::o;758:361:166:-;827:7;;906:13;917:2;906:8;:13;:::i;:::-;:20;;922:4;906:20;:::i;:::-;899:28;;;-1:-1:-1;933:18:166;962:13;973:2;962:8;:13;:::i;:::-;961:22;;979:4;961:22;:::i;:::-;1063:51;;-1:-1:-1;;;;;;26760:15:260;;;1063:51:166;;;26748:28:260;954:30:166;;;;;26805:15:260;;;26792:11;;;26785:36;-1:-1:-1;;;;;;26850:35:260;;26837:11;;;26830:56;954:30:166;;-1:-1:-1;26902:11:260;;1063:51:166;;;;;;;;;;;;1056:59;;;:::i;:::-;1036:80;758:361;-1:-1:-1;;;;;758:361:166:o;757:879:162:-;909:20;942:15;959;999:6;-1:-1:-1;;;;;990:15:162;:6;-1:-1:-1;;;;;990:15:162;;:57;;1030:7;1039;990:57;;;1009:7;1018;990:57;941:106;;;;1374:17;1394:43;1410:7;-1:-1:-1;;;1429:7:162;1394:15;:43::i;:::-;1374:63;;1447:24;1474:33;1497:9;1474:22;:33::i;:::-;1447:60;-1:-1:-1;;;;;;1522:36:162;;1518:60;;;1560:18;;-1:-1:-1;;;1560:18:162;;27498:2:260;1560:18:162;;;27480:21:260;27537:1;27517:18;;;27510:29;-1:-1:-1;;;27555:18:260;;;27548:38;27603:18;;1560::162;27296:331:260;1518:60:162;1612:16;757:879;-1:-1:-1;;;;;;;;757:879:162:o;9509:669:130:-;9676:12;9717:6;-1:-1:-1;;;;;9708:15:130;:6;-1:-1:-1;;;;;9708:15:130;;9700:24;;;;;;9741:12;;:41;;-1:-1:-1;;;9741:41:130;;-1:-1:-1;;;;;9741:12:130;;;;:20;;:41;;9762:6;;9770;;9778:3;;9741:41;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9734:48;-1:-1:-1;;;;;;9797:18:130;;9793:379;;9838:12;;:44;;-1:-1:-1;;;9838:44:130;;-1:-1:-1;;;;;9838:12:130;;;;:23;;:44;;9862:6;;9870;;9878:3;;9838:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9896:45;;-1:-1:-1;;;9896:45:130;;-1:-1:-1;;;;;2326:32:260;;;9896:45:130;;;2308:51:260;9831::130;;-1:-1:-1;9896:31:130;;;;;;2281:18:260;;9896:45:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9793:379;;;9973:28;10026:4;-1:-1:-1;;;;;10011:26:130;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9972:67;;;;;;;;10057:20;-1:-1:-1;;;;;10057:25:130;10081:1;10057:25;10053:109;;10102:45;;-1:-1:-1;;;10102:45:130;;-1:-1:-1;;;;;2326:32:260;;;10102:45:130;;;2308:51:260;10102:31:130;;;;;2281:18:260;;10102:45:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10053:109;9958:214;9793:379;9509:669;;;;;;:::o;16354:328:128:-;16466:7;3271:3;16489:23;;;;16485:122;;;16535:61;;-1:-1:-1;;;16535:61:128;;11295:8:260;11330:15;;16535:61:128;;;11312:34:260;16581:1:128;11362:18:260;;;11355:43;3271:3:128;11414:18:260;;;11407:43;11258:18;;16535:61:128;11080:376:260;16485:122:128;3271:3;16636:23;16650:9;3271:3;16636:23;:::i;:::-;16625:35;;;;:7;:35;:::i;741:4127:85:-;853:14;;;-1:-1:-1;;1416:1:85;1413;1406:20;1459:1;1456;1452:9;1443:18;;1514:5;1510:2;1507:13;1499:5;1495:2;1491:14;1487:34;1478:43;;;1615:5;1624:1;1615:10;1611:203;;1667:1;1653:11;:15;1645:24;;;;;;-1:-1:-1;1728:23:85;;;;-1:-1:-1;1786:13:85;;1611:203;1953:5;1939:11;:19;1931:28;;;;;;2260:17;2344:11;2341:1;2338;2331:25;2736:12;2752:15;;;2751:31;;2888:22;;;;;3763:1;3744;:15;;3743:21;;4006:17;;;4002:21;;3995:28;4068:17;;;4064:21;;4057:28;4131:17;;;4127:21;;4120:28;4194:17;;;4190:21;;4183:28;4257:17;;;4253:21;;4246:28;4321:17;;;4317:21;;;4310:28;3300:12;;;;3296:23;;;3321:1;3292:31;2489:20;;;2478:32;;;3359:12;;;;2536:21;;;;3032:16;;;;3350:21;;;;4813:11;;;;;-1:-1:-1;;741:4127:85;;;;;:::o;5746:3396:55:-;5976:3;5890:1;-1:-1:-1;;;6419:44:55;;6409:136;;6525:2;6521:10;;;;;6492:3;6488:11;6409:136;-1:-1:-1;;;6571:1:55;6568:28;6558:119;;6657:2;6653:10;;;;;6625:2;6621:10;6558:119;6706:13;6703:1;6700:20;6690:111;;6781:2;6777:10;;;;;6749:2;6745:10;6690:111;6830:9;6827:1;6824:16;6814:106;;6901:1;6897:9;;;;;6869:2;6865:10;6814:106;8137:5;8130:13;8123:21;8119:2;8115:30;8325:9;;;8318:17;8315:1;8311:25;;;8368:9;;;8361:17;8354:25;;8411:9;;;8404:17;8397:25;;8454:9;;;8447:17;8440:25;;8497:9;;;8490:17;8483:25;;8540:9;;;8533:17;8526:25;;8583:9;;;8576:17;8569:25;;9112:9;;;;9109:16;-1:-1:-1;9102:24:55;;;5746:3396::o;14:179:260:-;81:20;;-1:-1:-1;;;;;130:38:260;;120:49;;110:77;;183:1;180;173:12;110:77;14:179;;;:::o;198:118::-;284:5;277:13;270:21;263:5;260:32;250:60;;306:1;303;296:12;250:60;198:118;:::o;321:347::-;372:8;382:6;436:3;429:4;421:6;417:17;413:27;403:55;;454:1;451;444:12;403:55;-1:-1:-1;477:20:260;;-1:-1:-1;;;;;509:30:260;;506:50;;;552:1;549;542:12;506:50;589:4;581:6;577:17;565:29;;641:3;634:4;625:6;617;613:19;609:30;606:39;603:59;;;658:1;655;648:12;603:59;321:347;;;;;:::o;673:679::-;766:6;774;782;790;798;851:3;839:9;830:7;826:23;822:33;819:53;;;868:1;865;858:12;819:53;891:28;909:9;891:28;:::i;:::-;881:38;;966:2;955:9;951:18;938:32;928:42;;1020:2;1009:9;1005:18;992:32;1033:28;1055:5;1033:28;:::i;:::-;1080:5;-1:-1:-1;1136:2:260;1121:18;;1108:32;-1:-1:-1;;;;;1152:30:260;;1149:50;;;1195:1;1192;1185:12;1149:50;1234:58;1284:7;1275:6;1264:9;1260:22;1234:58;:::i;:::-;673:679;;;;-1:-1:-1;673:679:260;;-1:-1:-1;1311:8:260;;1208:84;673:679;-1:-1:-1;;;673:679:260:o;1759:184::-;1817:6;1870:2;1858:9;1849:7;1845:23;1841:32;1838:52;;;1886:1;1883;1876:12;1838:52;1909:28;1927:9;1909:28;:::i;2578:131::-;-1:-1:-1;;;;;2653:31:260;;2643:42;;2633:70;;2699:1;2696;2689:12;2714:1105;2834:6;2842;2850;2858;2866;2874;2882;2890;2943:3;2931:9;2922:7;2918:23;2914:33;2911:53;;;2960:1;2957;2950:12;2911:53;2983:28;3001:9;2983:28;:::i;:::-;2973:38;;3061:2;3050:9;3046:18;3033:32;3074:31;3099:5;3074:31;:::i;:::-;3124:5;-1:-1:-1;3181:2:260;3166:18;;3153:32;3194:33;3153:32;3194:33;:::i;:::-;3246:7;-1:-1:-1;3305:2:260;3290:18;;3277:32;3318:33;3277:32;3318:33;:::i;:::-;3370:7;-1:-1:-1;3424:3:260;3409:19;;3396:33;;-1:-1:-1;3481:3:260;3466:19;;3453:33;3495:30;3453:33;3495:30;:::i;:::-;3544:7;-1:-1:-1;3602:3:260;3587:19;;3574:33;-1:-1:-1;;;;;3619:30:260;;3616:50;;;3662:1;3659;3652:12;3616:50;3701:58;3751:7;3742:6;3731:9;3727:22;3701:58;:::i;:::-;2714:1105;;;;-1:-1:-1;2714:1105:260;;-1:-1:-1;2714:1105:260;;;;;;3778:8;-1:-1:-1;;;2714:1105:260:o;4268:618::-;4364:6;4372;4380;4388;4396;4449:3;4437:9;4428:7;4424:23;4420:33;4417:53;;;4466:1;4463;4456:12;4417:53;4489:28;4507:9;4489:28;:::i;:::-;4479:38;;4564:2;4553:9;4549:18;4536:32;4526:42;;4615:2;4604:9;4600:18;4587:32;4577:42;;4670:2;4659:9;4655:18;4642:32;-1:-1:-1;;;;;4689:6:260;4686:30;4683:50;;;4729:1;4726;4719:12;4891:869;4995:6;5003;5011;5019;5027;5035;5088:3;5076:9;5067:7;5063:23;5059:33;5056:53;;;5105:1;5102;5095:12;5056:53;5128:28;5146:9;5128:28;:::i;:::-;5118:38;;5206:2;5195:9;5191:18;5178:32;-1:-1:-1;;;;;5287:2:260;5280:5;5276:14;5269:5;5266:25;5256:53;;5305:1;5302;5295:12;5256:53;5328:5;;-1:-1:-1;5385:2:260;5370:18;;5357:32;;5398:33;5357:32;5398:33;:::i;:::-;5450:7;;-1:-1:-1;5504:2:260;5489:18;;5476:32;;-1:-1:-1;5559:3:260;5544:19;;5531:33;;5576:14;;;5573:34;;;5603:1;5600;5593:12;5573:34;;5642:58;5692:7;5683:6;5672:9;5668:22;5642:58;:::i;:::-;4891:869;;;;-1:-1:-1;4891:869:260;;-1:-1:-1;4891:869:260;;5719:8;;4891:869;-1:-1:-1;;;4891:869:260:o;5765:250::-;5850:1;5860:113;5874:6;5871:1;5868:13;5860:113;;;5950:11;;;5944:18;5931:11;;;5924:39;5896:2;5889:10;5860:113;;;-1:-1:-1;;6007:1:260;5989:16;;5982:27;5765:250::o;6020:270::-;6061:3;6099:5;6093:12;6126:6;6121:3;6114:19;6142:76;6211:6;6204:4;6199:3;6195:14;6188:4;6181:5;6177:16;6142:76;:::i;:::-;6272:2;6251:15;-1:-1:-1;;6247:29:260;6238:39;;;;6279:4;6234:50;;6020:270;-1:-1:-1;;6020:270:260:o;6295:961::-;-1:-1:-1;;;;;6737:15:260;;;6719:34;;6784:2;6769:18;;6762:34;;;6827:2;6812:18;;6805:34;;;6887:8;6875:21;;6870:2;6855:18;;6848:49;6916:14;6967:15;;;6961:3;6946:19;;6939:44;7020:15;;6699:3;6999:19;;6992:44;7073:15;;7067:3;7052:19;;7045:44;7133:14;;7126:22;7120:3;7105:19;;7098:51;6669:3;7180;7165:19;;7158:31;;;6640:4;;7206:44;7231:18;;;7223:6;7206:44;:::i;:::-;7198:52;6295:961;-1:-1:-1;;;;;;;;;;;;6295:961:260:o;7261:890::-;7372:6;7380;7388;7396;7404;7412;7420;7473:3;7461:9;7452:7;7448:23;7444:33;7441:53;;;7490:1;7487;7480:12;7441:53;7513:28;7531:9;7513:28;:::i;:::-;7503:38;;7591:2;7580:9;7576:18;7563:32;7604:31;7629:5;7604:31;:::i;:::-;7654:5;-1:-1:-1;7706:2:260;7691:18;;7678:32;;-1:-1:-1;7757:2:260;7742:18;;7729:32;;-1:-1:-1;7813:3:260;7798:19;;7785:33;7827:30;7785:33;7827:30;:::i;:::-;7876:7;-1:-1:-1;7934:3:260;7919:19;;7906:33;-1:-1:-1;;;;;7951:30:260;;7948:50;;;7994:1;7991;7984:12;7948:50;8033:58;8083:7;8074:6;8063:9;8059:22;8033:58;:::i;:::-;7261:890;;;;-1:-1:-1;7261:890:260;;-1:-1:-1;7261:890:260;;;;8007:84;;-1:-1:-1;;;7261:890:260:o;8156:380::-;8235:1;8231:12;;;;8278;;;8299:61;;8353:4;8345:6;8341:17;8331:27;;8299:61;8406:2;8398:6;8395:14;8375:18;8372:38;8369:161;;8452:10;8447:3;8443:20;8440:1;8433:31;8487:4;8484:1;8477:15;8515:4;8512:1;8505:15;8369:161;;8156:380;;;:::o;8541:127::-;8602:10;8597:3;8593:20;8590:1;8583:31;8633:4;8630:1;8623:15;8657:4;8654:1;8647:15;8673:253;8745:2;8739:9;8787:4;8775:17;;-1:-1:-1;;;;;8807:34:260;;8843:22;;;8804:62;8801:88;;;8869:18;;:::i;:::-;8905:2;8898:22;8673:253;:::o;8931:275::-;9002:2;8996:9;9067:2;9048:13;;-1:-1:-1;;9044:27:260;9032:40;;-1:-1:-1;;;;;9087:34:260;;9123:22;;;9084:62;9081:88;;;9149:18;;:::i;:::-;9185:2;9178:22;8931:275;;-1:-1:-1;8931:275:260:o;9211:119::-;9296:8;9289:5;9285:20;9278:5;9275:31;9265:59;;9320:1;9317;9310:12;9335:167;9402:20;;9462:14;9451:26;;9441:37;;9431:65;;9492:1;9489;9482:12;9507:186;9555:4;-1:-1:-1;;;;;9580:6:260;9577:30;9574:56;;;9610:18;;:::i;:::-;-1:-1:-1;9676:2:260;9655:15;-1:-1:-1;;9651:29:260;9682:4;9647:40;;9507:186::o;9698:1377::-;9790:6;9821:2;9864;9852:9;9843:7;9839:23;9835:32;9832:52;;;9880:1;9877;9870:12;9832:52;9920:9;9907:23;-1:-1:-1;;;;;9990:2:260;9982:6;9979:14;9976:34;;;10006:1;10003;9996:12;9976:34;10029:22;;;;10085:4;10067:16;;;10063:27;10060:47;;;10103:1;10100;10093:12;10060:47;10129:22;;:::i;:::-;10188:2;10175:16;10200:32;10224:7;10200:32;:::i;:::-;10241:22;;10295:30;10313:11;;;10295:30;:::i;:::-;10290:2;10283:5;10279:14;10272:54;10358:30;10384:2;10380;10376:11;10358:30;:::i;:::-;10353:2;10346:5;10342:14;10335:54;10434:2;10430;10426:11;10413:25;10447:33;10472:7;10447:33;:::i;:::-;10507:2;10496:14;;10489:31;10566:3;10558:12;;10545:26;10583:16;;;10580:36;;;10612:1;10609;10602:12;10580:36;10643:8;10639:2;10635:17;10625:27;;;10690:7;10683:4;10679:2;10675:13;10671:27;10661:55;;10712:1;10709;10702:12;10661:55;10748:2;10735:16;10725:26;;10773:48;10789:31;10817:2;10789:31;:::i;:::-;10773:48;:::i;:::-;10844:2;10837:5;10830:17;10884:7;10879:2;10874;10870;10866:11;10862:20;10859:33;10856:53;;;10905:1;10902;10895:12;10856:53;10960:2;10955;10951;10947:11;10942:2;10935:5;10931:14;10918:45;11004:1;10999:2;10994;10987:5;10983:14;10979:23;10972:34;11039:5;11033:3;11026:5;11022:15;11015:30;;11064:5;11054:15;;;;;;9698:1377;;;;:::o;11461:314::-;-1:-1:-1;;;;;11636:32:260;;11618:51;;11705:2;11700;11685:18;;11678:30;;;-1:-1:-1;;11725:44:260;;11750:18;;11742:6;11725:44;:::i;11780:245::-;11847:6;11900:2;11888:9;11879:7;11875:23;11871:32;11868:52;;;11916:1;11913;11906:12;11868:52;11948:9;11942:16;11967:28;11989:5;11967:28;:::i;12155:544::-;12256:2;12251:3;12248:11;12245:448;;;12292:1;12317:5;12313:2;12306:17;12362:4;12358:2;12348:19;12432:2;12420:10;12416:19;12413:1;12409:27;12403:4;12399:38;12468:4;12456:10;12453:20;12450:47;;;-1:-1:-1;12491:4:260;12450:47;12546:2;12541:3;12537:12;12534:1;12530:20;12524:4;12520:31;12510:41;;12601:82;12619:2;12612:5;12609:13;12601:82;;;12664:17;;;12645:1;12634:13;12601:82;;;12605:3;;;12245:448;12155:544;;;:::o;12875:1348::-;12999:3;12993:10;-1:-1:-1;;;;;13018:6:260;13015:30;13012:56;;;13048:18;;:::i;:::-;13077:96;13166:6;13126:38;13158:4;13152:11;13126:38;:::i;:::-;13120:4;13077:96;:::i;:::-;13228:4;;13292:2;13281:14;;13309:1;13304:662;;;;14010:1;14027:6;14024:89;;;-1:-1:-1;14079:19:260;;;14073:26;14024:89;-1:-1:-1;;12832:1:260;12828:11;;;12824:24;12820:29;12810:40;12856:1;12852:11;;;12807:57;14126:81;;13274:943;;13304:662;12102:1;12095:14;;;12139:4;12126:18;;-1:-1:-1;;13340:20:260;;;13457:236;13471:7;13468:1;13465:14;13457:236;;;13560:19;;;13554:26;13539:42;;13652:27;;;;13620:1;13608:14;;;;13487:19;;13457:236;;;13461:3;13721:6;13712:7;13709:19;13706:201;;;13782:19;;;13776:26;-1:-1:-1;;13865:1:260;13861:14;;;13877:3;13857:24;13853:37;13849:42;13834:58;13819:74;;13706:201;-1:-1:-1;;;;;13953:1:260;13937:14;;;13933:22;13920:36;;-1:-1:-1;12875:1348:260:o;14441:205::-;14541:13;;-1:-1:-1;;;;;;14583:38:260;;14573:49;;14563:77;;14636:1;14633;14626:12;14651:1661;14876:6;14884;14892;14900;14908;14916;14924;14932;14940;14993:3;14981:9;14972:7;14968:23;14964:33;14961:53;;;15010:1;15007;15000:12;14961:53;15042:9;15036:16;15061:31;15086:5;15061:31;:::i;:::-;15161:2;15146:18;;15140:25;15111:5;;-1:-1:-1;15174:33:260;15140:25;15174:33;:::i;:::-;15278:2;15263:18;;15257:25;15226:7;;-1:-1:-1;15291:33:260;15257:25;15291:33;:::i;:::-;15343:7;-1:-1:-1;15369:70:260;15435:2;15420:18;;15369:70;:::i;:::-;15359:80;;15479:3;15468:9;15464:19;15458:26;15448:36;;15529:3;15518:9;15514:19;15508:26;15543:33;15568:7;15543:33;:::i;:::-;15595:7;-1:-1:-1;15621:71:260;15687:3;15672:19;;15621:71;:::i;:::-;15611:81;;15737:3;15726:9;15722:19;15716:26;15751:30;15773:7;15751:30;:::i;:::-;15851:3;15836:19;;15830:26;15800:7;;-1:-1:-1;;;;;;15868:30:260;;15865:50;;;15911:1;15908;15901:12;15865:50;15934:22;;15987:4;15979:13;;15975:27;-1:-1:-1;15965:55:260;;16016:1;16013;16006:12;15965:55;16045:2;16039:9;16070:48;16086:31;16114:2;16086:31;:::i;16070:48::-;16141:2;16134:5;16127:17;16181:7;16176:2;16171;16167;16163:11;16159:20;16156:33;16153:53;;;16202:1;16199;16192:12;16153:53;16215:67;16279:2;16274;16267:5;16263:14;16258:2;16254;16250:11;16215:67;:::i;:::-;16301:5;16291:15;;;;;14651:1661;;;;;;;;;;;:::o;16317:127::-;16378:10;16373:3;16369:20;16366:1;16359:31;16409:4;16406:1;16399:15;16433:4;16430:1;16423:15;16449:125;16514:9;;;16535:10;;;16532:36;;;16548:18;;:::i;16579:168::-;16652:9;;;16683;;16700:15;;;16694:22;;16680:37;16670:71;;16721:18;;:::i;16752:127::-;16813:10;16808:3;16804:20;16801:1;16794:31;16844:4;16841:1;16834:15;16868:4;16865:1;16858:15;16884:120;16924:1;16950;16940:35;;16955:18;;:::i;:::-;-1:-1:-1;16989:9:260;;16884:120::o;17009:128::-;17076:9;;;17097:11;;;17094:37;;;17111:18;;:::i;17142:184::-;17212:6;17265:2;17253:9;17244:7;17240:23;17236:32;17233:52;;;17281:1;17278;17271:12;17233:52;-1:-1:-1;17304:16:260;;17142:184;-1:-1:-1;17142:184:260:o;18062:570::-;-1:-1:-1;;;;;18353:15:260;;;18335:34;;18405:15;;18400:2;18385:18;;18378:43;18315:3;18452:2;18437:18;;18430:31;;;18278:4;;18478:45;;18503:19;;18495:6;18478:45;:::i;:::-;18554:2;18539:18;;18532:34;;;;-1:-1:-1;18610:14:260;;18603:22;18597:3;18582:19;;;18575:51;18470:53;18062:570;-1:-1:-1;;;18062:570:260:o;18637:373::-;18725:6;18733;18741;18794:2;18782:9;18773:7;18769:23;18765:32;18762:52;;;18810:1;18807;18800:12;18762:52;18839:9;18833:16;18823:26;;18892:2;18881:9;18877:18;18871:25;18905:31;18930:5;18905:31;:::i;:::-;18955:5;18945:15;;;19000:2;18989:9;18985:18;18979:25;18969:35;;18637:373;;;;;:::o;19254:160::-;19331:13;;19384:4;19373:16;;19363:27;;19353:55;;19404:1;19401;19394:12;19419:326;19493:6;19501;19554:2;19542:9;19533:7;19529:23;19525:32;19522:52;;;19570:1;19567;19560:12;19522:52;19593:38;19621:9;19593:38;:::i;:::-;19583:48;;19674:2;19663:9;19659:18;19653:25;19687:28;19709:5;19687:28;:::i;:::-;19734:5;19724:15;;;19419:326;;;;;:::o;19993:267::-;20079:6;20132:2;20120:9;20111:7;20107:23;20103:32;20100:52;;;20148:1;20145;20138:12;20100:52;20180:9;20174:16;20199:31;20224:5;20199:31;:::i;20632:249::-;20701:6;20754:2;20742:9;20733:7;20729:23;20725:32;20722:52;;;20770:1;20767;20760:12;20722:52;20802:9;20796:16;20821:30;20845:5;20821:30;:::i;20886:164::-;20963:13;;21016:1;21005:20;;;20995:31;;20985:59;;21040:1;21037;21030:12;21055:204;21123:6;21176:2;21164:9;21155:7;21151:23;21147:32;21144:52;;;21192:1;21189;21182:12;21144:52;21215:38;21243:9;21215:38;:::i;21264:388::-;-1:-1:-1;;;;;21520:15:260;;;21502:34;;21572:15;;;;21567:2;21552:18;;21545:43;21636:8;21624:21;;;21619:2;21604:18;;21597:49;21452:2;21437:18;;21264:388::o;22262:516::-;22365:6;22418:2;22406:9;22397:7;22393:23;22389:32;22386:52;;;22434:1;22431;22424:12;22386:52;22467:2;22461:9;22509:2;22501:6;22497:15;22578:6;22566:10;22563:22;-1:-1:-1;;;;;22530:10:260;22527:34;22524:62;22521:88;;;22589:18;;:::i;:::-;22625:2;22618:22;22662:16;;22687:30;22662:16;22687:30;:::i;:::-;22726:21;;22733:6;22262:516;-1:-1:-1;;;22262:516:260:o;22783:275::-;22821:1;22862;22859;22848:16;22898:1;22895;22884:16;22919:3;22909:37;;22926:18;;:::i;:::-;-1:-1:-1;;22962:21:260;;-1:-1:-1;;22985:15:260;;22958:43;22955:69;;;23004:18;;:::i;:::-;23038:14;;;22783:275;-1:-1:-1;;;22783:275:260:o;23063:237::-;23101:7;23178:1;23175;23164:16;23160:1;23157;23146:16;23142:39;23215:11;23212:1;23201:26;23190:37;;23258:11;23249:7;23246:24;23236:58;;23274:18;;:::i;:::-;23236:58;23063:237;;;;:::o;23305:184::-;23339:3;23386:5;23383:1;23372:20;23420:7;23416:12;23407:7;23404:25;23401:51;;23432:18;;:::i;:::-;23472:1;23468:15;;23305:184;-1:-1:-1;;23305:184:260:o;24306:306::-;24394:6;24402;24410;24463:2;24451:9;24442:7;24438:23;24434:32;24431:52;;;24479:1;24476;24469:12;24431:52;24508:9;24502:16;24492:26;;24558:2;24547:9;24543:18;24537:25;24527:35;;24602:2;24591:9;24587:18;24581:25;24571:35;;24306:306;;;;;:::o;25246:427::-;25334:6;25342;25350;25403:2;25391:9;25382:7;25378:23;25374:32;25371:52;;;25419:1;25416;25409:12;25371:52;25448:9;25442:16;25432:26;;25498:2;25487:9;25483:18;25477:25;25467:35;;25545:2;25534:9;25530:18;25524:25;25589:34;25582:5;25578:46;25571:5;25568:57;25558:85;;25639:1;25636;25629:12;25558:85;25662:5;25652:15;;;25246:427;;;;;:::o;26022:165::-;26060:1;26094:4;26091:1;26087:12;26118:3;26108:37;;26125:18;;:::i;:::-;26177:3;26170:4;26167:1;26163:12;26159:22;26154:27;;;26022:165;;;;:::o;26192:148::-;26280:4;26259:12;;;26273;;;26255:31;;26298:13;;26295:39;;;26314:18;;:::i;26345:157::-;26375:1;26409:4;26406:1;26402:12;26433:3;26423:37;;26440:18;;:::i;:::-;26492:3;26485:4;26482:1;26478:12;26474:22;26469:27;;;26345:157;;;;:::o;26924:367::-;27041:12;;27089:4;27078:16;;27072:23;-1:-1:-1;;;;;;27158:11:260;;;;27041:12;27072:23;27192:1;27181:13;;27178:107;;;27272:2;27266;27256:6;27253:1;27249:14;27246:1;27242:22;27238:31;27234:2;27230:40;27226:49;27217:58;;27178:107;;;;26924:367;;;:::o;27840:163::-;27918:13;;27971:6;27960:18;;27950:29;;27940:57;;27993:1;27990;27983:12;28008:794;28122:6;28130;28138;28146;28154;28162;28170;28223:3;28211:9;28202:7;28198:23;28194:33;28191:53;;;28240:1;28237;28230:12;28191:53;28272:9;28266:16;28291:31;28316:5;28291:31;:::i;:::-;28341:5;-1:-1:-1;28365:47:260;28408:2;28393:18;;28365:47;:::i;:::-;28355:57;;28431:48;28475:2;28464:9;28460:18;28431:48;:::i;:::-;28421:58;;28498:48;28542:2;28531:9;28527:18;28498:48;:::i;:::-;28488:58;;28565:49;28609:3;28598:9;28594:19;28565:49;:::i;:::-;28555:59;;28633:48;28676:3;28665:9;28661:19;28633:48;:::i;:::-;28623:58;;28726:3;28715:9;28711:19;28705:26;28740:30;28762:7;28740:30;:::i;:::-;28789:7;28779:17;;;28008:794;;;;;;;;;;:::o;29188:173::-;29256:8;29297:10;;;29285;;;29281:27;;29320:12;;;29317:38;;;29335:18;;:::i",
    "linkReferences": {},
    "immutableReferences": {
      "77364": [
        { "start": 390, "length": 32 },
        { "start": 629, "length": 32 },
        { "start": 809, "length": 32 },
        { "start": 1014, "length": 32 },
        { "start": 1205, "length": 32 },
        { "start": 1371, "length": 32 },
        { "start": 1792, "length": 32 },
        { "start": 3156, "length": 32 },
        { "start": 4464, "length": 32 }
      ]
    }
  },
  "methodIdentifiers": {
    "AUCTION_HOUSE()": "4226b1bf",
    "LINEAR_VESTING_KEYCODE()": "95fd2ef2",
    "MAX_PERCENT()": "1036bbe2",
    "gUniFactory()": "258f8931",
    "lotConfiguration(uint96)": "d5281219",
    "lotIdRegistered(uint96)": "1cae9eef",
    "onBid(uint96,uint64,address,uint256,bytes)": "b898895e",
    "onCancel(uint96,uint256,bool,bytes)": "a5658c86",
    "onCreate(uint96,address,address,address,uint256,bool,bytes)": "66e74167",
    "onCurate(uint96,uint256,bool,bytes)": "09b9601c",
    "onPurchase(uint96,address,uint256,uint256,bool,bytes)": "fc439982",
    "onSettle(uint96,uint256,uint256,bytes)": "a5b13f69",
    "uniV3Factory()": "705e474b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"auctionHouse_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"uniV3Factory_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"gUniFactory_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"required_\",\"type\":\"uint256\"}],\"name\":\"Callback_InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Callback_InvalidParams\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Callback_LinearVestingModuleNotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Callback_NotAuthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Callback_NotImplemented\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Callback_Params_InvalidAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Callback_Params_InvalidVestingParams\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"actual_\",\"type\":\"uint24\"},{\"internalType\":\"uint24\",\"name\":\"min_\",\"type\":\"uint24\"},{\"internalType\":\"uint24\",\"name\":\"max_\",\"type\":\"uint24\"}],\"name\":\"Callback_Params_PercentOutOfBounds\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Callback_Params_PoolExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Callback_Params_PoolFeeNotEnabled\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountActual_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountMin_\",\"type\":\"uint256\"}],\"name\":\"Callback_Slippage\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callbacks\",\"type\":\"address\"}],\"name\":\"CallbacksAddressNotValid\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AUCTION_HOUSE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LINEAR_VESTING_KEYCODE\",\"outputs\":[{\"internalType\":\"bytes5\",\"name\":\"\",\"type\":\"bytes5\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_PERCENT\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gUniFactory\",\"outputs\":[{\"internalType\":\"contract IGUniFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId\",\"type\":\"uint96\"}],\"name\":\"lotConfiguration\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lotCapacity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lotCuratorPayout\",\"type\":\"uint256\"},{\"internalType\":\"uint24\",\"name\":\"proceedsUtilisationPercent\",\"type\":\"uint24\"},{\"internalType\":\"uint48\",\"name\":\"vestingStart\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"vestingExpiry\",\"type\":\"uint48\"},{\"internalType\":\"contract LinearVesting\",\"name\":\"linearVestingModule\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"implParams\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"name\":\"lotIdRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId_\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"bidId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"buyer_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"callbackData_\",\"type\":\"bytes\"}],\"name\":\"onBid\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId_\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"refund_\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"prefunded_\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"callbackData_\",\"type\":\"bytes\"}],\"name\":\"onCancel\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId_\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"seller_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"baseToken_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"quoteToken_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"capacity_\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"prefund_\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"callbackData_\",\"type\":\"bytes\"}],\"name\":\"onCreate\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId_\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"curatorFee_\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"prefund_\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"callbackData_\",\"type\":\"bytes\"}],\"name\":\"onCurate\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId_\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"buyer_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"payout_\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"prefunded_\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"callbackData_\",\"type\":\"bytes\"}],\"name\":\"onPurchase\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId_\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"proceeds_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"refund_\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"callbackData_\",\"type\":\"bytes\"}],\"name\":\"onSettle\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniV3Factory\",\"outputs\":[{\"internalType\":\"contract IUniswapV3Factory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"As a general rule, this callback contract does not retain balances of tokens between calls.             Transfers are performed within the same function that requires the balance.\",\"errors\":{\"CallbacksAddressNotValid(address)\":[{\"params\":{\"callbacks\":\"The address of the callbacks contract\"}}]},\"kind\":\"dev\",\"methods\":{\"onBid(uint96,uint64,address,uint256,bytes)\":{\"params\":{\"amount\":\"The amount of quote tokens bid\",\"bidId\":\"The ID of the bid\",\"buyer\":\"The address of the buyer\",\"callbackData\":\"Custom data provided by the buyer\",\"lotId\":\"The ID of the lot\"}},\"onCancel(uint96,uint256,bool,bytes)\":{\"details\":\"If the Callback is configured to receive tokens and the auction was prefunded, then the refund will be sent prior to the call.\",\"params\":{\"callbackData\":\"Custom data provided by the seller\",\"lotId\":\"The ID of the lot\",\"preFunded\":\"If true, the calling contract will have sent base tokens prior to the call\",\"refund\":\"The refund amount\"}},\"onCreate(uint96,address,address,address,uint256,bool,bytes)\":{\"details\":\"The implementing function should:         - Register the lot ID on the Callback contract         - Validate that the seller is allowed to use the Callback contract\",\"params\":{\"baseToken\":\"The address of the base token\",\"callbackData\":\"Custom data provided by the seller\",\"capacity\":\"The capacity of the auction\",\"lotId\":\"The ID of the lot\",\"preFund\":\"If true, the calling contract expects base tokens to be sent to it\",\"quoteToken\":\"The address of the quote token\",\"seller\":\"The address of the seller\"}},\"onCurate(uint96,uint256,bool,bytes)\":{\"params\":{\"callbackData\":\"Custom data provided by the seller\",\"curatorFee\":\"The curator fee payout\",\"lotId\":\"The ID of the lot\",\"preFund\":\"If true, the calling contract expects base tokens to be sent to it\"}},\"onPurchase(uint96,address,uint256,uint256,bool,bytes)\":{\"details\":\"If the Callback is configured to receive quote tokens, then the user purchase amount of quote tokens will be sent prior to this call.         If the Callback is configured to send base tokens, then the AuctionHouse will expect the payout of base tokens to be sent back.\",\"params\":{\"amount\":\"The amount of quote tokens purchased\",\"buyer\":\"The address of the buyer\",\"callbackData\":\"Custom data provided by the buyer\",\"lotId\":\"The ID of the lot\",\"payout\":\"The amount of base tokens to receive\",\"preFunded\":\"If true, the calling contract has already been provided the base tokens. Otherwise, they must be provided.\"}}},\"stateVariables\":{\"gUniFactory\":{\"details\":\"This contract is used to create the ERC20 LP tokens\"},\"uniV3Factory\":{\"details\":\"This contract is used to create Uniswap V3 pools\"}},\"title\":\"UniswapV3DirectToLiquidity\",\"version\":1},\"userdoc\":{\"errors\":{\"CallbacksAddressNotValid(address)\":[{\"notice\":\"Thrown if the address will not lead to the specified callbacks being called\"}]},\"kind\":\"user\",\"methods\":{\"AUCTION_HOUSE()\":{\"notice\":\"The AuctionHouse that this callback is linked to\"},\"gUniFactory()\":{\"notice\":\"The G-UNI Factory contract\"},\"lotConfiguration(uint96)\":{\"notice\":\"Maps the lot id to the DTL configuration\"},\"lotIdRegistered(uint96)\":{\"notice\":\"Records lot ids against their registration status\"},\"onBid(uint96,uint64,address,uint256,bytes)\":{\"notice\":\"Called when a buyer bids on a batch auction. Reverts if validation fails.\"},\"onCancel(uint96,uint256,bool,bytes)\":{\"notice\":\"Called when an auction is cancelled.\"},\"onCreate(uint96,address,address,address,uint256,bool,bytes)\":{\"notice\":\"Called when an auction is created. Reverts if validation fails.\"},\"onCurate(uint96,uint256,bool,bytes)\":{\"notice\":\"Called when curate is called for an auction.\"},\"onPurchase(uint96,address,uint256,uint256,bool,bytes)\":{\"notice\":\"Called when a buyer purchases from an atomic auction. Reverts if validation fails.\"},\"uniV3Factory()\":{\"notice\":\"The Uniswap V3 Factory contract\"}},\"notice\":\"This Callback contract deposits the proceeds from a batch auction into a Uniswap V3 pool             in order to create liquidity immediately.             The Uniswap V3 position is tokenised as an ERC-20 using [G-UNI](https://github.com/gelatodigital/g-uni-v1-core).             The LP tokens are transferred to `DTLConfiguration.recipient`, or can optionally vest to the auction seller.             An important risk to consider: if the auction's base token is available and liquid, a third-party             could front-run the auction by creating the pool before the auction ends. This would allow them to             manipulate the price of the pool and potentially profit from the eventual deposit of the auction proceeds.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/callbacks/liquidity/UniswapV3DTL.sol\":\"UniswapV3DirectToLiquidity\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@prb/test/=lib/prb-math/node_modules/@prb/test/\",\":@uniswap/v3-core/=lib/uniswap-v3-core/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":g-uni-v1-core/=lib/g-uni-v1-core/contracts/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":prb-math/=lib/prb-math/src/\",\":solady/=lib/solady/src/\",\":solmate/=lib/solmate/src/\",\":uniswap-v2-core/=lib/uniswap-v2-core/contracts/\",\":uniswap-v2-periphery/=lib/uniswap-v2-periphery/contracts/\",\":uniswap-v3-core/=lib/uniswap-v3-core/contracts/\",\":uniswap-v3-periphery/=lib/uniswap-v3-periphery/contracts/\"]},\"sources\":{\"lib/g-uni-v1-core/contracts/GUniPool.sol\":{\"keccak256\":\"0xdd382818c81f34c434bb3d4235ac9ff39034cb68e1b87244837d9250878d9fa0\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://21b8dcf0120ca53749885b96d7fc6938ca7c3e9bf34012665dce8899def9d05a\",\"dweb:/ipfs/Qmctw9ZNHVJ69E3UXN5yWu6jZ8xqV3hbVNTfKkUyk2PJaa\"]},\"lib/g-uni-v1-core/contracts/abstract/GUniPoolStorage.sol\":{\"keccak256\":\"0xd1ad805a13c7cd73554b1e3cc3735f3f369d759f8e0b9188977b85295456d033\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://96990def362663e45fd7b10c3522367d914c7f202cab4c14160541b29461b80e\",\"dweb:/ipfs/QmYe4exEyZZgZSM216acqZ3WQ4YVzFRDjYxGTq8nLJnU7n\"]},\"lib/g-uni-v1-core/contracts/abstract/Gelatofied.sol\":{\"keccak256\":\"0x264bc07e6e1b80c454c311ecf4b56afe245ddde31151ed9bcc4cb9ad25bec46a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://bf70023b23e6ce2e8e4938289d786aa785d31692e75d2f37275876d257047199\",\"dweb:/ipfs/Qmbe8NgoCo1xSM6WnLsDEwZCJQsNWzj38VJN42QtZE4vP7\"]},\"lib/g-uni-v1-core/contracts/abstract/OwnableUninitialized.sol\":{\"keccak256\":\"0xb6016d5611f38fbd516a84ea2e56794cb76a8d61c40f6716d5f0133f195759bd\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://4a233fa2f3f9c7bab6cec729fce90b2f631a465c19f4d837e298a062e39e71fd\",\"dweb:/ipfs/QmcDx1K1KD6Z4mwJd4ZqyCNRTA7uNEVS6XmatPejRGAoGB\"]},\"lib/g-uni-v1-core/contracts/interfaces/IGUniFactory.sol\":{\"keccak256\":\"0xe06f79e9b1e6351fc4f40c9f25630f0fbfabae9d2ae2bb642ef1f03d4c2195c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dda38cbeeac80562375128b96ae5dc561fec0f283ad8c36beca324ff3ee82ad6\",\"dweb:/ipfs/QmNT74cDB8Ae63ZVAhZCfasa1EwFbdUBqW8v72sc9ZsoWL\"]},\"lib/g-uni-v1-core/contracts/vendor/uniswap/FullMath.sol\":{\"keccak256\":\"0x3fa0efa3eea2a84bd6ab7e55badd61f97069a6c50780059b036c810427a9740c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f79925215b099a9983292b4dc1e25b8d7536e345111517a13c457e6b7755660f\",\"dweb:/ipfs/QmP7eL8DWX1g6tXwC6ACVLDRekkKMVSmYkt9K5VUz6zif3\"]},\"lib/g-uni-v1-core/contracts/vendor/uniswap/LiquidityAmounts.sol\":{\"keccak256\":\"0x6205f6409d42fc9565530d2a69819bf8c4e4c66b7a4c61d0827e81c084df6832\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://fc97f565514ab56d0d3a6a22570570aecde78b7570d10de9d2406495b0a6566f\",\"dweb:/ipfs/Qmc23ZddU9hJrhuH1PTNN1JPDQMwzvcWaJ5vqjdGxvgb13\"]},\"lib/g-uni-v1-core/contracts/vendor/uniswap/TickMath.sol\":{\"keccak256\":\"0x589b6104fd07d2e56e5b52edcfa53e6e47e2c38cace38025c16278ca73413f2d\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://784a2c4779ac829df34665658d944dd5d2018836f04fa8ff88a702011d26f468\",\"dweb:/ipfs/QmXBT2k1fFkfLwvNEBNAsAKNBajjJ9jL26QdczkUyVhaYt\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0xe59929d4b850143b589b3761b0a8473a603368ba65601549d2b6f950c9ea7150\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://359c6c376e9ffe70a59cef1f40517c0327a82ffd8b17f53ae9a8406134c50a9d\",\"dweb:/ipfs/QmSVW97aNPEnVdvy3mLjWwx457HiWq5ETHou6M4eKPbjcd\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xce3115e360553d8561bee2acfe759efd03318249436f6bafd27311f721ecb823\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c642a5875ccbb0962b9742c064ea247e324d3742e44ed8f7917b947e66ede52c\",\"dweb:/ipfs/QmSwyvJc2oiJiLYrFCMpafqLis38ykM5WKxNrbf5waoNC2\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x8d4a0f2b5b760b5e2c19ed3c108d83897a4dfd5bfed97a93867918df19191e5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7787f0e6d168740118ca2fc09a35e33644656f6998b124ab09a5fe790d5388f7\",\"dweb:/ipfs/QmeRPExxvGzci1QVdGpvoRWynS6xyczVXYNVqHLoMQaaMU\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x5642ae1d6b33c5c0b71a8412c6c64cbcf2468b84a002bee3e33cdb5644d25cdb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07ba474854eacf022fca2ab63af2b09653f476a9ef2d144ea3d022a0c0b92726\",\"dweb:/ipfs/QmVNfrArMejFSrPMktAtDte64FJ2fGPQHqgSXDz2SH6dse\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x3d094287dec2bd3a7edf6cdd5d18d158d52e9533ee38e36b2780934039ca166e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8ecb81826af9d3dd337d0dad1952d7937c6c92b1a516dd3d52d424fc624e9cd\",\"dweb:/ipfs/QmWPuEuGCWMa3DsDkcApXYXcsWVVqyRKLCLBufETFEg6YK\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/Initializable.sol\":{\"keccak256\":\"0xab644b65c962df9e77ec01a5abbb06a09c2a97b06a2ac838b5e0091ce05eb30d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a694ed0de99b61cfc07ef3122fe3f0b43d0615e50d648d50458dafde5dfcff60\",\"dweb:/ipfs/QmcHXoieL37gTfu49wfrXEQVjswC2RifYmCAPe36HL9jr4\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x446f5eba28390de7608b93345376c1144758ab48783c26df8aa14b6f2a7987bc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://701c9ebd54d50d7508efe7eb253cd50d4fc9fdbd161db886ae889d0e3487242e\",\"dweb:/ipfs/QmYF5uh258PwhgxYMZULiyG8b8RN4SBAbU7igQGyfe9QnB\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x3646d6b4bee92d2bcc731e096d0b96c73857809d1b103fee122b7c690a3f87eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1566327145da74162e651243403b38a1f056c557c13b7593080b7e681ba4a38e\",\"dweb:/ipfs/QmfLBe1tbAbSpqeQ5C7L3NSgjo53DRVqncgoESBHdw9gLs\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x5747d97de5f7bbe07a8a817855d0bccecb48d6a403d1a62d46f8c9b9f809b43d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dfb322bcf9879804de2a40cfc6ed62d1dfa714f7b71629375f4c1ebd7ba39dc\",\"dweb:/ipfs/QmTdn466mDBnLmoQQm7uCVEiidoJSW6pzRP81ZwmPprUpN\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xb8d40721965efd93b5369d55083181226d3c7e1be4a968c04de35d44ba44f29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5c4b0089788aa7112cce88602212c3895999f464e00d1c40d7f27ac9288798b\",\"dweb:/ipfs/Qmd69EuGeoCYPfPkGA4hayH4s2upmAe3XaoDf4ggYNEoZ4\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x11ef3515e1e2492b749821cd2f73c323f9ec5d58bc64c3ba431463052a439aa6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://567d1e3d1cee6dac7ab0d5295027ad8b667132a4282f581498d32c039975d6b5\",\"dweb:/ipfs/QmcbHPL718zArx4DEK94H6e72Z5Z78c9L5n7QC7TWLqb9i\"]},\"lib/solmate/src/auth/Owned.sol\":{\"keccak256\":\"0xfedb27d14c508342c33eb067c9a02eabcdb0f9dcf93b04ded1001f580d12d0ea\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://1ff52bbee698b9cf9e4574615e6550be0887ccf355f6571e23d6f25b332e79b4\",\"dweb:/ipfs/QmVorA2apojVRStzS7h8aFccR3Uv32G6HVtBtFHZrE7YXx\"]},\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35\",\"dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97\"]},\"lib/solmate/src/tokens/ERC6909.sol\":{\"keccak256\":\"0x767ed60e11d739ed7eb9e10467eb0e0573293238b7a2a56f96b23f145297f1d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5bc9f48d84ecc46f2627b2a91948f8060f78d2f548a6c5ca1f282f8778e01e0\",\"dweb:/ipfs/QmeATtgjaDVhxcCs6auJrC8nqCwUqntTi3WygHVRa9xg6M\"]},\"lib/solmate/src/utils/FixedPointMathLib.sol\":{\"keccak256\":\"0x1b62af9baf5b8e991ed7531bc87f45550ba9d61e8dbff5caf237ccaf3a3fd843\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://b7b38b977c5305b18ceefbeed4c9ceaaaefa419b520de62de6604ea661f8c0a9\",\"dweb:/ipfs/QmecMRzgfMyDVa2pvBqMMDLYBappaj7Aa3qcMoQYEQrhWi\"]},\"lib/solmate/src/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xb282dd78aa7375d6b200b9a5d8dd214b2e5df1004f8217a4b4c2b07f0c5bfd01\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://5fca62eb8d3dbd2b3b7e4bb051f6da16f4d0ff9cee61c39cebb80f031f6a8800\",\"dweb:/ipfs/QmbrsXPK91iBFwHKwJs2HLRud2KzMoBDRiWYMUtyV5H57j\"]},\"lib/solmate/src/utils/SafeTransferLib.sol\":{\"keccak256\":\"0x6ab948013c2c7ca6351e593600425b0ec6df9035320280c678e735bce16e996b\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://2ab977d0eeb2bf458f9798250215c646d2f3b1f90b5a7e2b506fdf3335c0f060\",\"dweb:/ipfs/QmYPRoPhNtBAmCSq7imN1scMVpKNQvMTpoqab3tXUx5Tnv\"]},\"lib/uniswap-v3-core/contracts/interfaces/IUniswapV3Factory.sol\":{\"keccak256\":\"0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b9379ad954680c44a0bc523b314ae4c4da735f9fe1d02aa56ea5bdba6f1136f2\",\"dweb:/ipfs/QmZXdgQNXKAckrXWz9R3mc47F1fvDvr28a2ewJrwNAw71B\"]},\"lib/uniswap-v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0x4e64844c56061cd90e0a80de73534a9166704c43eed579eb83f90bc2780ce968\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://cba4fab5cebdddf644b901994a7f0f52b98885d4c56012f4dc51d52c2bf9de0e\",\"dweb:/ipfs/QmVyyrRmqXrAiapewWunRVgiPVFJHpH2hKiE1py1svMSNV\"]},\"lib/uniswap-v3-core/contracts/interfaces/callback/IUniswapV3MintCallback.sol\":{\"keccak256\":\"0x27a9725b8f831a92d16380860c3d348a0b926a7f01b34a54ea6eea78cbdbcd6a\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7c37ca742c643ca4ba6baadff72b8450c6e340a30f7fea0863dba74030a9bbc7\",\"dweb:/ipfs/QmeKBR6a7tQSX85Q7Lb2wrAWSEFqhC4tTmLo4SzcN3kFmp\"]},\"lib/uniswap-v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"lib/uniswap-v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"lib/uniswap-v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"lib/uniswap-v3-core/contracts/interfaces/pool/IUniswapV3PoolErrors.sol\":{\"keccak256\":\"0xf80abf13fb1fafc127ba4e792f240dd8ea7c8c893978cdfd8439c27fae9a037b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b04fc72a656bbf3631e9c2e67b9870a2d9d235185e833fe050e9606e6816a9aa\",\"dweb:/ipfs/QmUcz4bkEkJ9pwzFu1C3n97hBQ3st9U6qTAqCdyFwddKco\"]},\"lib/uniswap-v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"lib/uniswap-v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"lib/uniswap-v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"lib/uniswap-v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x44fa2ce1182f6c2f6bead3d1737804bf7e112252ae86e0f2e92f9b8249603f43\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://54154e8665b98d65f5dc91b256551852cb47882180b501b260657122d207c0ea\",\"dweb:/ipfs/QmcfemK1A2PXYrWB5SBFGERpMCderbFRb8BtTzQDj1sUBp\"]},\"lib/uniswap-v3-core/contracts/libraries/FixedPoint96.sol\":{\"keccak256\":\"0x0ba8a9b95a956a4050749c0158e928398c447c91469682ca8a7cc7e77a7fe032\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://186d3b528866065a5856f96d2aeec698efa99f8da913e9adf34f8cc296cc993d\",\"dweb:/ipfs/QmUAiMvtAQp8c9dy57bqJYzG7hkb1uChiPaQmt264skoqP\"]},\"lib/uniswap-v3-core/contracts/libraries/FullMath.sol\":{\"keccak256\":\"0x7825565a4bb2a34a1dc96bbfead755785dfb0df8ef81bd934c43023689685645\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f44f4614d31e3d4864c7eb13620555253b84f6a69180f8745b7c6e246a9d125\",\"dweb:/ipfs/QmfNQUcXj3KL8h9u5PqbtEC6yRtwDbKNb48uMPjdwxsKnd\"]},\"lib/uniswap-v3-core/contracts/libraries/TickMath.sol\":{\"keccak256\":\"0x5c57de03a91cc2ec8939865dbbcb0197bb6c353b711075eefd8e0fca5e102129\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1e994c24fd891ef8a3f5dbf5eba42b34feaf05e0376a29f91322faa18054449c\",\"dweb:/ipfs/QmNdUJGUQxd1dPkMbnA5f5UNqakxRkQE5r7bTZJAuHeapS\"]},\"src/bases/AuctionHouse.sol\":{\"keccak256\":\"0xe91cd3599063507598063d482d47e5e78e935cc9e4c075e2fddda26fd0ffe7f8\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://f90b4f981c2a893684a743d1d1bef90f2fb2632751c9cefb458dac00034252c5\",\"dweb:/ipfs/QmVcLhYQcw4sqrayEbDLi6vLNbAEMvYvjxcLbt3mWXPSdR\"]},\"src/bases/FeeManager.sol\":{\"keccak256\":\"0x161a7a39297b027c1bef0cc140ddc3a26d071875baead99fac74234f291046f0\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://4f7e6f570d689bf906072e51d5a7a421c4e68c9bae9138d01c439b29037ee6de\",\"dweb:/ipfs/QmSPQeWyZZ5z7VtLHtmo6xKtmzuKM9wysaezZcAudiJ9MT\"]},\"src/callbacks/BaseCallback.sol\":{\"keccak256\":\"0x6f82cffe10322b3318104f4d6853678f7ec9807ff99bcb1068e9c578d5e46569\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62e23cd3d50c696da8b205303db8ff1f9cb8c264bedff96699f3d77bd6a513db\",\"dweb:/ipfs/QmdkXMBuRKmMjgw8VS8rU949tiFqt3gDS3pRrpKkE5FVN9\"]},\"src/callbacks/liquidity/BaseDTL.sol\":{\"keccak256\":\"0xdf61391af766185c9ebbf707171a35f6d62294e0f479b74959331e85dbcfa809\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0b7f281f20ee611d94a85506d3034df64a008efc0b989b173bbbc712aa3973c\",\"dweb:/ipfs/QmQsQ6hJ1Ke6ze21WRA2KAdPARi3bXapnLitp8NGUFo6Ag\"]},\"src/callbacks/liquidity/UniswapV3DTL.sol\":{\"keccak256\":\"0x8f2a4be776ca46b1cf4386526e3b67f09e16979f671e7ff8552c1fd1106bef34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90c4f5a487079364b033b31a6dcd2d38d94ed525e8bce2fa12a47b46dd04be00\",\"dweb:/ipfs/QmVEfYQaSjzHqQ8B2Y9TarTJd75ZzgrxjyYLVAwy4Uc3aB\"]},\"src/interfaces/IAuctionHouse.sol\":{\"keccak256\":\"0xda5415ec4c38ad889568bf453a2734f50f1ec6db1bb47c29b5193c6818ed7d3a\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://32a8c1258f722e47d3f98637386ce2d8b8f39964599adf4c1264d350f7546d44\",\"dweb:/ipfs/QmNW9iaukqZsBB9kqnSoUP384QZ8FjP7nJ5hbdpyG4dZpp\"]},\"src/interfaces/ICallback.sol\":{\"keccak256\":\"0xb08760dc184fdf388679cbaf9b854e6d7d800825c71573ae0edbba9d1980fbb8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://913a2ad19820fe53ab46dccf6a13127d189f7840ba6a522a6e5d5afdebca41da\",\"dweb:/ipfs/QmSVSQxMYCsLX58utsHo1CzkRRy3YkYGpBbqKH6FLrUhas\"]},\"src/interfaces/IFeeManager.sol\":{\"keccak256\":\"0xbb4415d241aae0d3ccc6ca3d7c2224dd267e2bdef7d76a284eabef726e828e1f\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://003dedbcb5df6fbe12157d985d26c88acd5216bed5188bc6218cf9968ce1d2b5\",\"dweb:/ipfs/QmQV4VEjMAH6PxbWqSLK2qXruVVYBuzr5XXeX7q3FR2ESk\"]},\"src/interfaces/modules/IAuction.sol\":{\"keccak256\":\"0x7039157d051a619b63ce7988be07a43b77a46043f61c5ab4e531084084bcca01\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://32e0093e843d08deada85cf2649d61aa6b37be858e4fdb32b81bfd2c0cf2c304\",\"dweb:/ipfs/QmPEt15nwpXoBzin32wAQKfSBqcvPdkcgLRxiu3eiN1VFg\"]},\"src/interfaces/modules/ICondenser.sol\":{\"keccak256\":\"0x3bb335a4426a17e2aaf48647d3c41293c3803872c93cdf4e489064936e63d9cd\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://aaf82d18618e54e414999d916114ae9a0d103c764ac4a4665bed4c9ecc979e22\",\"dweb:/ipfs/QmTAJYs4EEU6YfNBDGXf7vbExcsfne7hCXkhPXvG2oyxvH\"]},\"src/interfaces/modules/IDerivative.sol\":{\"keccak256\":\"0x7d6bf678b637167bbb2aa532be4d6cf2f195cd8953e67a4c8b4f00e56f12b9f1\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://76644794657c193454db35d54d0b7a5c03bebdc0301028bc616cd3b7ce993fb1\",\"dweb:/ipfs/QmeWPhJQbGi8rtgzeY8DjnmsAkSp5QXRzveJKiRbou9tFH\"]},\"src/interfaces/modules/derivatives/ILinearVesting.sol\":{\"keccak256\":\"0x4786c481106dd2cb1777bb935ecedc8180b62ed4048f6f6952daf9b5641520ff\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://ee03aac28046689e32b3e4905a721d6c5261efce6cd8194b13396c1f9650d6e4\",\"dweb:/ipfs/QmSqJjZqU7vLpuzKxZrpUQj9ybh5uaBFxfCZ39ewkQqwV8\"]},\"src/lib/Callbacks.sol\":{\"keccak256\":\"0xc3e2ce87dca53c20a0e013351f80549ed4821c7267963e87e39b0996ccf93836\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0fd245ee2582d6ff35a24fd40b8c6c5ccd620dc5d813dcdea583fd4c18492feb\",\"dweb:/ipfs/QmaixXjHYed69t9opaSYAkxP3eb3pigUxiJF79xQwb4vMi\"]},\"src/lib/ERC6909Metadata.sol\":{\"keccak256\":\"0x08860d5892ece3b99a9b2d99f7c1f571223e5255b9392897a579815f30cca3af\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://fe1c389fb96d772043ad643d30a2676cca164bec8079abc38da8a08ce872c0cc\",\"dweb:/ipfs/Qmf4Wpyx5rwX9eCWuaxY63tez2odgmDUYU8gU7dPhb1j5e\"]},\"src/lib/Timestamp.sol\":{\"keccak256\":\"0x8698230543af14affc4b58fb64aabed2116c1c8a41ac94309e2ec0241f0fb129\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c1a9cee00e32f1b66518e686890fa39969155a8738236bc91eb2f6151bb2b99\",\"dweb:/ipfs/QmXiq4CVSHddc9c49gdqxAD23XqXeA5eqGbCqFHsuwdjXT\"]},\"src/lib/Transfer.sol\":{\"keccak256\":\"0xd715c7cb14051b0b12feef58fdc8ffa9a99e825c51c994a630928f08a5b8f465\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://11b7da9dd9b78a13fac23e2a9a53e946e02100ff1a97adf2efdc252df2d49aff\",\"dweb:/ipfs/QmUfiSSJYaWYuhxezZNQjvtZDwtTtCcKQVDJZxHzxhyvDw\"]},\"src/lib/Uint2Str.sol\":{\"keccak256\":\"0xd5bed46248c82664844898fee717cf46ac94df59f7dc67c8db626ef666e7ce52\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://56ff374909e3030e11301a6fd3c16a893e85a0fd3ffa042ee877b850336a8b0f\",\"dweb:/ipfs/QmewNgdjU2EzjdgtRii9MENC43J9P33DpBkqznpHNFrF1W\"]},\"src/lib/clones/Clone.sol\":{\"keccak256\":\"0x56f39ad54b1d26569bd281a4da2fa0deb54bad7cf05f5bfacb488cd050c9027e\",\"license\":\"BSD\",\"urls\":[\"bzz-raw://bb9530726000c21fd93b42412cd528dfc37f0270966362a672b486bf43e41368\",\"dweb:/ipfs/QmWrL3YjSzXMBFFW7o5d22HZrxk25sdru7XowLoqukZN3M\"]},\"src/lib/clones/CloneERC20.sol\":{\"keccak256\":\"0xbd7e0d8863ad7c758ac5b8940ad1fb52bfa75d54ad5e23726db6fa2717811bc7\",\"license\":\"BSD\",\"urls\":[\"bzz-raw://3de09440ec47fc9f80297fc21beb4264858ed66451302046a486e59b0a9c29c8\",\"dweb:/ipfs/QmfJQ14a59gf8sah6tfuHeKAUKX4eECd9ktdGwuW7x7hVX\"]},\"src/lib/clones/ClonesWithImmutableArgs.sol\":{\"keccak256\":\"0x19e9432ce100392e198e8cf8ad985add8441028b8be9704b66de64da052bd79d\",\"license\":\"BSD\",\"urls\":[\"bzz-raw://fb89861ef99a1f89a25498aa648d73c3f694f5c18dc92e8e93dffdf454a9a04e\",\"dweb:/ipfs/QmV6T5Fj6WUNHFSAqDPkvdXRRoQv76LpeigbGY6r2Hzxn8\"]},\"src/lib/permit2/interfaces/IPermit2.sol\":{\"keccak256\":\"0x240e896f81a7c9574930db416bb25e58a321b5949cfa840f3d183bd8fef72da9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://97cb0d04e9fa3b11c5b38f7b645e1c6ff149b5af225a6a209993f2590a42a67e\",\"dweb:/ipfs/QmSN7Dau9dzMA47SPf5pWRRDDdYKW8RhXcmUbmaguSvGQL\"]},\"src/lib/uniswap-v3/SqrtPriceMath.sol\":{\"keccak256\":\"0xf2009afa1fb8e2f986a599a62cced974d799d798d11f0683830f43b8d78c1a82\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://faba909d44ac15ed1802b34c72ba72b8d98108c4ab3d0d54b5a1c5c48ab1f0ba\",\"dweb:/ipfs/QmWP16FbSoQmxXqB6Ys2EahKNaD5nUsje2Zx9pFgnTNf3u\"]},\"src/modules/Auction.sol\":{\"keccak256\":\"0x2070cb8904a5f7e050bface0eb79dee8f5dde3150dbd9355e32bc86333e83db7\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://06df7763d21e8cd6159375e4e47333b634440bafe5ec25e0b2bb1186691da4fe\",\"dweb:/ipfs/QmbbmXG3aq8icrKSdcBCs2s8jGYGWV1Y1WrsyZ1w6DvuKs\"]},\"src/modules/Condenser.sol\":{\"keccak256\":\"0x0eeb0738b78b8b5947a667e64d95e02139ea1cbfbc14b590d23a3d5d320a132b\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://f35e32dbe42be81eac514ea392a16ee0ffd3c1ce6e314298233ea31852cd29cd\",\"dweb:/ipfs/QmUoM2MuLpbmWjkFBM8Sm5n1EreDAkWZpDEDWZht7gF5kQ\"]},\"src/modules/Derivative.sol\":{\"keccak256\":\"0x258b189cdfcc443855a3690c302522f91b746d4bc4eb3e0ec9d945cd2bff0e22\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://910f164934a317d04aa5a48691928cab15a78adf355e5f59b60f601f7db00541\",\"dweb:/ipfs/QmeLCZ168AtyyWAfz6i1bp9d64EuPmpfcFWE8amAwbPkv4\"]},\"src/modules/Keycode.sol\":{\"keccak256\":\"0x87bc46fae1fa972055e50731999516b0f6a311a9a6e4edd908624dd90b4eab3e\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://028e26252256a74ff0e65890eb1058682094b88af647948a2d7b22085e8470cd\",\"dweb:/ipfs/QmScfjAA3mHzKdTmRtdsfdVvcKF3xTtXYVZt5rHTDQywfu\"]},\"src/modules/Modules.sol\":{\"keccak256\":\"0xd4444ffe31b384d7c9b3e0d7d94da5dd40a4b028ed22f2877aa375536a48f689\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://9f69b6ffe34283147f4864276ad514890fadc72f412970ae770c57cbe3dffdee\",\"dweb:/ipfs/QmcCT9SGp23rYWov7cMSnuqzqtHf7MebegD6PezE3mRR5v\"]},\"src/modules/derivatives/LinearVesting.sol\":{\"keccak256\":\"0xf90795da6445f430534bf1d24f033f17b4a49fadeeffcad93b4d9b8fefea8095\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://1041a738b2a04d3a579421ed5518b6f3aa8fc4a1ededc2446cacf2098053c410\",\"dweb:/ipfs/QmQacrp5HbmG1KBnSMhtgbPZJZJ4Q7A3LTEbkJ6L4pAi96\"]},\"src/modules/derivatives/SoulboundCloneERC20.sol\":{\"keccak256\":\"0x4d7fe1d97c69ee3b098b156c5aae174fa1543e234230a7b5d0537594b27046f0\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://d635de27ea6c5aa6de0dd41b6c005d6259cbe4ac4e5dca3e589fad4a42da4a36\",\"dweb:/ipfs/QmdtwdodoKQS3eRuaVwHqAKppV5Y9nQ2e6pEbycVRDmUVo\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.19+commit.7dd6d404" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "auctionHouse_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "uniV3Factory_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "gUniFactory_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "token_", "type": "address" },
            {
              "internalType": "address",
              "name": "account_",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "balance_",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "required_",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "Callback_InsufficientBalance"
        },
        { "inputs": [], "type": "error", "name": "Callback_InvalidParams" },
        {
          "inputs": [],
          "type": "error",
          "name": "Callback_LinearVestingModuleNotFound"
        },
        { "inputs": [], "type": "error", "name": "Callback_NotAuthorized" },
        { "inputs": [], "type": "error", "name": "Callback_NotImplemented" },
        {
          "inputs": [],
          "type": "error",
          "name": "Callback_Params_InvalidAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Callback_Params_InvalidVestingParams"
        },
        {
          "inputs": [
            { "internalType": "uint24", "name": "actual_", "type": "uint24" },
            { "internalType": "uint24", "name": "min_", "type": "uint24" },
            { "internalType": "uint24", "name": "max_", "type": "uint24" }
          ],
          "type": "error",
          "name": "Callback_Params_PercentOutOfBounds"
        },
        { "inputs": [], "type": "error", "name": "Callback_Params_PoolExists" },
        {
          "inputs": [],
          "type": "error",
          "name": "Callback_Params_PoolFeeNotEnabled"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "token_", "type": "address" },
            {
              "internalType": "uint256",
              "name": "amountActual_",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountMin_",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "Callback_Slippage"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "callbacks",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "CallbacksAddressNotValid"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "AUCTION_HOUSE",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "LINEAR_VESTING_KEYCODE",
          "outputs": [
            { "internalType": "bytes5", "name": "", "type": "bytes5" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MAX_PERCENT",
          "outputs": [
            { "internalType": "uint24", "name": "", "type": "uint24" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "gUniFactory",
          "outputs": [
            {
              "internalType": "contract IGUniFactory",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint96", "name": "lotId", "type": "uint96" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "lotConfiguration",
          "outputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "lotCapacity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lotCuratorPayout",
              "type": "uint256"
            },
            {
              "internalType": "uint24",
              "name": "proceedsUtilisationPercent",
              "type": "uint24"
            },
            {
              "internalType": "uint48",
              "name": "vestingStart",
              "type": "uint48"
            },
            {
              "internalType": "uint48",
              "name": "vestingExpiry",
              "type": "uint48"
            },
            {
              "internalType": "contract LinearVesting",
              "name": "linearVestingModule",
              "type": "address"
            },
            { "internalType": "bool", "name": "active", "type": "bool" },
            { "internalType": "bytes", "name": "implParams", "type": "bytes" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint96", "name": "", "type": "uint96" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "lotIdRegistered",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "uint96", "name": "lotId_", "type": "uint96" },
            { "internalType": "uint64", "name": "bidId", "type": "uint64" },
            { "internalType": "address", "name": "buyer_", "type": "address" },
            { "internalType": "uint256", "name": "amount_", "type": "uint256" },
            {
              "internalType": "bytes",
              "name": "callbackData_",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onBid",
          "outputs": [
            { "internalType": "bytes4", "name": "", "type": "bytes4" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint96", "name": "lotId_", "type": "uint96" },
            { "internalType": "uint256", "name": "refund_", "type": "uint256" },
            { "internalType": "bool", "name": "prefunded_", "type": "bool" },
            {
              "internalType": "bytes",
              "name": "callbackData_",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onCancel",
          "outputs": [
            { "internalType": "bytes4", "name": "", "type": "bytes4" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint96", "name": "lotId_", "type": "uint96" },
            { "internalType": "address", "name": "seller_", "type": "address" },
            {
              "internalType": "address",
              "name": "baseToken_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "quoteToken_",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "capacity_",
              "type": "uint256"
            },
            { "internalType": "bool", "name": "prefund_", "type": "bool" },
            {
              "internalType": "bytes",
              "name": "callbackData_",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onCreate",
          "outputs": [
            { "internalType": "bytes4", "name": "", "type": "bytes4" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint96", "name": "lotId_", "type": "uint96" },
            {
              "internalType": "uint256",
              "name": "curatorFee_",
              "type": "uint256"
            },
            { "internalType": "bool", "name": "prefund_", "type": "bool" },
            {
              "internalType": "bytes",
              "name": "callbackData_",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onCurate",
          "outputs": [
            { "internalType": "bytes4", "name": "", "type": "bytes4" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint96", "name": "lotId_", "type": "uint96" },
            { "internalType": "address", "name": "buyer_", "type": "address" },
            { "internalType": "uint256", "name": "amount_", "type": "uint256" },
            { "internalType": "uint256", "name": "payout_", "type": "uint256" },
            { "internalType": "bool", "name": "prefunded_", "type": "bool" },
            {
              "internalType": "bytes",
              "name": "callbackData_",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onPurchase",
          "outputs": [
            { "internalType": "bytes4", "name": "", "type": "bytes4" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint96", "name": "lotId_", "type": "uint96" },
            {
              "internalType": "uint256",
              "name": "proceeds_",
              "type": "uint256"
            },
            { "internalType": "uint256", "name": "refund_", "type": "uint256" },
            {
              "internalType": "bytes",
              "name": "callbackData_",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onSettle",
          "outputs": [
            { "internalType": "bytes4", "name": "", "type": "bytes4" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "uniV3Factory",
          "outputs": [
            {
              "internalType": "contract IUniswapV3Factory",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "onBid(uint96,uint64,address,uint256,bytes)": {
            "params": {
              "amount": "The amount of quote tokens bid",
              "bidId": "The ID of the bid",
              "buyer": "The address of the buyer",
              "callbackData": "Custom data provided by the buyer",
              "lotId": "The ID of the lot"
            }
          },
          "onCancel(uint96,uint256,bool,bytes)": {
            "details": "If the Callback is configured to receive tokens and the auction was prefunded, then the refund will be sent prior to the call.",
            "params": {
              "callbackData": "Custom data provided by the seller",
              "lotId": "The ID of the lot",
              "preFunded": "If true, the calling contract will have sent base tokens prior to the call",
              "refund": "The refund amount"
            }
          },
          "onCreate(uint96,address,address,address,uint256,bool,bytes)": {
            "details": "The implementing function should:         - Register the lot ID on the Callback contract         - Validate that the seller is allowed to use the Callback contract",
            "params": {
              "baseToken": "The address of the base token",
              "callbackData": "Custom data provided by the seller",
              "capacity": "The capacity of the auction",
              "lotId": "The ID of the lot",
              "preFund": "If true, the calling contract expects base tokens to be sent to it",
              "quoteToken": "The address of the quote token",
              "seller": "The address of the seller"
            }
          },
          "onCurate(uint96,uint256,bool,bytes)": {
            "params": {
              "callbackData": "Custom data provided by the seller",
              "curatorFee": "The curator fee payout",
              "lotId": "The ID of the lot",
              "preFund": "If true, the calling contract expects base tokens to be sent to it"
            }
          },
          "onPurchase(uint96,address,uint256,uint256,bool,bytes)": {
            "details": "If the Callback is configured to receive quote tokens, then the user purchase amount of quote tokens will be sent prior to this call.         If the Callback is configured to send base tokens, then the AuctionHouse will expect the payout of base tokens to be sent back.",
            "params": {
              "amount": "The amount of quote tokens purchased",
              "buyer": "The address of the buyer",
              "callbackData": "Custom data provided by the buyer",
              "lotId": "The ID of the lot",
              "payout": "The amount of base tokens to receive",
              "preFunded": "If true, the calling contract has already been provided the base tokens. Otherwise, they must be provided."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "AUCTION_HOUSE()": {
            "notice": "The AuctionHouse that this callback is linked to"
          },
          "gUniFactory()": { "notice": "The G-UNI Factory contract" },
          "lotConfiguration(uint96)": {
            "notice": "Maps the lot id to the DTL configuration"
          },
          "lotIdRegistered(uint96)": {
            "notice": "Records lot ids against their registration status"
          },
          "onBid(uint96,uint64,address,uint256,bytes)": {
            "notice": "Called when a buyer bids on a batch auction. Reverts if validation fails."
          },
          "onCancel(uint96,uint256,bool,bytes)": {
            "notice": "Called when an auction is cancelled."
          },
          "onCreate(uint96,address,address,address,uint256,bool,bytes)": {
            "notice": "Called when an auction is created. Reverts if validation fails."
          },
          "onCurate(uint96,uint256,bool,bytes)": {
            "notice": "Called when curate is called for an auction."
          },
          "onPurchase(uint96,address,uint256,uint256,bool,bytes)": {
            "notice": "Called when a buyer purchases from an atomic auction. Reverts if validation fails."
          },
          "uniV3Factory()": { "notice": "The Uniswap V3 Factory contract" }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@prb/test/=lib/prb-math/node_modules/@prb/test/",
        "@uniswap/v3-core/=lib/uniswap-v3-core/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "g-uni-v1-core/=lib/g-uni-v1-core/contracts/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts/contracts/",
        "prb-math/=lib/prb-math/src/",
        "solady/=lib/solady/src/",
        "solmate/=lib/solmate/src/",
        "uniswap-v2-core/=lib/uniswap-v2-core/contracts/",
        "uniswap-v2-periphery/=lib/uniswap-v2-periphery/contracts/",
        "uniswap-v3-core/=lib/uniswap-v3-core/contracts/",
        "uniswap-v3-periphery/=lib/uniswap-v3-periphery/contracts/"
      ],
      "optimizer": { "enabled": true, "runs": 200 },
      "metadata": { "bytecodeHash": "ipfs" },
      "compilationTarget": {
        "src/callbacks/liquidity/UniswapV3DTL.sol": "UniswapV3DirectToLiquidity"
      },
      "evmVersion": "paris",
      "libraries": {}
    },
    "sources": {
      "lib/g-uni-v1-core/contracts/GUniPool.sol": {
        "keccak256": "0xdd382818c81f34c434bb3d4235ac9ff39034cb68e1b87244837d9250878d9fa0",
        "urls": [
          "bzz-raw://21b8dcf0120ca53749885b96d7fc6938ca7c3e9bf34012665dce8899def9d05a",
          "dweb:/ipfs/Qmctw9ZNHVJ69E3UXN5yWu6jZ8xqV3hbVNTfKkUyk2PJaa"
        ],
        "license": "GPL-3.0"
      },
      "lib/g-uni-v1-core/contracts/abstract/GUniPoolStorage.sol": {
        "keccak256": "0xd1ad805a13c7cd73554b1e3cc3735f3f369d759f8e0b9188977b85295456d033",
        "urls": [
          "bzz-raw://96990def362663e45fd7b10c3522367d914c7f202cab4c14160541b29461b80e",
          "dweb:/ipfs/QmYe4exEyZZgZSM216acqZ3WQ4YVzFRDjYxGTq8nLJnU7n"
        ],
        "license": "GPL-3.0"
      },
      "lib/g-uni-v1-core/contracts/abstract/Gelatofied.sol": {
        "keccak256": "0x264bc07e6e1b80c454c311ecf4b56afe245ddde31151ed9bcc4cb9ad25bec46a",
        "urls": [
          "bzz-raw://bf70023b23e6ce2e8e4938289d786aa785d31692e75d2f37275876d257047199",
          "dweb:/ipfs/Qmbe8NgoCo1xSM6WnLsDEwZCJQsNWzj38VJN42QtZE4vP7"
        ],
        "license": "GPL-3.0"
      },
      "lib/g-uni-v1-core/contracts/abstract/OwnableUninitialized.sol": {
        "keccak256": "0xb6016d5611f38fbd516a84ea2e56794cb76a8d61c40f6716d5f0133f195759bd",
        "urls": [
          "bzz-raw://4a233fa2f3f9c7bab6cec729fce90b2f631a465c19f4d837e298a062e39e71fd",
          "dweb:/ipfs/QmcDx1K1KD6Z4mwJd4ZqyCNRTA7uNEVS6XmatPejRGAoGB"
        ],
        "license": "GPL-3.0"
      },
      "lib/g-uni-v1-core/contracts/interfaces/IGUniFactory.sol": {
        "keccak256": "0xe06f79e9b1e6351fc4f40c9f25630f0fbfabae9d2ae2bb642ef1f03d4c2195c1",
        "urls": [
          "bzz-raw://dda38cbeeac80562375128b96ae5dc561fec0f283ad8c36beca324ff3ee82ad6",
          "dweb:/ipfs/QmNT74cDB8Ae63ZVAhZCfasa1EwFbdUBqW8v72sc9ZsoWL"
        ],
        "license": "MIT"
      },
      "lib/g-uni-v1-core/contracts/vendor/uniswap/FullMath.sol": {
        "keccak256": "0x3fa0efa3eea2a84bd6ab7e55badd61f97069a6c50780059b036c810427a9740c",
        "urls": [
          "bzz-raw://f79925215b099a9983292b4dc1e25b8d7536e345111517a13c457e6b7755660f",
          "dweb:/ipfs/QmP7eL8DWX1g6tXwC6ACVLDRekkKMVSmYkt9K5VUz6zif3"
        ],
        "license": "GPL-3.0"
      },
      "lib/g-uni-v1-core/contracts/vendor/uniswap/LiquidityAmounts.sol": {
        "keccak256": "0x6205f6409d42fc9565530d2a69819bf8c4e4c66b7a4c61d0827e81c084df6832",
        "urls": [
          "bzz-raw://fc97f565514ab56d0d3a6a22570570aecde78b7570d10de9d2406495b0a6566f",
          "dweb:/ipfs/Qmc23ZddU9hJrhuH1PTNN1JPDQMwzvcWaJ5vqjdGxvgb13"
        ],
        "license": "GPL-3.0"
      },
      "lib/g-uni-v1-core/contracts/vendor/uniswap/TickMath.sol": {
        "keccak256": "0x589b6104fd07d2e56e5b52edcfa53e6e47e2c38cace38025c16278ca73413f2d",
        "urls": [
          "bzz-raw://784a2c4779ac829df34665658d944dd5d2018836f04fa8ff88a702011d26f468",
          "dweb:/ipfs/QmXBT2k1fFkfLwvNEBNAsAKNBajjJ9jL26QdczkUyVhaYt"
        ],
        "license": "GPL-3.0"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol": {
        "keccak256": "0xe59929d4b850143b589b3761b0a8473a603368ba65601549d2b6f950c9ea7150",
        "urls": [
          "bzz-raw://359c6c376e9ffe70a59cef1f40517c0327a82ffd8b17f53ae9a8406134c50a9d",
          "dweb:/ipfs/QmSVW97aNPEnVdvy3mLjWwx457HiWq5ETHou6M4eKPbjcd"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol": {
        "keccak256": "0xce3115e360553d8561bee2acfe759efd03318249436f6bafd27311f721ecb823",
        "urls": [
          "bzz-raw://c642a5875ccbb0962b9742c064ea247e324d3742e44ed8f7917b947e66ede52c",
          "dweb:/ipfs/QmSwyvJc2oiJiLYrFCMpafqLis38ykM5WKxNrbf5waoNC2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol": {
        "keccak256": "0x8d4a0f2b5b760b5e2c19ed3c108d83897a4dfd5bfed97a93867918df19191e5e",
        "urls": [
          "bzz-raw://7787f0e6d168740118ca2fc09a35e33644656f6998b124ab09a5fe790d5388f7",
          "dweb:/ipfs/QmeRPExxvGzci1QVdGpvoRWynS6xyczVXYNVqHLoMQaaMU"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x5642ae1d6b33c5c0b71a8412c6c64cbcf2468b84a002bee3e33cdb5644d25cdb",
        "urls": [
          "bzz-raw://07ba474854eacf022fca2ab63af2b09653f476a9ef2d144ea3d022a0c0b92726",
          "dweb:/ipfs/QmVNfrArMejFSrPMktAtDte64FJ2fGPQHqgSXDz2SH6dse"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x3d094287dec2bd3a7edf6cdd5d18d158d52e9533ee38e36b2780934039ca166e",
        "urls": [
          "bzz-raw://e8ecb81826af9d3dd337d0dad1952d7937c6c92b1a516dd3d52d424fc624e9cd",
          "dweb:/ipfs/QmWPuEuGCWMa3DsDkcApXYXcsWVVqyRKLCLBufETFEg6YK"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/Initializable.sol": {
        "keccak256": "0xab644b65c962df9e77ec01a5abbb06a09c2a97b06a2ac838b5e0091ce05eb30d",
        "urls": [
          "bzz-raw://a694ed0de99b61cfc07ef3122fe3f0b43d0615e50d648d50458dafde5dfcff60",
          "dweb:/ipfs/QmcHXoieL37gTfu49wfrXEQVjswC2RifYmCAPe36HL9jr4"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x446f5eba28390de7608b93345376c1144758ab48783c26df8aa14b6f2a7987bc",
        "urls": [
          "bzz-raw://701c9ebd54d50d7508efe7eb253cd50d4fc9fdbd161db886ae889d0e3487242e",
          "dweb:/ipfs/QmYF5uh258PwhgxYMZULiyG8b8RN4SBAbU7igQGyfe9QnB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0x3646d6b4bee92d2bcc731e096d0b96c73857809d1b103fee122b7c690a3f87eb",
        "urls": [
          "bzz-raw://1566327145da74162e651243403b38a1f056c557c13b7593080b7e681ba4a38e",
          "dweb:/ipfs/QmfLBe1tbAbSpqeQ5C7L3NSgjo53DRVqncgoESBHdw9gLs"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x5747d97de5f7bbe07a8a817855d0bccecb48d6a403d1a62d46f8c9b9f809b43d",
        "urls": [
          "bzz-raw://4dfb322bcf9879804de2a40cfc6ed62d1dfa714f7b71629375f4c1ebd7ba39dc",
          "dweb:/ipfs/QmTdn466mDBnLmoQQm7uCVEiidoJSW6pzRP81ZwmPprUpN"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xb8d40721965efd93b5369d55083181226d3c7e1be4a968c04de35d44ba44f29a",
        "urls": [
          "bzz-raw://e5c4b0089788aa7112cce88602212c3895999f464e00d1c40d7f27ac9288798b",
          "dweb:/ipfs/Qmd69EuGeoCYPfPkGA4hayH4s2upmAe3XaoDf4ggYNEoZ4"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x11ef3515e1e2492b749821cd2f73c323f9ec5d58bc64c3ba431463052a439aa6",
        "urls": [
          "bzz-raw://567d1e3d1cee6dac7ab0d5295027ad8b667132a4282f581498d32c039975d6b5",
          "dweb:/ipfs/QmcbHPL718zArx4DEK94H6e72Z5Z78c9L5n7QC7TWLqb9i"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/auth/Owned.sol": {
        "keccak256": "0xfedb27d14c508342c33eb067c9a02eabcdb0f9dcf93b04ded1001f580d12d0ea",
        "urls": [
          "bzz-raw://1ff52bbee698b9cf9e4574615e6550be0887ccf355f6571e23d6f25b332e79b4",
          "dweb:/ipfs/QmVorA2apojVRStzS7h8aFccR3Uv32G6HVtBtFHZrE7YXx"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/tokens/ERC20.sol": {
        "keccak256": "0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10",
        "urls": [
          "bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35",
          "dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/tokens/ERC6909.sol": {
        "keccak256": "0x767ed60e11d739ed7eb9e10467eb0e0573293238b7a2a56f96b23f145297f1d2",
        "urls": [
          "bzz-raw://e5bc9f48d84ecc46f2627b2a91948f8060f78d2f548a6c5ca1f282f8778e01e0",
          "dweb:/ipfs/QmeATtgjaDVhxcCs6auJrC8nqCwUqntTi3WygHVRa9xg6M"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/utils/FixedPointMathLib.sol": {
        "keccak256": "0x1b62af9baf5b8e991ed7531bc87f45550ba9d61e8dbff5caf237ccaf3a3fd843",
        "urls": [
          "bzz-raw://b7b38b977c5305b18ceefbeed4c9ceaaaefa419b520de62de6604ea661f8c0a9",
          "dweb:/ipfs/QmecMRzgfMyDVa2pvBqMMDLYBappaj7Aa3qcMoQYEQrhWi"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/ReentrancyGuard.sol": {
        "keccak256": "0xb282dd78aa7375d6b200b9a5d8dd214b2e5df1004f8217a4b4c2b07f0c5bfd01",
        "urls": [
          "bzz-raw://5fca62eb8d3dbd2b3b7e4bb051f6da16f4d0ff9cee61c39cebb80f031f6a8800",
          "dweb:/ipfs/QmbrsXPK91iBFwHKwJs2HLRud2KzMoBDRiWYMUtyV5H57j"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/SafeTransferLib.sol": {
        "keccak256": "0x6ab948013c2c7ca6351e593600425b0ec6df9035320280c678e735bce16e996b",
        "urls": [
          "bzz-raw://2ab977d0eeb2bf458f9798250215c646d2f3b1f90b5a7e2b506fdf3335c0f060",
          "dweb:/ipfs/QmYPRoPhNtBAmCSq7imN1scMVpKNQvMTpoqab3tXUx5Tnv"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/uniswap-v3-core/contracts/interfaces/IUniswapV3Factory.sol": {
        "keccak256": "0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489",
        "urls": [
          "bzz-raw://b9379ad954680c44a0bc523b314ae4c4da735f9fe1d02aa56ea5bdba6f1136f2",
          "dweb:/ipfs/QmZXdgQNXKAckrXWz9R3mc47F1fvDvr28a2ewJrwNAw71B"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/uniswap-v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
        "keccak256": "0x4e64844c56061cd90e0a80de73534a9166704c43eed579eb83f90bc2780ce968",
        "urls": [
          "bzz-raw://cba4fab5cebdddf644b901994a7f0f52b98885d4c56012f4dc51d52c2bf9de0e",
          "dweb:/ipfs/QmVyyrRmqXrAiapewWunRVgiPVFJHpH2hKiE1py1svMSNV"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/uniswap-v3-core/contracts/interfaces/callback/IUniswapV3MintCallback.sol": {
        "keccak256": "0x27a9725b8f831a92d16380860c3d348a0b926a7f01b34a54ea6eea78cbdbcd6a",
        "urls": [
          "bzz-raw://7c37ca742c643ca4ba6baadff72b8450c6e340a30f7fea0863dba74030a9bbc7",
          "dweb:/ipfs/QmeKBR6a7tQSX85Q7Lb2wrAWSEFqhC4tTmLo4SzcN3kFmp"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/uniswap-v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
        "keccak256": "0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69",
        "urls": [
          "bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652",
          "dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/uniswap-v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
        "keccak256": "0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634",
        "urls": [
          "bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5",
          "dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/uniswap-v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
        "keccak256": "0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5",
        "urls": [
          "bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7",
          "dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/uniswap-v3-core/contracts/interfaces/pool/IUniswapV3PoolErrors.sol": {
        "keccak256": "0xf80abf13fb1fafc127ba4e792f240dd8ea7c8c893978cdfd8439c27fae9a037b",
        "urls": [
          "bzz-raw://b04fc72a656bbf3631e9c2e67b9870a2d9d235185e833fe050e9606e6816a9aa",
          "dweb:/ipfs/QmUcz4bkEkJ9pwzFu1C3n97hBQ3st9U6qTAqCdyFwddKco"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/uniswap-v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
        "keccak256": "0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd",
        "urls": [
          "bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03",
          "dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/uniswap-v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
        "keccak256": "0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7",
        "urls": [
          "bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047",
          "dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/uniswap-v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
        "keccak256": "0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235",
        "urls": [
          "bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735",
          "dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/uniswap-v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
        "keccak256": "0x44fa2ce1182f6c2f6bead3d1737804bf7e112252ae86e0f2e92f9b8249603f43",
        "urls": [
          "bzz-raw://54154e8665b98d65f5dc91b256551852cb47882180b501b260657122d207c0ea",
          "dweb:/ipfs/QmcfemK1A2PXYrWB5SBFGERpMCderbFRb8BtTzQDj1sUBp"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/uniswap-v3-core/contracts/libraries/FixedPoint96.sol": {
        "keccak256": "0x0ba8a9b95a956a4050749c0158e928398c447c91469682ca8a7cc7e77a7fe032",
        "urls": [
          "bzz-raw://186d3b528866065a5856f96d2aeec698efa99f8da913e9adf34f8cc296cc993d",
          "dweb:/ipfs/QmUAiMvtAQp8c9dy57bqJYzG7hkb1uChiPaQmt264skoqP"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/uniswap-v3-core/contracts/libraries/FullMath.sol": {
        "keccak256": "0x7825565a4bb2a34a1dc96bbfead755785dfb0df8ef81bd934c43023689685645",
        "urls": [
          "bzz-raw://8f44f4614d31e3d4864c7eb13620555253b84f6a69180f8745b7c6e246a9d125",
          "dweb:/ipfs/QmfNQUcXj3KL8h9u5PqbtEC6yRtwDbKNb48uMPjdwxsKnd"
        ],
        "license": "MIT"
      },
      "lib/uniswap-v3-core/contracts/libraries/TickMath.sol": {
        "keccak256": "0x5c57de03a91cc2ec8939865dbbcb0197bb6c353b711075eefd8e0fca5e102129",
        "urls": [
          "bzz-raw://1e994c24fd891ef8a3f5dbf5eba42b34feaf05e0376a29f91322faa18054449c",
          "dweb:/ipfs/QmNdUJGUQxd1dPkMbnA5f5UNqakxRkQE5r7bTZJAuHeapS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/bases/AuctionHouse.sol": {
        "keccak256": "0xe91cd3599063507598063d482d47e5e78e935cc9e4c075e2fddda26fd0ffe7f8",
        "urls": [
          "bzz-raw://f90b4f981c2a893684a743d1d1bef90f2fb2632751c9cefb458dac00034252c5",
          "dweb:/ipfs/QmVcLhYQcw4sqrayEbDLi6vLNbAEMvYvjxcLbt3mWXPSdR"
        ],
        "license": "BSL-1.1"
      },
      "src/bases/FeeManager.sol": {
        "keccak256": "0x161a7a39297b027c1bef0cc140ddc3a26d071875baead99fac74234f291046f0",
        "urls": [
          "bzz-raw://4f7e6f570d689bf906072e51d5a7a421c4e68c9bae9138d01c439b29037ee6de",
          "dweb:/ipfs/QmSPQeWyZZ5z7VtLHtmo6xKtmzuKM9wysaezZcAudiJ9MT"
        ],
        "license": "BSL-1.1"
      },
      "src/callbacks/BaseCallback.sol": {
        "keccak256": "0x6f82cffe10322b3318104f4d6853678f7ec9807ff99bcb1068e9c578d5e46569",
        "urls": [
          "bzz-raw://62e23cd3d50c696da8b205303db8ff1f9cb8c264bedff96699f3d77bd6a513db",
          "dweb:/ipfs/QmdkXMBuRKmMjgw8VS8rU949tiFqt3gDS3pRrpKkE5FVN9"
        ],
        "license": "MIT"
      },
      "src/callbacks/liquidity/BaseDTL.sol": {
        "keccak256": "0xdf61391af766185c9ebbf707171a35f6d62294e0f479b74959331e85dbcfa809",
        "urls": [
          "bzz-raw://a0b7f281f20ee611d94a85506d3034df64a008efc0b989b173bbbc712aa3973c",
          "dweb:/ipfs/QmQsQ6hJ1Ke6ze21WRA2KAdPARi3bXapnLitp8NGUFo6Ag"
        ],
        "license": "MIT"
      },
      "src/callbacks/liquidity/UniswapV3DTL.sol": {
        "keccak256": "0x8f2a4be776ca46b1cf4386526e3b67f09e16979f671e7ff8552c1fd1106bef34",
        "urls": [
          "bzz-raw://90c4f5a487079364b033b31a6dcd2d38d94ed525e8bce2fa12a47b46dd04be00",
          "dweb:/ipfs/QmVEfYQaSjzHqQ8B2Y9TarTJd75ZzgrxjyYLVAwy4Uc3aB"
        ],
        "license": "MIT"
      },
      "src/interfaces/IAuctionHouse.sol": {
        "keccak256": "0xda5415ec4c38ad889568bf453a2734f50f1ec6db1bb47c29b5193c6818ed7d3a",
        "urls": [
          "bzz-raw://32a8c1258f722e47d3f98637386ce2d8b8f39964599adf4c1264d350f7546d44",
          "dweb:/ipfs/QmNW9iaukqZsBB9kqnSoUP384QZ8FjP7nJ5hbdpyG4dZpp"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/interfaces/ICallback.sol": {
        "keccak256": "0xb08760dc184fdf388679cbaf9b854e6d7d800825c71573ae0edbba9d1980fbb8",
        "urls": [
          "bzz-raw://913a2ad19820fe53ab46dccf6a13127d189f7840ba6a522a6e5d5afdebca41da",
          "dweb:/ipfs/QmSVSQxMYCsLX58utsHo1CzkRRy3YkYGpBbqKH6FLrUhas"
        ],
        "license": "MIT"
      },
      "src/interfaces/IFeeManager.sol": {
        "keccak256": "0xbb4415d241aae0d3ccc6ca3d7c2224dd267e2bdef7d76a284eabef726e828e1f",
        "urls": [
          "bzz-raw://003dedbcb5df6fbe12157d985d26c88acd5216bed5188bc6218cf9968ce1d2b5",
          "dweb:/ipfs/QmQV4VEjMAH6PxbWqSLK2qXruVVYBuzr5XXeX7q3FR2ESk"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/interfaces/modules/IAuction.sol": {
        "keccak256": "0x7039157d051a619b63ce7988be07a43b77a46043f61c5ab4e531084084bcca01",
        "urls": [
          "bzz-raw://32e0093e843d08deada85cf2649d61aa6b37be858e4fdb32b81bfd2c0cf2c304",
          "dweb:/ipfs/QmPEt15nwpXoBzin32wAQKfSBqcvPdkcgLRxiu3eiN1VFg"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/interfaces/modules/ICondenser.sol": {
        "keccak256": "0x3bb335a4426a17e2aaf48647d3c41293c3803872c93cdf4e489064936e63d9cd",
        "urls": [
          "bzz-raw://aaf82d18618e54e414999d916114ae9a0d103c764ac4a4665bed4c9ecc979e22",
          "dweb:/ipfs/QmTAJYs4EEU6YfNBDGXf7vbExcsfne7hCXkhPXvG2oyxvH"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/interfaces/modules/IDerivative.sol": {
        "keccak256": "0x7d6bf678b637167bbb2aa532be4d6cf2f195cd8953e67a4c8b4f00e56f12b9f1",
        "urls": [
          "bzz-raw://76644794657c193454db35d54d0b7a5c03bebdc0301028bc616cd3b7ce993fb1",
          "dweb:/ipfs/QmeWPhJQbGi8rtgzeY8DjnmsAkSp5QXRzveJKiRbou9tFH"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/interfaces/modules/derivatives/ILinearVesting.sol": {
        "keccak256": "0x4786c481106dd2cb1777bb935ecedc8180b62ed4048f6f6952daf9b5641520ff",
        "urls": [
          "bzz-raw://ee03aac28046689e32b3e4905a721d6c5261efce6cd8194b13396c1f9650d6e4",
          "dweb:/ipfs/QmSqJjZqU7vLpuzKxZrpUQj9ybh5uaBFxfCZ39ewkQqwV8"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/lib/Callbacks.sol": {
        "keccak256": "0xc3e2ce87dca53c20a0e013351f80549ed4821c7267963e87e39b0996ccf93836",
        "urls": [
          "bzz-raw://0fd245ee2582d6ff35a24fd40b8c6c5ccd620dc5d813dcdea583fd4c18492feb",
          "dweb:/ipfs/QmaixXjHYed69t9opaSYAkxP3eb3pigUxiJF79xQwb4vMi"
        ],
        "license": "MIT"
      },
      "src/lib/ERC6909Metadata.sol": {
        "keccak256": "0x08860d5892ece3b99a9b2d99f7c1f571223e5255b9392897a579815f30cca3af",
        "urls": [
          "bzz-raw://fe1c389fb96d772043ad643d30a2676cca164bec8079abc38da8a08ce872c0cc",
          "dweb:/ipfs/Qmf4Wpyx5rwX9eCWuaxY63tez2odgmDUYU8gU7dPhb1j5e"
        ],
        "license": "UNLICENSED"
      },
      "src/lib/Timestamp.sol": {
        "keccak256": "0x8698230543af14affc4b58fb64aabed2116c1c8a41ac94309e2ec0241f0fb129",
        "urls": [
          "bzz-raw://5c1a9cee00e32f1b66518e686890fa39969155a8738236bc91eb2f6151bb2b99",
          "dweb:/ipfs/QmXiq4CVSHddc9c49gdqxAD23XqXeA5eqGbCqFHsuwdjXT"
        ],
        "license": "MIT"
      },
      "src/lib/Transfer.sol": {
        "keccak256": "0xd715c7cb14051b0b12feef58fdc8ffa9a99e825c51c994a630928f08a5b8f465",
        "urls": [
          "bzz-raw://11b7da9dd9b78a13fac23e2a9a53e946e02100ff1a97adf2efdc252df2d49aff",
          "dweb:/ipfs/QmUfiSSJYaWYuhxezZNQjvtZDwtTtCcKQVDJZxHzxhyvDw"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/lib/Uint2Str.sol": {
        "keccak256": "0xd5bed46248c82664844898fee717cf46ac94df59f7dc67c8db626ef666e7ce52",
        "urls": [
          "bzz-raw://56ff374909e3030e11301a6fd3c16a893e85a0fd3ffa042ee877b850336a8b0f",
          "dweb:/ipfs/QmewNgdjU2EzjdgtRii9MENC43J9P33DpBkqznpHNFrF1W"
        ],
        "license": "UNLICENSED"
      },
      "src/lib/clones/Clone.sol": {
        "keccak256": "0x56f39ad54b1d26569bd281a4da2fa0deb54bad7cf05f5bfacb488cd050c9027e",
        "urls": [
          "bzz-raw://bb9530726000c21fd93b42412cd528dfc37f0270966362a672b486bf43e41368",
          "dweb:/ipfs/QmWrL3YjSzXMBFFW7o5d22HZrxk25sdru7XowLoqukZN3M"
        ],
        "license": "BSD"
      },
      "src/lib/clones/CloneERC20.sol": {
        "keccak256": "0xbd7e0d8863ad7c758ac5b8940ad1fb52bfa75d54ad5e23726db6fa2717811bc7",
        "urls": [
          "bzz-raw://3de09440ec47fc9f80297fc21beb4264858ed66451302046a486e59b0a9c29c8",
          "dweb:/ipfs/QmfJQ14a59gf8sah6tfuHeKAUKX4eECd9ktdGwuW7x7hVX"
        ],
        "license": "BSD"
      },
      "src/lib/clones/ClonesWithImmutableArgs.sol": {
        "keccak256": "0x19e9432ce100392e198e8cf8ad985add8441028b8be9704b66de64da052bd79d",
        "urls": [
          "bzz-raw://fb89861ef99a1f89a25498aa648d73c3f694f5c18dc92e8e93dffdf454a9a04e",
          "dweb:/ipfs/QmV6T5Fj6WUNHFSAqDPkvdXRRoQv76LpeigbGY6r2Hzxn8"
        ],
        "license": "BSD"
      },
      "src/lib/permit2/interfaces/IPermit2.sol": {
        "keccak256": "0x240e896f81a7c9574930db416bb25e58a321b5949cfa840f3d183bd8fef72da9",
        "urls": [
          "bzz-raw://97cb0d04e9fa3b11c5b38f7b645e1c6ff149b5af225a6a209993f2590a42a67e",
          "dweb:/ipfs/QmSN7Dau9dzMA47SPf5pWRRDDdYKW8RhXcmUbmaguSvGQL"
        ],
        "license": "MIT"
      },
      "src/lib/uniswap-v3/SqrtPriceMath.sol": {
        "keccak256": "0xf2009afa1fb8e2f986a599a62cced974d799d798d11f0683830f43b8d78c1a82",
        "urls": [
          "bzz-raw://faba909d44ac15ed1802b34c72ba72b8d98108c4ab3d0d54b5a1c5c48ab1f0ba",
          "dweb:/ipfs/QmWP16FbSoQmxXqB6Ys2EahKNaD5nUsje2Zx9pFgnTNf3u"
        ],
        "license": "MIT"
      },
      "src/modules/Auction.sol": {
        "keccak256": "0x2070cb8904a5f7e050bface0eb79dee8f5dde3150dbd9355e32bc86333e83db7",
        "urls": [
          "bzz-raw://06df7763d21e8cd6159375e4e47333b634440bafe5ec25e0b2bb1186691da4fe",
          "dweb:/ipfs/QmbbmXG3aq8icrKSdcBCs2s8jGYGWV1Y1WrsyZ1w6DvuKs"
        ],
        "license": "BSL-1.1"
      },
      "src/modules/Condenser.sol": {
        "keccak256": "0x0eeb0738b78b8b5947a667e64d95e02139ea1cbfbc14b590d23a3d5d320a132b",
        "urls": [
          "bzz-raw://f35e32dbe42be81eac514ea392a16ee0ffd3c1ce6e314298233ea31852cd29cd",
          "dweb:/ipfs/QmUoM2MuLpbmWjkFBM8Sm5n1EreDAkWZpDEDWZht7gF5kQ"
        ],
        "license": "BSL-1.1"
      },
      "src/modules/Derivative.sol": {
        "keccak256": "0x258b189cdfcc443855a3690c302522f91b746d4bc4eb3e0ec9d945cd2bff0e22",
        "urls": [
          "bzz-raw://910f164934a317d04aa5a48691928cab15a78adf355e5f59b60f601f7db00541",
          "dweb:/ipfs/QmeLCZ168AtyyWAfz6i1bp9d64EuPmpfcFWE8amAwbPkv4"
        ],
        "license": "BSL-1.1"
      },
      "src/modules/Keycode.sol": {
        "keccak256": "0x87bc46fae1fa972055e50731999516b0f6a311a9a6e4edd908624dd90b4eab3e",
        "urls": [
          "bzz-raw://028e26252256a74ff0e65890eb1058682094b88af647948a2d7b22085e8470cd",
          "dweb:/ipfs/QmScfjAA3mHzKdTmRtdsfdVvcKF3xTtXYVZt5rHTDQywfu"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/modules/Modules.sol": {
        "keccak256": "0xd4444ffe31b384d7c9b3e0d7d94da5dd40a4b028ed22f2877aa375536a48f689",
        "urls": [
          "bzz-raw://9f69b6ffe34283147f4864276ad514890fadc72f412970ae770c57cbe3dffdee",
          "dweb:/ipfs/QmcCT9SGp23rYWov7cMSnuqzqtHf7MebegD6PezE3mRR5v"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/modules/derivatives/LinearVesting.sol": {
        "keccak256": "0xf90795da6445f430534bf1d24f033f17b4a49fadeeffcad93b4d9b8fefea8095",
        "urls": [
          "bzz-raw://1041a738b2a04d3a579421ed5518b6f3aa8fc4a1ededc2446cacf2098053c410",
          "dweb:/ipfs/QmQacrp5HbmG1KBnSMhtgbPZJZJ4Q7A3LTEbkJ6L4pAi96"
        ],
        "license": "BSL-1.1"
      },
      "src/modules/derivatives/SoulboundCloneERC20.sol": {
        "keccak256": "0x4d7fe1d97c69ee3b098b156c5aae174fa1543e234230a7b5d0537594b27046f0",
        "urls": [
          "bzz-raw://d635de27ea6c5aa6de0dd41b6c005d6259cbe4ac4e5dca3e589fad4a42da4a36",
          "dweb:/ipfs/QmdtwdodoKQS3eRuaVwHqAKppV5Y9nQ2e6pEbycVRDmUVo"
        ],
        "license": "BSL-1.1"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/callbacks/liquidity/UniswapV3DTL.sol",
    "id": 80072,
    "exportedSymbols": {
      "BaseDirectToLiquidity": [79365],
      "ERC20": [54862],
      "GUniPool": [46220],
      "IGUniFactory": [46924],
      "IUniswapV3Factory": [59161],
      "IUniswapV3Pool": [59193],
      "SqrtPriceMath": [85182],
      "TickMath": [63298],
      "UniswapV3DirectToLiquidity": [80071]
    },
    "nodeType": "SourceUnit",
    "src": "32:10149:130",
    "nodes": [
      {
        "id": 79610,
        "nodeType": "PragmaDirective",
        "src": "32:24:130",
        "nodes": [],
        "literals": ["solidity", "^", "0.8", ".19"]
      },
      {
        "id": 79612,
        "nodeType": "ImportDirective",
        "src": "71:47:130",
        "nodes": [],
        "absolutePath": "lib/solmate/src/tokens/ERC20.sol",
        "file": "solmate/tokens/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 80072,
        "sourceUnit": 54863,
        "symbolAliases": [
          {
            "foreign": {
              "id": 79611,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 54862,
              "src": "79:5:130",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 79614,
        "nodeType": "ImportDirective",
        "src": "119:67:130",
        "nodes": [],
        "absolutePath": "src/lib/uniswap-v3/SqrtPriceMath.sol",
        "file": "src/lib/uniswap-v3/SqrtPriceMath.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 80072,
        "sourceUnit": 85183,
        "symbolAliases": [
          {
            "foreign": {
              "id": 79613,
              "name": "SqrtPriceMath",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 85182,
              "src": "127:13:130",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 79616,
        "nodeType": "ImportDirective",
        "src": "199:77:130",
        "nodes": [],
        "absolutePath": "lib/uniswap-v3-core/contracts/interfaces/IUniswapV3Pool.sol",
        "file": "uniswap-v3-core/interfaces/IUniswapV3Pool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 80072,
        "sourceUnit": 59194,
        "symbolAliases": [
          {
            "foreign": {
              "id": 79615,
              "name": "IUniswapV3Pool",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 59193,
              "src": "207:14:130",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 79618,
        "nodeType": "ImportDirective",
        "src": "277:83:130",
        "nodes": [],
        "absolutePath": "lib/uniswap-v3-core/contracts/interfaces/IUniswapV3Factory.sol",
        "file": "uniswap-v3-core/interfaces/IUniswapV3Factory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 80072,
        "sourceUnit": 59162,
        "symbolAliases": [
          {
            "foreign": {
              "id": 79617,
              "name": "IUniswapV3Factory",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 59161,
              "src": "285:17:130",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 79620,
        "nodeType": "ImportDirective",
        "src": "361:64:130",
        "nodes": [],
        "absolutePath": "lib/uniswap-v3-core/contracts/libraries/TickMath.sol",
        "file": "uniswap-v3-core/libraries/TickMath.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 80072,
        "sourceUnit": 63299,
        "symbolAliases": [
          {
            "foreign": {
              "id": 79619,
              "name": "TickMath",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 63298,
              "src": "369:8:130",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 79622,
        "nodeType": "ImportDirective",
        "src": "436:71:130",
        "nodes": [],
        "absolutePath": "lib/g-uni-v1-core/contracts/interfaces/IGUniFactory.sol",
        "file": "g-uni-v1-core/interfaces/IGUniFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 80072,
        "sourceUnit": 46925,
        "symbolAliases": [
          {
            "foreign": {
              "id": 79621,
              "name": "IGUniFactory",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 46924,
              "src": "444:12:130",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 79624,
        "nodeType": "ImportDirective",
        "src": "508:52:130",
        "nodes": [],
        "absolutePath": "lib/g-uni-v1-core/contracts/GUniPool.sol",
        "file": "g-uni-v1-core/GUniPool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 80072,
        "sourceUnit": 46221,
        "symbolAliases": [
          {
            "foreign": {
              "id": 79623,
              "name": "GUniPool",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 46220,
              "src": "516:8:130",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 79626,
        "nodeType": "ImportDirective",
        "src": "575:74:130",
        "nodes": [],
        "absolutePath": "src/callbacks/liquidity/BaseDTL.sol",
        "file": "src/callbacks/liquidity/BaseDTL.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 80072,
        "sourceUnit": 79366,
        "symbolAliases": [
          {
            "foreign": {
              "id": 79625,
              "name": "BaseDirectToLiquidity",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 79365,
              "src": "583:21:130",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 80071,
        "nodeType": "ContractDefinition",
        "src": "1679:8501:130",
        "nodes": [
          {
            "id": 79631,
            "nodeType": "ErrorDefinition",
            "src": "1786:42:130",
            "nodes": [],
            "errorSelector": "5a60fc9d",
            "name": "Callback_Params_PoolFeeNotEnabled",
            "nameLocation": "1792:33:130",
            "parameters": {
              "id": 79630,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1825:2:130"
            }
          },
          {
            "id": 79639,
            "nodeType": "ErrorDefinition",
            "src": "1834:83:130",
            "nodes": [],
            "errorSelector": "6ad6fa4b",
            "name": "Callback_Slippage",
            "nameLocation": "1840:17:130",
            "parameters": {
              "id": 79638,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79633,
                  "mutability": "mutable",
                  "name": "token_",
                  "nameLocation": "1866:6:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 79639,
                  "src": "1858:14:130",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 79632,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1858:7:130",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79635,
                  "mutability": "mutable",
                  "name": "amountActual_",
                  "nameLocation": "1882:13:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 79639,
                  "src": "1874:21:130",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 79634,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1874:7:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79637,
                  "mutability": "mutable",
                  "name": "amountMin_",
                  "nameLocation": "1905:10:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 79639,
                  "src": "1897:18:130",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 79636,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1897:7:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1857:59:130"
            }
          },
          {
            "id": 79642,
            "nodeType": "StructDefinition",
            "src": "2226:57:130",
            "nodes": [],
            "canonicalName": "UniswapV3DirectToLiquidity.OnSettleParams",
            "members": [
              {
                "constant": false,
                "id": 79641,
                "mutability": "mutable",
                "name": "maxSlippage",
                "nameLocation": "2265:11:130",
                "nodeType": "VariableDeclaration",
                "scope": 79642,
                "src": "2258:18:130",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint24",
                  "typeString": "uint24"
                },
                "typeName": {
                  "id": 79640,
                  "name": "uint24",
                  "nodeType": "ElementaryTypeName",
                  "src": "2258:6:130",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "OnSettleParams",
            "nameLocation": "2233:14:130",
            "scope": 80071,
            "visibility": "public"
          },
          {
            "id": 79646,
            "nodeType": "VariableDeclaration",
            "src": "2459:37:130",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 79643,
              "nodeType": "StructuredDocumentation",
              "src": "2338:116:130",
              "text": "@notice     The Uniswap V3 Factory contract\n @dev        This contract is used to create Uniswap V3 pools"
            },
            "functionSelector": "705e474b",
            "mutability": "mutable",
            "name": "uniV3Factory",
            "nameLocation": "2484:12:130",
            "scope": 80071,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IUniswapV3Factory_$59161",
              "typeString": "contract IUniswapV3Factory"
            },
            "typeName": {
              "id": 79645,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 79644,
                "name": "IUniswapV3Factory",
                "nameLocations": ["2459:17:130"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 59161,
                "src": "2459:17:130"
              },
              "referencedDeclaration": 59161,
              "src": "2459:17:130",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IUniswapV3Factory_$59161",
                "typeString": "contract IUniswapV3Factory"
              }
            },
            "visibility": "public"
          },
          {
            "id": 79650,
            "nodeType": "VariableDeclaration",
            "src": "2622:31:130",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 79647,
              "nodeType": "StructuredDocumentation",
              "src": "2503:114:130",
              "text": "@notice     The G-UNI Factory contract\n @dev        This contract is used to create the ERC20 LP tokens"
            },
            "functionSelector": "258f8931",
            "mutability": "mutable",
            "name": "gUniFactory",
            "nameLocation": "2642:11:130",
            "scope": 80071,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IGUniFactory_$46924",
              "typeString": "contract IGUniFactory"
            },
            "typeName": {
              "id": 79649,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 79648,
                "name": "IGUniFactory",
                "nameLocations": ["2622:12:130"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 46924,
                "src": "2622:12:130"
              },
              "referencedDeclaration": 46924,
              "src": "2622:12:130",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IGUniFactory_$46924",
                "typeString": "contract IGUniFactory"
              }
            },
            "visibility": "public"
          },
          {
            "id": 79697,
            "nodeType": "FunctionDefinition",
            "src": "2705:473:130",
            "nodes": [],
            "body": {
              "id": 79696,
              "nodeType": "Block",
              "src": "2852:326:130",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 79667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 79662,
                      "name": "uniV3Factory_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79654,
                      "src": "2866:13:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 79665,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2891:1:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 79664,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2883:7:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 79663,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2883:7:130",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 79666,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2883:10:130",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2866:27:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 79672,
                  "nodeType": "IfStatement",
                  "src": "2862:97:130",
                  "trueBody": {
                    "id": 79671,
                    "nodeType": "Block",
                    "src": "2895:64:130",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 79668,
                            "name": "Callback_Params_InvalidAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78650,
                            "src": "2916:30:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 79669,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2916:32:130",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 79670,
                        "nodeType": "RevertStatement",
                        "src": "2909:39:130"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 79677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 79673,
                      "name": "uniV3Factory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79646,
                      "src": "2968:12:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IUniswapV3Factory_$59161",
                        "typeString": "contract IUniswapV3Factory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 79675,
                          "name": "uniV3Factory_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79654,
                          "src": "3001:13:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 79674,
                        "name": "IUniswapV3Factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59161,
                        "src": "2983:17:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IUniswapV3Factory_$59161_$",
                          "typeString": "type(contract IUniswapV3Factory)"
                        }
                      },
                      "id": 79676,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2983:32:130",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IUniswapV3Factory_$59161",
                        "typeString": "contract IUniswapV3Factory"
                      }
                    },
                    "src": "2968:47:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IUniswapV3Factory_$59161",
                      "typeString": "contract IUniswapV3Factory"
                    }
                  },
                  "id": 79678,
                  "nodeType": "ExpressionStatement",
                  "src": "2968:47:130"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 79684,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 79679,
                      "name": "gUniFactory_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79656,
                      "src": "3030:12:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 79682,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3054:1:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 79681,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3046:7:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 79680,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3046:7:130",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 79683,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3046:10:130",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3030:26:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 79689,
                  "nodeType": "IfStatement",
                  "src": "3026:96:130",
                  "trueBody": {
                    "id": 79688,
                    "nodeType": "Block",
                    "src": "3058:64:130",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 79685,
                            "name": "Callback_Params_InvalidAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78650,
                            "src": "3079:30:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 79686,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3079:32:130",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 79687,
                        "nodeType": "RevertStatement",
                        "src": "3072:39:130"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 79694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 79690,
                      "name": "gUniFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79650,
                      "src": "3131:11:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IGUniFactory_$46924",
                        "typeString": "contract IGUniFactory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 79692,
                          "name": "gUniFactory_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79656,
                          "src": "3158:12:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 79691,
                        "name": "IGUniFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46924,
                        "src": "3145:12:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IGUniFactory_$46924_$",
                          "typeString": "type(contract IGUniFactory)"
                        }
                      },
                      "id": 79693,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3145:26:130",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IGUniFactory_$46924",
                        "typeString": "contract IGUniFactory"
                      }
                    },
                    "src": "3131:40:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IGUniFactory_$46924",
                      "typeString": "contract IGUniFactory"
                    }
                  },
                  "id": 79695,
                  "nodeType": "ExpressionStatement",
                  "src": "3131:40:130"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 79659,
                    "name": "auctionHouse_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 79652,
                    "src": "2837:13:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 79660,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 79658,
                  "name": "BaseDirectToLiquidity",
                  "nameLocations": ["2815:21:130"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 79365,
                  "src": "2815:21:130"
                },
                "nodeType": "ModifierInvocation",
                "src": "2815:36:130"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 79657,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79652,
                  "mutability": "mutable",
                  "name": "auctionHouse_",
                  "nameLocation": "2734:13:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 79697,
                  "src": "2726:21:130",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 79651,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2726:7:130",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79654,
                  "mutability": "mutable",
                  "name": "uniV3Factory_",
                  "nameLocation": "2765:13:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 79697,
                  "src": "2757:21:130",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 79653,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2757:7:130",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79656,
                  "mutability": "mutable",
                  "name": "gUniFactory_",
                  "nameLocation": "2796:12:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 79697,
                  "src": "2788:20:130",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 79655,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2788:7:130",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2716:98:130"
            },
            "returnParameters": {
              "id": 79661,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2852:0:130"
            },
            "scope": 80071,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 79765,
            "nodeType": "FunctionDefinition",
            "src": "3588:772:130",
            "nodes": [],
            "body": {
              "id": 79764,
              "nodeType": "Block",
              "src": "3799:561:130",
              "nodes": [],
              "statements": [
                {
                  "assignments": [79718],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 79718,
                      "mutability": "mutable",
                      "name": "params",
                      "nameLocation": "3831:6:130",
                      "nodeType": "VariableDeclaration",
                      "scope": 79764,
                      "src": "3809:28:130",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_OnCreateParams_$78695_memory_ptr",
                        "typeString": "struct BaseDirectToLiquidity.OnCreateParams"
                      },
                      "typeName": {
                        "id": 79717,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 79716,
                          "name": "OnCreateParams",
                          "nameLocations": ["3809:14:130"],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 78695,
                          "src": "3809:14:130"
                        },
                        "referencedDeclaration": 78695,
                        "src": "3809:14:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OnCreateParams_$78695_storage_ptr",
                          "typeString": "struct BaseDirectToLiquidity.OnCreateParams"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 79725,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 79721,
                        "name": "callbackData_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79712,
                        "src": "3851:13:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 79722,
                            "name": "OnCreateParams",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78695,
                            "src": "3867:14:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_OnCreateParams_$78695_storage_ptr_$",
                              "typeString": "type(struct BaseDirectToLiquidity.OnCreateParams storage pointer)"
                            }
                          }
                        ],
                        "id": 79723,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "3866:16:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_OnCreateParams_$78695_storage_ptr_$",
                          "typeString": "type(struct BaseDirectToLiquidity.OnCreateParams storage pointer)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_type$_t_struct$_OnCreateParams_$78695_storage_ptr_$",
                          "typeString": "type(struct BaseDirectToLiquidity.OnCreateParams storage pointer)"
                        }
                      ],
                      "expression": {
                        "id": 79719,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "3840:3:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 79720,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "3844:6:130",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "3840:10:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 79724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3840:43:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OnCreateParams_$78695_memory_ptr",
                      "typeString": "struct BaseDirectToLiquidity.OnCreateParams memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3809:74:130"
                },
                {
                  "assignments": [79727],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 79727,
                      "mutability": "mutable",
                      "name": "poolFee",
                      "nameLocation": "3901:7:130",
                      "nodeType": "VariableDeclaration",
                      "scope": 79764,
                      "src": "3894:14:130",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      },
                      "typeName": {
                        "id": 79726,
                        "name": "uint24",
                        "nodeType": "ElementaryTypeName",
                        "src": "3894:6:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 79736,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 79730,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79718,
                          "src": "3923:6:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OnCreateParams_$78695_memory_ptr",
                            "typeString": "struct BaseDirectToLiquidity.OnCreateParams memory"
                          }
                        },
                        "id": 79731,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3930:10:130",
                        "memberName": "implParams",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 78694,
                        "src": "3923:17:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 79733,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3943:6:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint24_$",
                              "typeString": "type(uint24)"
                            },
                            "typeName": {
                              "id": 79732,
                              "name": "uint24",
                              "nodeType": "ElementaryTypeName",
                              "src": "3943:6:130",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 79734,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "3942:8:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint24_$",
                          "typeString": "type(uint24)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_uint24_$",
                          "typeString": "type(uint24)"
                        }
                      ],
                      "expression": {
                        "id": 79728,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "3912:3:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 79729,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "3916:6:130",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "3912:10:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 79735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3912:39:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3893:58:130"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    },
                    "id": 79742,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 79739,
                          "name": "poolFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79727,
                          "src": "4082:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        ],
                        "expression": {
                          "id": 79737,
                          "name": "uniV3Factory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79646,
                          "src": "4048:12:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IUniswapV3Factory_$59161",
                            "typeString": "contract IUniswapV3Factory"
                          }
                        },
                        "id": 79738,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4061:20:130",
                        "memberName": "feeAmountTickSpacing",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 59122,
                        "src": "4048:33:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint24_$returns$_t_int24_$",
                          "typeString": "function (uint24) view external returns (int24)"
                        }
                      },
                      "id": 79740,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4048:42:130",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 79741,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4094:1:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4048:47:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 79747,
                  "nodeType": "IfStatement",
                  "src": "4044:120:130",
                  "trueBody": {
                    "id": 79746,
                    "nodeType": "Block",
                    "src": "4097:67:130",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 79743,
                            "name": "Callback_Params_PoolFeeNotEnabled",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79631,
                            "src": "4118:33:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 79744,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4118:35:130",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 79745,
                        "nodeType": "RevertStatement",
                        "src": "4111:42:130"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 79758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 79750,
                          "name": "baseToken_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79704,
                          "src": "4245:10:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 79751,
                          "name": "quoteToken_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79706,
                          "src": "4257:11:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 79752,
                          "name": "poolFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79727,
                          "src": "4270:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        ],
                        "expression": {
                          "id": 79748,
                          "name": "uniV3Factory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79646,
                          "src": "4224:12:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IUniswapV3Factory_$59161",
                            "typeString": "contract IUniswapV3Factory"
                          }
                        },
                        "id": 79749,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4237:7:130",
                        "memberName": "getPool",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 59134,
                        "src": "4224:20:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint24_$returns$_t_address_$",
                          "typeString": "function (address,address,uint24) view external returns (address)"
                        }
                      },
                      "id": 79753,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4224:54:130",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 79756,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4290:1:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 79755,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4282:7:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 79754,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4282:7:130",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 79757,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4282:10:130",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4224:68:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 79763,
                  "nodeType": "IfStatement",
                  "src": "4220:134:130",
                  "trueBody": {
                    "id": 79762,
                    "nodeType": "Block",
                    "src": "4294:60:130",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 79759,
                            "name": "Callback_Params_PoolExists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78660,
                            "src": "4315:26:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 79760,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4315:28:130",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 79761,
                        "nodeType": "RevertStatement",
                        "src": "4308:35:130"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [78877],
            "documentation": {
              "id": 79698,
              "nodeType": "StructuredDocumentation",
              "src": "3236:347:130",
              "text": "@inheritdoc BaseDirectToLiquidity\n @dev        This function performs the following:\n             - Validates the input data\n             This function reverts if:\n             - OnCreateParams.implParams.poolFee is not enabled\n             - The pool for the token and fee combination already exists"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "__onCreate",
            "nameLocation": "3597:10:130",
            "overrides": {
              "id": 79714,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3790:8:130"
            },
            "parameters": {
              "id": 79713,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79700,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 79765,
                  "src": "3617:6:130",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 79699,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "3617:6:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79702,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 79765,
                  "src": "3633:7:130",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 79701,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3633:7:130",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79704,
                  "mutability": "mutable",
                  "name": "baseToken_",
                  "nameLocation": "3658:10:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 79765,
                  "src": "3650:18:130",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 79703,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3650:7:130",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79706,
                  "mutability": "mutable",
                  "name": "quoteToken_",
                  "nameLocation": "3686:11:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 79765,
                  "src": "3678:19:130",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 79705,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3678:7:130",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79708,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 79765,
                  "src": "3707:7:130",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 79707,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3707:7:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79710,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 79765,
                  "src": "3724:4:130",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 79709,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3724:4:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79712,
                  "mutability": "mutable",
                  "name": "callbackData_",
                  "nameLocation": "3753:13:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 79765,
                  "src": "3738:28:130",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 79711,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3738:5:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3607:165:130"
            },
            "returnParameters": {
              "id": 79715,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3799:0:130"
            },
            "scope": 80071,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 79995,
            "nodeType": "FunctionDefinition",
            "src": "5090:4285:130",
            "nodes": [],
            "body": {
              "id": 79994,
              "nodeType": "Block",
              "src": "5358:4017:130",
              "nodes": [],
              "statements": [
                {
                  "assignments": [79787],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 79787,
                      "mutability": "mutable",
                      "name": "params",
                      "nameLocation": "5426:6:130",
                      "nodeType": "VariableDeclaration",
                      "scope": 79994,
                      "src": "5404:28:130",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_OnSettleParams_$79642_memory_ptr",
                        "typeString": "struct UniswapV3DirectToLiquidity.OnSettleParams"
                      },
                      "typeName": {
                        "id": 79786,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 79785,
                          "name": "OnSettleParams",
                          "nameLocations": ["5404:14:130"],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 79642,
                          "src": "5404:14:130"
                        },
                        "referencedDeclaration": 79642,
                        "src": "5404:14:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OnSettleParams_$79642_storage_ptr",
                          "typeString": "struct UniswapV3DirectToLiquidity.OnSettleParams"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 79794,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 79790,
                        "name": "callbackData_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79778,
                        "src": "5446:13:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 79791,
                            "name": "OnSettleParams",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79642,
                            "src": "5462:14:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_OnSettleParams_$79642_storage_ptr_$",
                              "typeString": "type(struct UniswapV3DirectToLiquidity.OnSettleParams storage pointer)"
                            }
                          }
                        ],
                        "id": 79792,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "5461:16:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_OnSettleParams_$79642_storage_ptr_$",
                          "typeString": "type(struct UniswapV3DirectToLiquidity.OnSettleParams storage pointer)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_struct$_OnSettleParams_$79642_storage_ptr_$",
                          "typeString": "type(struct UniswapV3DirectToLiquidity.OnSettleParams storage pointer)"
                        }
                      ],
                      "expression": {
                        "id": 79788,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "5435:3:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 79789,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "5439:6:130",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "5435:10:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 79793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5435:43:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OnSettleParams_$79642_memory_ptr",
                      "typeString": "struct UniswapV3DirectToLiquidity.OnSettleParams memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5404:74:130"
                },
                {
                  "assignments": [79796],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 79796,
                      "mutability": "mutable",
                      "name": "poolFee",
                      "nameLocation": "5549:7:130",
                      "nodeType": "VariableDeclaration",
                      "scope": 79994,
                      "src": "5542:14:130",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      },
                      "typeName": {
                        "id": 79795,
                        "name": "uint24",
                        "nodeType": "ElementaryTypeName",
                        "src": "5542:6:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 79807,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 79799,
                            "name": "lotConfiguration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78707,
                            "src": "5571:16:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint96_$_t_struct$_DTLConfiguration_$78684_storage_$",
                              "typeString": "mapping(uint96 => struct BaseDirectToLiquidity.DTLConfiguration storage ref)"
                            }
                          },
                          "id": 79801,
                          "indexExpression": {
                            "id": 79800,
                            "name": "lotId_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79768,
                            "src": "5588:6:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5571:24:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DTLConfiguration_$78684_storage",
                            "typeString": "struct BaseDirectToLiquidity.DTLConfiguration storage ref"
                          }
                        },
                        "id": 79802,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5596:10:130",
                        "memberName": "implParams",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 78683,
                        "src": "5571:35:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 79804,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5609:6:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint24_$",
                              "typeString": "type(uint24)"
                            },
                            "typeName": {
                              "id": 79803,
                              "name": "uint24",
                              "nodeType": "ElementaryTypeName",
                              "src": "5609:6:130",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 79805,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "5608:8:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint24_$",
                          "typeString": "type(uint24)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_type$_t_uint24_$",
                          "typeString": "type(uint24)"
                        }
                      ],
                      "expression": {
                        "id": 79797,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "5560:3:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 79798,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "5564:6:130",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "5560:10:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 79806,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5560:57:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5541:76:130"
                },
                {
                  "assignments": [79809],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 79809,
                      "mutability": "mutable",
                      "name": "quoteTokenIsToken0",
                      "nameLocation": "5677:18:130",
                      "nodeType": "VariableDeclaration",
                      "scope": 79994,
                      "src": "5672:23:130",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 79808,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "5672:4:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 79813,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 79812,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 79810,
                      "name": "quoteToken_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79770,
                      "src": "5698:11:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 79811,
                      "name": "baseToken_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79774,
                      "src": "5712:10:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5698:24:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5672:50:130"
                },
                {
                  "id": 79837,
                  "nodeType": "Block",
                  "src": "5788:632:130",
                  "statements": [
                    {
                      "assignments": [79815],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 79815,
                          "mutability": "mutable",
                          "name": "sqrtPriceX96",
                          "nameLocation": "5848:12:130",
                          "nodeType": "VariableDeclaration",
                          "scope": 79837,
                          "src": "5840:20:130",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          },
                          "typeName": {
                            "id": 79814,
                            "name": "uint160",
                            "nodeType": "ElementaryTypeName",
                            "src": "5840:7:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 79823,
                      "initialValue": {
                        "arguments": [
                          {
                            "id": 79818,
                            "name": "quoteToken_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79770,
                            "src": "5910:11:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 79819,
                            "name": "baseToken_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79774,
                            "src": "5923:10:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 79820,
                            "name": "quoteTokenAmount_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79772,
                            "src": "5935:17:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 79821,
                            "name": "baseTokenAmount_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79776,
                            "src": "5954:16:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 79816,
                            "name": "SqrtPriceMath",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 85182,
                            "src": "5863:13:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_SqrtPriceMath_$85182_$",
                              "typeString": "type(library SqrtPriceMath)"
                            }
                          },
                          "id": 79817,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5877:15:130",
                          "memberName": "getSqrtPriceX96",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 85181,
                          "src": "5863:29:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint160_$",
                            "typeString": "function (address,address,uint256,uint256) pure returns (uint160)"
                          }
                        },
                        "id": 79822,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5863:121:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "5840:144:130"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "condition": {
                              "id": 79825,
                              "name": "quoteTokenIsToken0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79809,
                              "src": "6232:18:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseExpression": {
                              "id": 79827,
                              "name": "baseToken_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79774,
                              "src": "6267:10:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 79828,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "Conditional",
                            "src": "6232:45:130",
                            "trueExpression": {
                              "id": 79826,
                              "name": "quoteToken_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79770,
                              "src": "6253:11:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "condition": {
                              "id": 79829,
                              "name": "quoteTokenIsToken0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79809,
                              "src": "6295:18:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseExpression": {
                              "id": 79831,
                              "name": "quoteToken_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79770,
                              "src": "6329:11:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 79832,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "Conditional",
                            "src": "6295:45:130",
                            "trueExpression": {
                              "id": 79830,
                              "name": "baseToken_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79774,
                              "src": "6316:10:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 79833,
                            "name": "poolFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79796,
                            "src": "6358:7:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint24",
                              "typeString": "uint24"
                            }
                          },
                          {
                            "id": 79834,
                            "name": "sqrtPriceX96",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79815,
                            "src": "6383:12:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint24",
                              "typeString": "uint24"
                            },
                            {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          ],
                          "id": 79824,
                          "name": "_createAndInitializePoolIfNecessary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80070,
                          "src": "6179:35:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint24_$_t_uint160_$returns$_t_address_$",
                            "typeString": "function (address,address,uint24,uint160) returns (address)"
                          }
                        },
                        "id": 79835,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6179:230:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 79836,
                      "nodeType": "ExpressionStatement",
                      "src": "6179:230:130"
                    }
                  ]
                },
                {
                  "assignments": [79839],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 79839,
                      "mutability": "mutable",
                      "name": "poolTokenAddress",
                      "nameLocation": "6471:16:130",
                      "nodeType": "VariableDeclaration",
                      "scope": 79994,
                      "src": "6463:24:130",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 79838,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6463:7:130",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 79840,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6463:24:130"
                },
                {
                  "id": 79875,
                  "nodeType": "Block",
                  "src": "6497:714:130",
                  "statements": [
                    {
                      "assignments": [79842],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 79842,
                          "mutability": "mutable",
                          "name": "tickSpacing",
                          "nameLocation": "6610:11:130",
                          "nodeType": "VariableDeclaration",
                          "scope": 79875,
                          "src": "6604:17:130",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          },
                          "typeName": {
                            "id": 79841,
                            "name": "int24",
                            "nodeType": "ElementaryTypeName",
                            "src": "6604:5:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 79847,
                      "initialValue": {
                        "arguments": [
                          {
                            "id": 79845,
                            "name": "poolFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79796,
                            "src": "6658:7:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint24",
                              "typeString": "uint24"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint24",
                              "typeString": "uint24"
                            }
                          ],
                          "expression": {
                            "id": 79843,
                            "name": "uniV3Factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79646,
                            "src": "6624:12:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IUniswapV3Factory_$59161",
                              "typeString": "contract IUniswapV3Factory"
                            }
                          },
                          "id": 79844,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6637:20:130",
                          "memberName": "feeAmountTickSpacing",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59122,
                          "src": "6624:33:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint24_$returns$_t_int24_$",
                            "typeString": "function (uint24) view external returns (int24)"
                          }
                        },
                        "id": 79846,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6624:42:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "6604:62:130"
                    },
                    {
                      "expression": {
                        "id": 79873,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 79848,
                          "name": "poolTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79839,
                          "src": "6868:16:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "condition": {
                                "id": 79851,
                                "name": "quoteTokenIsToken0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 79809,
                                "src": "6927:18:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseExpression": {
                                "id": 79853,
                                "name": "baseToken_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 79774,
                                "src": "6962:10:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 79854,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "Conditional",
                              "src": "6927:45:130",
                              "trueExpression": {
                                "id": 79852,
                                "name": "quoteToken_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 79770,
                                "src": "6948:11:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "condition": {
                                "id": 79855,
                                "name": "quoteTokenIsToken0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 79809,
                                "src": "6990:18:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseExpression": {
                                "id": 79857,
                                "name": "quoteToken_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 79770,
                                "src": "7024:11:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 79858,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "Conditional",
                              "src": "6990:45:130",
                              "trueExpression": {
                                "id": 79856,
                                "name": "baseToken_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 79774,
                                "src": "7011:10:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 79859,
                              "name": "poolFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79796,
                              "src": "7053:7:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint24",
                                "typeString": "uint24"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              },
                              "id": 79865,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                },
                                "id": 79863,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 79860,
                                    "name": "TickMath",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 63298,
                                    "src": "7078:8:130",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_TickMath_$63298_$",
                                      "typeString": "type(library TickMath)"
                                    }
                                  },
                                  "id": 79861,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "7087:8:130",
                                  "memberName": "MIN_TICK",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 62764,
                                  "src": "7078:17:130",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int24",
                                    "typeString": "int24"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "id": 79862,
                                  "name": "tickSpacing",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 79842,
                                  "src": "7098:11:130",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int24",
                                    "typeString": "int24"
                                  }
                                },
                                "src": "7078:31:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 79864,
                                "name": "tickSpacing",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 79842,
                                "src": "7112:11:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                }
                              },
                              "src": "7078:45:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              },
                              "id": 79871,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                },
                                "id": 79869,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 79866,
                                    "name": "TickMath",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 63298,
                                    "src": "7141:8:130",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_TickMath_$63298_$",
                                      "typeString": "type(library TickMath)"
                                    }
                                  },
                                  "id": 79867,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "7150:8:130",
                                  "memberName": "MAX_TICK",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 62769,
                                  "src": "7141:17:130",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int24",
                                    "typeString": "int24"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "id": 79868,
                                  "name": "tickSpacing",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 79842,
                                  "src": "7161:11:130",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int24",
                                    "typeString": "int24"
                                  }
                                },
                                "src": "7141:31:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 79870,
                                "name": "tickSpacing",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 79842,
                                "src": "7175:11:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                }
                              },
                              "src": "7141:45:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint24",
                                "typeString": "uint24"
                              },
                              {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              },
                              {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            ],
                            "expression": {
                              "id": 79849,
                              "name": "gUniFactory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79650,
                              "src": "6887:11:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IGUniFactory_$46924",
                                "typeString": "contract IGUniFactory"
                              }
                            },
                            "id": 79850,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6899:10:130",
                            "memberName": "createPool",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 46906,
                            "src": "6887:22:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint24_$_t_int24_$_t_int24_$returns$_t_address_$",
                              "typeString": "function (address,address,uint24,int24,int24) external returns (address)"
                            }
                          },
                          "id": 79872,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6887:313:130",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6868:332:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 79874,
                      "nodeType": "ExpressionStatement",
                      "src": "6868:332:130"
                    }
                  ]
                },
                {
                  "id": 79987,
                  "nodeType": "Block",
                  "src": "7254:2069:130",
                  "statements": [
                    {
                      "assignments": [79878],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 79878,
                          "mutability": "mutable",
                          "name": "gUniPoolToken",
                          "nameLocation": "7277:13:130",
                          "nodeType": "VariableDeclaration",
                          "scope": 79987,
                          "src": "7268:22:130",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GUniPool_$46220",
                            "typeString": "contract GUniPool"
                          },
                          "typeName": {
                            "id": 79877,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 79876,
                              "name": "GUniPool",
                              "nameLocations": ["7268:8:130"],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 46220,
                              "src": "7268:8:130"
                            },
                            "referencedDeclaration": 46220,
                            "src": "7268:8:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GUniPool_$46220",
                              "typeString": "contract GUniPool"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 79882,
                      "initialValue": {
                        "arguments": [
                          {
                            "id": 79880,
                            "name": "poolTokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79839,
                            "src": "7302:16:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 79879,
                          "name": "GUniPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46220,
                          "src": "7293:8:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_GUniPool_$46220_$",
                            "typeString": "type(contract GUniPool)"
                          }
                        },
                        "id": 79881,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7293:26:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GUniPool_$46220",
                          "typeString": "contract GUniPool"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "7268:51:130"
                    },
                    {
                      "assignments": [79884, 79886, 79888],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 79884,
                          "mutability": "mutable",
                          "name": "amount0Actual",
                          "nameLocation": "7460:13:130",
                          "nodeType": "VariableDeclaration",
                          "scope": 79987,
                          "src": "7452:21:130",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 79883,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "7452:7:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 79886,
                          "mutability": "mutable",
                          "name": "amount1Actual",
                          "nameLocation": "7483:13:130",
                          "nodeType": "VariableDeclaration",
                          "scope": 79987,
                          "src": "7475:21:130",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 79885,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "7475:7:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 79888,
                          "mutability": "mutable",
                          "name": "poolTokenQuantity",
                          "nameLocation": "7506:17:130",
                          "nodeType": "VariableDeclaration",
                          "scope": 79987,
                          "src": "7498:25:130",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 79887,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "7498:7:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 79900,
                      "initialValue": {
                        "arguments": [
                          {
                            "condition": {
                              "id": 79891,
                              "name": "quoteTokenIsToken0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79809,
                              "src": "7585:18:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseExpression": {
                              "id": 79893,
                              "name": "baseTokenAmount_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79776,
                              "src": "7626:16:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 79894,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "Conditional",
                            "src": "7585:57:130",
                            "trueExpression": {
                              "id": 79892,
                              "name": "quoteTokenAmount_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79772,
                              "src": "7606:17:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "condition": {
                              "id": 79895,
                              "name": "quoteTokenIsToken0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79809,
                              "src": "7660:18:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseExpression": {
                              "id": 79897,
                              "name": "quoteTokenAmount_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79772,
                              "src": "7700:17:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 79898,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "Conditional",
                            "src": "7660:57:130",
                            "trueExpression": {
                              "id": 79896,
                              "name": "baseTokenAmount_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79776,
                              "src": "7681:16:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 79889,
                            "name": "gUniPoolToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79878,
                            "src": "7539:13:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GUniPool_$46220",
                              "typeString": "contract GUniPool"
                            }
                          },
                          "id": 79890,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7553:14:130",
                          "memberName": "getMintAmounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 45107,
                          "src": "7539:28:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
                            "typeString": "function (uint256,uint256) view external returns (uint256,uint256,uint256)"
                          }
                        },
                        "id": 79899,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7539:192:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                          "typeString": "tuple(uint256,uint256,uint256)"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "7451:280:130"
                    },
                    {
                      "id": 79938,
                      "nodeType": "Block",
                      "src": "7796:655:130",
                      "statements": [
                        {
                          "assignments": [79902],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 79902,
                              "mutability": "mutable",
                              "name": "quoteTokenRequired",
                              "nameLocation": "7822:18:130",
                              "nodeType": "VariableDeclaration",
                              "scope": 79938,
                              "src": "7814:26:130",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 79901,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "7814:7:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 79907,
                          "initialValue": {
                            "condition": {
                              "id": 79903,
                              "name": "quoteTokenIsToken0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79809,
                              "src": "7843:18:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseExpression": {
                              "id": 79905,
                              "name": "amount1Actual",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79886,
                              "src": "7880:13:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 79906,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "Conditional",
                            "src": "7843:50:130",
                            "trueExpression": {
                              "id": 79904,
                              "name": "amount0Actual",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79884,
                              "src": "7864:13:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "7814:79:130"
                        },
                        {
                          "assignments": [79909],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 79909,
                              "mutability": "mutable",
                              "name": "lower",
                              "nameLocation": "8064:5:130",
                              "nodeType": "VariableDeclaration",
                              "scope": 79938,
                              "src": "8056:13:130",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 79908,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "8056:7:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 79915,
                          "initialValue": {
                            "arguments": [
                              {
                                "id": 79911,
                                "name": "quoteTokenAmount_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 79772,
                                "src": "8095:17:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 79912,
                                  "name": "params",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 79787,
                                  "src": "8114:6:130",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_OnSettleParams_$79642_memory_ptr",
                                    "typeString": "struct UniswapV3DirectToLiquidity.OnSettleParams memory"
                                  }
                                },
                                "id": 79913,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8121:11:130",
                                "memberName": "maxSlippage",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 79641,
                                "src": "8114:18:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint24",
                                  "typeString": "uint24"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint24",
                                  "typeString": "uint24"
                                }
                              ],
                              "id": 79910,
                              "name": "_getAmountWithSlippage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79277,
                              "src": "8072:22:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint24_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint24) pure returns (uint256)"
                              }
                            },
                            "id": 79914,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8072:61:130",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "8056:77:130"
                        },
                        {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 79918,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 79916,
                              "name": "quoteTokenRequired",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79902,
                              "src": "8155:18:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "id": 79917,
                              "name": "lower",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79909,
                              "src": "8176:5:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "8155:26:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 79926,
                          "nodeType": "IfStatement",
                          "src": "8151:137:130",
                          "trueBody": {
                            "id": 79925,
                            "nodeType": "Block",
                            "src": "8183:105:130",
                            "statements": [
                              {
                                "errorCall": {
                                  "arguments": [
                                    {
                                      "id": 79920,
                                      "name": "quoteToken_",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 79770,
                                      "src": "8230:11:130",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 79921,
                                      "name": "quoteTokenRequired",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 79902,
                                      "src": "8243:18:130",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "id": 79922,
                                      "name": "lower",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 79909,
                                      "src": "8263:5:130",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 79919,
                                    "name": "Callback_Slippage",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 79639,
                                    "src": "8212:17:130",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                                      "typeString": "function (address,uint256,uint256) pure"
                                    }
                                  },
                                  "id": 79923,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8212:57:130",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 79924,
                                "nodeType": "RevertStatement",
                                "src": "8205:64:130"
                              }
                            ]
                          }
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 79933,
                                    "name": "poolTokenAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 79839,
                                    "src": "8398:16:130",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 79932,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "8390:7:130",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 79931,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "8390:7:130",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 79934,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8390:25:130",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 79935,
                                "name": "quoteTokenRequired",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 79902,
                                "src": "8417:18:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 79928,
                                    "name": "quoteToken_",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 79770,
                                    "src": "8369:11:130",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 79927,
                                  "name": "ERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 54862,
                                  "src": "8363:5:130",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_ERC20_$54862_$",
                                    "typeString": "type(contract ERC20)"
                                  }
                                },
                                "id": 79929,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8363:18:130",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$54862",
                                  "typeString": "contract ERC20"
                                }
                              },
                              "id": 79930,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8382:7:130",
                              "memberName": "approve",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 54579,
                              "src": "8363:26:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function (address,uint256) external returns (bool)"
                              }
                            },
                            "id": 79936,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8363:73:130",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 79937,
                          "nodeType": "ExpressionStatement",
                          "src": "8363:73:130"
                        }
                      ]
                    },
                    {
                      "id": 79976,
                      "nodeType": "Block",
                      "src": "8464:646:130",
                      "statements": [
                        {
                          "assignments": [79940],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 79940,
                              "mutability": "mutable",
                              "name": "baseTokenRequired",
                              "nameLocation": "8490:17:130",
                              "nodeType": "VariableDeclaration",
                              "scope": 79976,
                              "src": "8482:25:130",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 79939,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "8482:7:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 79945,
                          "initialValue": {
                            "condition": {
                              "id": 79941,
                              "name": "quoteTokenIsToken0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79809,
                              "src": "8510:18:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseExpression": {
                              "id": 79943,
                              "name": "amount0Actual",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79884,
                              "src": "8547:13:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 79944,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "Conditional",
                            "src": "8510:50:130",
                            "trueExpression": {
                              "id": 79942,
                              "name": "amount1Actual",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79886,
                              "src": "8531:13:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "8482:78:130"
                        },
                        {
                          "assignments": [79947],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 79947,
                              "mutability": "mutable",
                              "name": "lower",
                              "nameLocation": "8729:5:130",
                              "nodeType": "VariableDeclaration",
                              "scope": 79976,
                              "src": "8721:13:130",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 79946,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "8721:7:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 79953,
                          "initialValue": {
                            "arguments": [
                              {
                                "id": 79949,
                                "name": "baseTokenAmount_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 79776,
                                "src": "8760:16:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 79950,
                                  "name": "params",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 79787,
                                  "src": "8778:6:130",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_OnSettleParams_$79642_memory_ptr",
                                    "typeString": "struct UniswapV3DirectToLiquidity.OnSettleParams memory"
                                  }
                                },
                                "id": 79951,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8785:11:130",
                                "memberName": "maxSlippage",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 79641,
                                "src": "8778:18:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint24",
                                  "typeString": "uint24"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint24",
                                  "typeString": "uint24"
                                }
                              ],
                              "id": 79948,
                              "name": "_getAmountWithSlippage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79277,
                              "src": "8737:22:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint24_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint24) pure returns (uint256)"
                              }
                            },
                            "id": 79952,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8737:60:130",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "8721:76:130"
                        },
                        {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 79956,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 79954,
                              "name": "baseTokenRequired",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79940,
                              "src": "8819:17:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "id": 79955,
                              "name": "lower",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79947,
                              "src": "8839:5:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "8819:25:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 79964,
                          "nodeType": "IfStatement",
                          "src": "8815:134:130",
                          "trueBody": {
                            "id": 79963,
                            "nodeType": "Block",
                            "src": "8846:103:130",
                            "statements": [
                              {
                                "errorCall": {
                                  "arguments": [
                                    {
                                      "id": 79958,
                                      "name": "baseToken_",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 79774,
                                      "src": "8893:10:130",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 79959,
                                      "name": "baseTokenRequired",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 79940,
                                      "src": "8905:17:130",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "id": 79960,
                                      "name": "lower",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 79947,
                                      "src": "8924:5:130",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 79957,
                                    "name": "Callback_Slippage",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 79639,
                                    "src": "8875:17:130",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                                      "typeString": "function (address,uint256,uint256) pure"
                                    }
                                  },
                                  "id": 79961,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8875:55:130",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 79962,
                                "nodeType": "RevertStatement",
                                "src": "8868:62:130"
                              }
                            ]
                          }
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 79971,
                                    "name": "poolTokenAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 79839,
                                    "src": "9058:16:130",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 79970,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "9050:7:130",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 79969,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "9050:7:130",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 79972,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9050:25:130",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 79973,
                                "name": "baseTokenRequired",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 79940,
                                "src": "9077:17:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 79966,
                                    "name": "baseToken_",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 79774,
                                    "src": "9030:10:130",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 79965,
                                  "name": "ERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 54862,
                                  "src": "9024:5:130",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_ERC20_$54862_$",
                                    "typeString": "type(contract ERC20)"
                                  }
                                },
                                "id": 79967,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9024:17:130",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$54862",
                                  "typeString": "contract ERC20"
                                }
                              },
                              "id": 79968,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9042:7:130",
                              "memberName": "approve",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 54579,
                              "src": "9024:25:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function (address,uint256) external returns (bool)"
                              }
                            },
                            "id": 79974,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9024:71:130",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 79975,
                          "nodeType": "ExpressionStatement",
                          "src": "9024:71:130"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 79980,
                            "name": "poolTokenQuantity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79888,
                            "src": "9279:17:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 79983,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "9306:4:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_UniswapV3DirectToLiquidity_$80071",
                                  "typeString": "contract UniswapV3DirectToLiquidity"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_UniswapV3DirectToLiquidity_$80071",
                                  "typeString": "contract UniswapV3DirectToLiquidity"
                                }
                              ],
                              "id": 79982,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9298:7:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 79981,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9298:7:130",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 79984,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9298:13:130",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 79977,
                            "name": "gUniPoolToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79878,
                            "src": "9260:13:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GUniPool_$46220",
                              "typeString": "contract GUniPool"
                            }
                          },
                          "id": 79979,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9274:4:130",
                          "memberName": "mint",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44445,
                          "src": "9260:18:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$_t_uint256_$_t_uint256_$_t_uint128_$",
                            "typeString": "function (uint256,address) external returns (uint256,uint256,uint128)"
                          }
                        },
                        "id": 79985,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9260:52:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint128_$",
                          "typeString": "tuple(uint256,uint256,uint128)"
                        }
                      },
                      "id": 79986,
                      "nodeType": "ExpressionStatement",
                      "src": "9260:52:130"
                    }
                  ]
                },
                {
                  "expression": {
                    "id": 79992,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 79988,
                      "name": "poolToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79783,
                      "src": "9333:9:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$54862",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 79990,
                          "name": "poolTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79839,
                          "src": "9351:16:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 79989,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54862,
                        "src": "9345:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$54862_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 79991,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9345:23:130",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$54862",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "9333:35:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$54862",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 79993,
                  "nodeType": "ExpressionStatement",
                  "src": "9333:35:130"
                }
              ]
            },
            "baseFunctions": [79246],
            "documentation": {
              "id": 79766,
              "nodeType": "StructuredDocumentation",
              "src": "4366:719:130",
              "text": "@inheritdoc BaseDirectToLiquidity\n @dev        This function performs the following:\n             - Creates and initializes the pool, if necessary\n             - Deploys a pool token to wrap the Uniswap V3 position as an ERC-20 using GUni\n             - Uses the `GUniPool.getMintAmounts()` function to calculate the quantity of quote and base tokens required, given the current pool liquidity\n             - Mint the LP tokens\n             The assumptions are:\n             - the callback has `quoteTokenAmount_` quantity of quote tokens (as `receiveQuoteTokens` flag is set)\n             - the callback has `baseTokenAmount_` quantity of base tokens"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mintAndDeposit",
            "nameLocation": "5099:15:130",
            "overrides": {
              "id": 79780,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5323:8:130"
            },
            "parameters": {
              "id": 79779,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79768,
                  "mutability": "mutable",
                  "name": "lotId_",
                  "nameLocation": "5131:6:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 79995,
                  "src": "5124:13:130",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 79767,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "5124:6:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79770,
                  "mutability": "mutable",
                  "name": "quoteToken_",
                  "nameLocation": "5155:11:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 79995,
                  "src": "5147:19:130",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 79769,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5147:7:130",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79772,
                  "mutability": "mutable",
                  "name": "quoteTokenAmount_",
                  "nameLocation": "5184:17:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 79995,
                  "src": "5176:25:130",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 79771,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5176:7:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79774,
                  "mutability": "mutable",
                  "name": "baseToken_",
                  "nameLocation": "5219:10:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 79995,
                  "src": "5211:18:130",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 79773,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5211:7:130",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79776,
                  "mutability": "mutable",
                  "name": "baseTokenAmount_",
                  "nameLocation": "5247:16:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 79995,
                  "src": "5239:24:130",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 79775,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5239:7:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79778,
                  "mutability": "mutable",
                  "name": "callbackData_",
                  "nameLocation": "5286:13:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 79995,
                  "src": "5273:26:130",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 79777,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5273:5:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5114:191:130"
            },
            "returnParameters": {
              "id": 79784,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79783,
                  "mutability": "mutable",
                  "name": "poolToken",
                  "nameLocation": "5347:9:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 79995,
                  "src": "5341:15:130",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$54862",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 79782,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 79781,
                      "name": "ERC20",
                      "nameLocations": ["5341:5:130"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54862,
                      "src": "5341:5:130"
                    },
                    "referencedDeclaration": 54862,
                    "src": "5341:5:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$54862",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5340:17:130"
            },
            "scope": 80071,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 80070,
            "nodeType": "FunctionDefinition",
            "src": "9509:669:130",
            "nodes": [],
            "body": {
              "id": 80069,
              "nodeType": "Block",
              "src": "9690:488:130",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 80012,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 80010,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79998,
                          "src": "9708:6:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 80011,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80000,
                          "src": "9717:6:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9708:15:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_bool", "typeString": "bool" }
                      ],
                      "id": 80009,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "9700:7:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 80013,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9700:24:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80014,
                  "nodeType": "ExpressionStatement",
                  "src": "9700:24:130"
                },
                {
                  "expression": {
                    "id": 80022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 80015,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80007,
                      "src": "9734:4:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 80018,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79998,
                          "src": "9762:6:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 80019,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80000,
                          "src": "9770:6:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 80020,
                          "name": "fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80002,
                          "src": "9778:3:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        ],
                        "expression": {
                          "id": 80016,
                          "name": "uniV3Factory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79646,
                          "src": "9741:12:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IUniswapV3Factory_$59161",
                            "typeString": "contract IUniswapV3Factory"
                          }
                        },
                        "id": 80017,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9754:7:130",
                        "memberName": "getPool",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 59134,
                        "src": "9741:20:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint24_$returns$_t_address_$",
                          "typeString": "function (address,address,uint24) view external returns (address)"
                        }
                      },
                      "id": 80021,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9741:41:130",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9734:48:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 80023,
                  "nodeType": "ExpressionStatement",
                  "src": "9734:48:130"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 80029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 80024,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80007,
                      "src": "9797:4:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 80027,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9813:1:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 80026,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "9805:7:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 80025,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9805:7:130",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 80028,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9805:10:130",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9797:18:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 80067,
                    "nodeType": "Block",
                    "src": "9958:214:130",
                    "statements": [
                      {
                        "assignments": [
                          80048,
                          null,
                          null,
                          null,
                          null,
                          null,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 80048,
                            "mutability": "mutable",
                            "name": "sqrtPriceX96Existing",
                            "nameLocation": "9981:20:130",
                            "nodeType": "VariableDeclaration",
                            "scope": 80067,
                            "src": "9973:28:130",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            },
                            "typeName": {
                              "id": 80047,
                              "name": "uint160",
                              "nodeType": "ElementaryTypeName",
                              "src": "9973:7:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint160",
                                "typeString": "uint160"
                              }
                            },
                            "visibility": "internal"
                          },
                          null,
                          null,
                          null,
                          null,
                          null,
                          null
                        ],
                        "id": 80054,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 80050,
                                  "name": "pool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 80007,
                                  "src": "10026:4:130",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 80049,
                                "name": "IUniswapV3Pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59193,
                                "src": "10011:14:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$59193_$",
                                  "typeString": "type(contract IUniswapV3Pool)"
                                }
                              },
                              "id": 80051,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10011:20:130",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IUniswapV3Pool_$59193",
                                "typeString": "contract IUniswapV3Pool"
                              }
                            },
                            "id": 80052,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10032:5:130",
                            "memberName": "slot0",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 59614,
                            "src": "10011:26:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
                              "typeString": "function () view external returns (uint160,int24,uint16,uint16,uint16,uint8,bool)"
                            }
                          },
                          "id": 80053,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10011:28:130",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
                            "typeString": "tuple(uint160,int24,uint16,uint16,uint16,uint8,bool)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9972:67:130"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          },
                          "id": 80057,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 80055,
                            "name": "sqrtPriceX96Existing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80048,
                            "src": "10057:20:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 80056,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10081:1:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "10057:25:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 80066,
                        "nodeType": "IfStatement",
                        "src": "10053:109:130",
                        "trueBody": {
                          "id": 80065,
                          "nodeType": "Block",
                          "src": "10084:78:130",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 80062,
                                    "name": "sqrtPriceX96",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 80004,
                                    "src": "10134:12:130",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint160",
                                      "typeString": "uint160"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint160",
                                      "typeString": "uint160"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 80059,
                                        "name": "pool",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 80007,
                                        "src": "10117:4:130",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 80058,
                                      "name": "IUniswapV3Pool",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 59193,
                                      "src": "10102:14:130",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$59193_$",
                                        "typeString": "type(contract IUniswapV3Pool)"
                                      }
                                    },
                                    "id": 80060,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10102:20:130",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IUniswapV3Pool_$59193",
                                      "typeString": "contract IUniswapV3Pool"
                                    }
                                  },
                                  "id": 80061,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "10123:10:130",
                                  "memberName": "initialize",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 59262,
                                  "src": "10102:31:130",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_uint160_$returns$__$",
                                    "typeString": "function (uint160) external"
                                  }
                                },
                                "id": 80063,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10102:45:130",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 80064,
                              "nodeType": "ExpressionStatement",
                              "src": "10102:45:130"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 80068,
                  "nodeType": "IfStatement",
                  "src": "9793:379:130",
                  "trueBody": {
                    "id": 80046,
                    "nodeType": "Block",
                    "src": "9817:135:130",
                    "statements": [
                      {
                        "expression": {
                          "id": 80037,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 80030,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80007,
                            "src": "9831:4:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 80033,
                                "name": "token0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 79998,
                                "src": "9862:6:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 80034,
                                "name": "token1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 80000,
                                "src": "9870:6:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 80035,
                                "name": "fee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 80002,
                                "src": "9878:3:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint24",
                                  "typeString": "uint24"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint24",
                                  "typeString": "uint24"
                                }
                              ],
                              "expression": {
                                "id": 80031,
                                "name": "uniV3Factory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 79646,
                                "src": "9838:12:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IUniswapV3Factory_$59161",
                                  "typeString": "contract IUniswapV3Factory"
                                }
                              },
                              "id": 80032,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9851:10:130",
                              "memberName": "createPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 59146,
                              "src": "9838:23:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint24_$returns$_t_address_$",
                                "typeString": "function (address,address,uint24) external returns (address)"
                              }
                            },
                            "id": 80036,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9838:44:130",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9831:51:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 80038,
                        "nodeType": "ExpressionStatement",
                        "src": "9831:51:130"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 80043,
                              "name": "sqrtPriceX96",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80004,
                              "src": "9928:12:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint160",
                                "typeString": "uint160"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint160",
                                "typeString": "uint160"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 80040,
                                  "name": "pool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 80007,
                                  "src": "9911:4:130",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 80039,
                                "name": "IUniswapV3Pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59193,
                                "src": "9896:14:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$59193_$",
                                  "typeString": "type(contract IUniswapV3Pool)"
                                }
                              },
                              "id": 80041,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9896:20:130",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IUniswapV3Pool_$59193",
                                "typeString": "contract IUniswapV3Pool"
                              }
                            },
                            "id": 80042,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9917:10:130",
                            "memberName": "initialize",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 59262,
                            "src": "9896:31:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint160_$returns$__$",
                              "typeString": "function (uint160) external"
                            }
                          },
                          "id": 80044,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9896:45:130",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 80045,
                        "nodeType": "ExpressionStatement",
                        "src": "9896:45:130"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 79996,
              "nodeType": "StructuredDocumentation",
              "src": "9433:71:130",
              "text": "@dev    Copied from UniswapV3's PoolInitializer (which is GPL >= 2)"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_createAndInitializePoolIfNecessary",
            "nameLocation": "9518:35:130",
            "parameters": {
              "id": 80005,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79998,
                  "mutability": "mutable",
                  "name": "token0",
                  "nameLocation": "9571:6:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 80070,
                  "src": "9563:14:130",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 79997,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9563:7:130",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 80000,
                  "mutability": "mutable",
                  "name": "token1",
                  "nameLocation": "9595:6:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 80070,
                  "src": "9587:14:130",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 79999,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9587:7:130",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 80002,
                  "mutability": "mutable",
                  "name": "fee",
                  "nameLocation": "9618:3:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 80070,
                  "src": "9611:10:130",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 80001,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "9611:6:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 80004,
                  "mutability": "mutable",
                  "name": "sqrtPriceX96",
                  "nameLocation": "9639:12:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 80070,
                  "src": "9631:20:130",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint160",
                    "typeString": "uint160"
                  },
                  "typeName": {
                    "id": 80003,
                    "name": "uint160",
                    "nodeType": "ElementaryTypeName",
                    "src": "9631:7:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint160",
                      "typeString": "uint160"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9553:104:130"
            },
            "returnParameters": {
              "id": 80008,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80007,
                  "mutability": "mutable",
                  "name": "pool",
                  "nameLocation": "9684:4:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 80070,
                  "src": "9676:12:130",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 80006,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9676:7:130",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9675:14:130"
            },
            "scope": 80071,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 79628,
              "name": "BaseDirectToLiquidity",
              "nameLocations": ["1718:21:130"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 79365,
              "src": "1718:21:130"
            },
            "id": 79629,
            "nodeType": "InheritanceSpecifier",
            "src": "1718:21:130"
          }
        ],
        "canonicalName": "UniswapV3DirectToLiquidity",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 79627,
          "nodeType": "StructuredDocumentation",
          "src": "651:1028:130",
          "text": "@title      UniswapV3DirectToLiquidity\n @notice     This Callback contract deposits the proceeds from a batch auction into a Uniswap V3 pool\n             in order to create liquidity immediately.\n             The Uniswap V3 position is tokenised as an ERC-20 using [G-UNI](https://github.com/gelatodigital/g-uni-v1-core).\n             The LP tokens are transferred to `DTLConfiguration.recipient`, or can optionally vest to the auction seller.\n             An important risk to consider: if the auction's base token is available and liquid, a third-party\n             could front-run the auction by creating the pool before the auction ends. This would allow them to\n             manipulate the price of the pool and potentially profit from the eventual deposit of the auction proceeds.\n @dev        As a general rule, this callback contract does not retain balances of tokens between calls.\n             Transfers are performed within the same function that requires the balance."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [80071, 79365, 77713, 80608],
        "name": "UniswapV3DirectToLiquidity",
        "nameLocation": "1688:26:130",
        "scope": 80072,
        "usedErrors": [
          77357, 77359, 77361, 78648, 78650, 78658, 78660, 78662, 78664, 79631,
          79639, 81982
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 130
}
