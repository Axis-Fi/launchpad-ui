/* tslint:disable */
/* eslint-disable */
/**
 * Axis Points Server
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
/**
 * A JSON object containing information about a user's registration for a launch.
 * @export
 * @interface LaunchRegistration
 */
export interface LaunchRegistration {
  /**
   *
   * @type {number}
   * @memberof LaunchRegistration
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof LaunchRegistration
   */
  launchName?: string;
  /**
   *
   * @type {string}
   * @memberof LaunchRegistration
   */
  walletAddress?: string;
  /**
   *
   * @type {number}
   * @memberof LaunchRegistration
   */
  commitment?: number;
}

/**
 * Check if a given object implements the LaunchRegistration interface.
 */
export function instanceOfLaunchRegistration(value: object): boolean {
  let isInstance = true;

  return isInstance;
}

export function LaunchRegistrationFromJSON(json: any): LaunchRegistration {
  return LaunchRegistrationFromJSONTyped(json, false);
}

export function LaunchRegistrationFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): LaunchRegistration {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    id: !exists(json, "id") ? undefined : json["id"],
    launchName: !exists(json, "launch_name") ? undefined : json["launch_name"],
    walletAddress: !exists(json, "wallet_address")
      ? undefined
      : json["wallet_address"],
    commitment: !exists(json, "commitment") ? undefined : json["commitment"],
  };
}

export function LaunchRegistrationToJSON(
  value?: LaunchRegistration | null,
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    id: value.id,
    launch_name: value.launchName,
    wallet_address: value.walletAddress,
    commitment: value.commitment,
  };
}
